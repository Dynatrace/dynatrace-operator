{{- include "dynatrace-operator.platformRequired" . }}
{{ if eq (include "dynatrace-operator.partial" .) "false" }}
# Copyright 2021 Dynatrace LLC

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynatrace-webhook
  namespace: {{ .Release.Namespace }}
  labels:
      {{- include "dynatrace-operator.webhookLabels" . | nindent 4 }}
  {{- if .Values.webhook.labels }}
      {{- toYaml .Values.webhook.labels | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ (default false (.Values.webhook).highAvailability) | ternary 2 1 }}
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      {{- include "dynatrace-operator.webhookSelectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        dynatrace.com/inject: "false"
        kubectl.kubernetes.io/default-container: webhook
        {{- if (.Values.webhook).apparmor}}
        container.apparmor.security.beta.kubernetes.io/webhook: runtime/default
        {{- end }}
        {{- if .Values.webhook.annotations}}
        {{- toYaml .Values.webhook.annotations | nindent 8 }}
        {{- end }}
      labels:
        {{- include "dynatrace-operator.webhookLabels" . | nindent 8 }}
        {{- include "dynatrace-operator.webhookSelectorLabels" . | nindent 8 }}
        {{- if .Values.webhook.labels }}
        {{- toYaml .Values.webhook.labels | nindent 8 }}
        {{- end }}
    spec:
      {{- if (.Values.webhook).highAvailability }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "topology.kubernetes.io/zone"
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              {{- include "dynatrace-operator.webhookSelectorLabels" . | nindent 14 }}
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              {{- include "dynatrace-operator.webhookSelectorLabels" . | nindent 14 }}
      {{- end }}
      volumes:
      - emptyDir: {}
        name: certs-dir
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                    {{- if ne (include "dynatrace-operator.platform" .) "gke-autopilot"}}
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                      - ppc64le
                   {{- end }}
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - name: webhook
          args:
            - webhook-server
            # OLM mounts the certificates here, so we reuse it for simplicity
            - --certs-dir=/tmp/k8s-webhook-server/serving-certs/
          image: {{ include "dynatrace-operator.image" . }}
          imagePullPolicy: Always
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          readinessProbe:
            httpGet:
              path: /readyz
              port: livez
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /livez
              port: livez
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
          ports:
            - name: server-port
              containerPort: 8443
            - name: livez
              containerPort: 10080
          resources:
            requests:
              {{- toYaml (.Values.webhook).requests | nindent 14 }}
            limits:
              {{- toYaml (.Values.webhook).limits | nindent 14 }}
          volumeMounts:
            - name: certs-dir
              mountPath: /tmp/k8s-webhook-server/serving-certs/
          securityContext:
          {{- toYaml .Values.webhook.securityContext | nindent 12 }}
      serviceAccountName: dynatrace-webhook
      {{- if (.Values.webhook).hostNetwork }}
      hostNetwork: true
      {{- end }}
      securityContext:
        {{- toYaml .Values.webhook.podSecurityContext | nindent 8 }}
      {{- if .Values.customPullSecret }}
      imagePullSecrets:
        - name: {{ .Values.customPullSecret }}
      {{- end }}
      {{- if .Values.webhook.nodeSelector }}
      nodeSelector: {{- toYaml .Values.webhook.nodeSelector | nindent 8 }}
      {{- end }}
      tolerations:
        {{- if .Values.webhook.tolerations }}
        {{- toYaml .Values.webhook.tolerations | nindent 8 }}
        {{- end }}
        - key: kubernetes.io/arch
          value: arm64
          effect: NoSchedule
        - key: kubernetes.io/arch
          value: amd64
          effect: NoSchedule
        - key: kubernetes.io/arch
          value: ppc64le
          effect: NoSchedule
{{ end }}
