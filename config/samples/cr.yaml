apiVersion: dynatrace.com/v1alpha1
kind: DynaKube
metadata:
  name: dynakube
  namespace: dynatrace
spec:
  # dynatrace api url including `/api` path at the end
  # either set ENVIRONMENTID to the proper tenant id or change the apiUrl as a whole, e.q. for Managed
  apiUrl: https://ENVIRONMENTID.live.dynatrace.com/api

  # name of secret holding `apiToken` and `paasToken`
  # if unset, name of custom resource is used
  #
  # tokens: ""

  # Optional: Disable certificate validation checks for installer download and API communication
  #
  # skipCertCheck: false

  # Optional: Set custom proxy settings either directly or from a secret with the field 'proxy'
  #
  # proxy:
  #   value: https://my-proxy-url.com
  #   valueFrom: name-of-my-proxy-secret

  # Optional: Adds custom RootCAs from a configmap
  # trustedCAs: name-of-my-ca-configmap

  # Optional: Sets Network Zone for OneAgent and ActiveGate pods
  # Make sure networkZones are enabled on your cluster before (see https://www.dynatrace.com/support/help/setup-and-configuration/network-zones/network-zones-basic-info/)
  #
  # networkZone: name-of-my-network-zone

  # Optional: Defines a custom pull secret in case you use a private registry when pulling images from the dynatrace environment
  #
  # customPullSecret:

  # Optional: when enabled, and if Istio is installed on the Kubernetes environment, then the
  # Operator will create the corresponding VirtualService and ServiceEntry objects to allow access
  # to the Dynatrace cluster from the agent or the activeGate. Disabled by default.
  #
  # enableIstio: false

  # Configuration for ActiveGate instances.
  activeGate:
    # Optional: to use a custom ActiveGate Docker image.
    image: ""

  oneAgent:
    # Optional: The version of the OneAgent to be used when useImmutableImage is enabled. The latest is used by default.
    #
    # version:

    # Optional: to use a custom OneAgent Docker image. Defaults to docker.io/dynatrace/oneagent in
    # Kubernetes and registry.connect.redhat.com/dynatrace/oneagent in OpenShift.
    #
    image: ""

    # Optional: disables automatic restarts of oneagent pods in case a new version is available. True
    # by default.
    #
    # autoUpdate: true

  # To be released
  #
  # Configure pod monitoring
  codeModules:
    # Enable pod monitoring
    enabled: true

    # Optional: resource settings for injected OneAgent init-container. Consumption of the OneAgent heavily depends
    # on the workload to monitor; please adjust values accordingly.
    #
    # resources:
    #   requests:
    #     cpu: 100m
    #     memory: 512Mi
    #   limits:
    #     cpu: 300m
    #     memory: 1.5Gi

    # Optional: defines a volume where the oneagent binary will be taken from.
    # Defaults to installing the binary to an EmptyDir
    #
    # volume:
    #   name: my-custom-volume
    #   emptyDir: { }

    # Optional: name of the ServiceAccount to assign to the CSIDriver Pods.
    # Defaults to "dynatrace-oneagent-csi-driver"
    #
    # serviceAccountNameCSIDriver: service-account-name

  # To be released
  #
  # Configure infrastructure monitoring
  infraMonitoring:
    # Enable infrastructure monitoring
    enabled: true

    # Optional: node selector to control on which nodes the OneAgent will be deployed.
    #
    # nodeSelector: {}

    # Optional: tolerations to include with the OneAgent DaemonSet.
    # See more here: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists

    # Optional: resource settings for OneAgent container. Consumption of the OneAgent heavily depends
    # on the workload to monitor; please adjust values accordingly.
    #
    # resources:
    #   requests:
    #     cpu: 100m
    #     memory: 512Mi
    #   limits:
    #     cpu: 300m
    #     memory: 1.5Gi

    # Optional: arguments to add to the OneAgent installer.
    # Available options: https://www.dynatrace.com/support/help/shortlink/linux-custom-installation
    # Limitations: https://www.dynatrace.com/support/help/shortlink/oneagent-docker#limitations
    # args: []

    # Optional: additional environment variables to add to the OneAgent Pods.
    #
    # env: []

    # Optional: priority class to assign to the OneAgent Pods. By default no class is set.
    # See more here: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    #
    # priorityClassName: priority-class

    # Optional: DNS Policy for OneAgent pods. Defaults to ClusterFirstWithHostNet.
    # See more: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
    #
    # dnsPolicy: "ClusterFirstWithHostNet"

    # Optional: name of the ServiceAccount to assign to the OneAgent Pods. Defaults to
    # "dynatrace-dynakube-oneagent" in privileged mode or
    # "dynatrace-dynakube-oneagent-unprivileged" in unprivileged mode
    #
    # serviceAccountName: service-account-name

    # Optional: labels are customer defined labels for OneAgent Pods to structure workloads as desired.
    #
    # labels:
    #   custom: label

    # Optional: when enabled the OneAgent Pods will run as unprivileged. Enabled by default.
    #
    # useUnprivilegedMode: true

    # Optional: if enabled, the Operator will use the immutable image from the Dynatrace environment or from your custom
    # registry, otherwise an installer image is used. Disabled by default.
    #
    # useImmutableImage: false

    # To be released
    #
    # Optional: Enables and configures support for a read-only host filesystem
    #
    # readOnly:

    #   Enable support for read-only host filesystems
    #
    #   enabled: false

    #   Define which volume to use to store oneagent installation files
    #   Defaults to an empty-dir
    #
    #   installationVolume:
    #     emptyDir: {}

    #   Defines which user id to use for the installation process
    #   Defaults to 1001
    #
    #   userId: 1001

    #   Defines which group id to use for the installation process
    #   Defaults to 1001
    #
    #   groupId: 1001

  classicFullStack:
    # Enable classic oneagent monitoring
    enabled: false

    # Optional: node selector to control on which nodes the OneAgent will be deployed.
    #
    # nodeSelector: {}

    # Optional: tolerations to include with the OneAgent DaemonSet.
    # See more here: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists

    # Optional: resource settings for OneAgent container. Consumption of the OneAgent heavily depends
    # on the workload to monitor; please adjust values accordingly.
    #
    # resources:
    #   requests:
    #     cpu: 100m
    #     memory: 512Mi
    #   limits:
    #     cpu: 300m
    #     memory: 1.5Gi

    # Optional: arguments to add to the OneAgent installer.
    # Available options: https://www.dynatrace.com/support/help/shortlink/linux-custom-installation
    # Limitations: https://www.dynatrace.com/support/help/shortlink/oneagent-docker#limitations
    # args: []

    # Optional: additional environment variables to add to the OneAgent Pods.
    #
    # env: []

    # Optional: priority class to assign to the OneAgent Pods. By default no class is set.
    # See more here: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    #
    # priorityClassName: priority-class

    # Optional: DNS Policy for OneAgent pods. Defaults to ClusterFirstWithHostNet.
    # See more: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
    #
    # dnsPolicy: "ClusterFirstWithHostNet"

    # Optional: name of the ServiceAccount to assign to the OneAgent Pods. Defaults to
    # "dynatrace-dynakube-oneagent" in privileged mode or
    # "dynatrace-dynakube-oneagent-unprivileged" in unprivileged mode
    #
    # serviceAccountName: service-account-name

    # Optional: labels are customer defined labels for OneAgent Pods to structure workloads as desired.
    #
    # labels:
    #   custom: label

    # Optional: when enabled the OneAgent Pods will run as unprivileged. Enabled by default.
    #
    # useUnprivilegedMode: true

    # Optional: if enabled, the Operator will use the immutable image from the Dynatrace environment or from your custom
    # registry, otherwise an installer image is used. Disabled by default.
    #
    # useImmutableImage: false

    # To be released
    #
    # Optional: Enables and configures support for a read-only host filesystem
    #
    # readOnly:

    #   Enable support for read-only host filesystems
    #
    #   enabled: false

    #   Define which volume to use to store oneagent installation files
    #   Defaults to an empty-dir
    #
    #   installationVolume:
    #     emptyDir: {}

    #   Defines which user id to use for the installation process
    #   Defaults to 1001
    #
    #   userId: 1001

    #   Defines which group id to use for the installation process
    #   Defaults to 1001
    #
    #   groupId: 1001

  # Enables and configures an ActiveGate instance that allows routing
  # of OneAgent traffic
  routing:
    # Enable Kubernetes routing functionality
    enabled: true

    # Amount of replicas of activegate routing pods
    #
    # replicas: 1

    # Optional: name of the ServiceAccount to assign to the ActiveGate Pods. Defaults to
    # "dynatrace-routing"
    #
    # serviceAccountName: "dynatrace-routing"

    # Optional: tolerations to include with the ActiveGate StatefulSet.
    # See more here: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    #
    # tolerations:
    # - effect: NoSchedule
    #   key: node-role.kubernetes.io/master
    #   operator: Exists

    # Optional: node selector to control on which nodes the routing ActiveGate will be deployed.
    #
    # nodeSelector: {}

    # Optional: resource settings for ActiveGate container. Consumption of the ActiveGate heavily depends
    # on the workload to monitor; please adjust values accordingly.
    #
    # Suggested starting point for resources below:
    #
    # resources:
    #   requests:
    #     cpu: 150m
    #     memory: 250M
    #   limits:
    #     cpu: 300m
    #     memory: 1G

    # Optional: labels are customer defined labels for ActiveGate Pods to structure workloads as desired.
    #
    # labels:
    #   custom: label

    # Optional: arguments to add to the ActiveGate instances.
    # Available options: https://www.dynatrace.com/support/help/shortlink/activegate-custom-installation#linux
    #
    # args: []

    # Optional: additional environment variables to add to the ActiveGate Pods.
    #
    # env: []

    # Optional: Set activation group for ActiveGate
    #
    # group: ""

    # Optional: Add a custom properties file by providing it as a value or reference it from a secret
    # If referenced from a secret, make sure the key is called 'customProperties'
    #
    # customProperties:
    #   value: |
    #     [connectivity]
    #     networkZone=
    #   valueFrom: myCustomPropertiesConfigMap

  # Enables and configures an ActiveGate instance that allows monitoring
  # of Kubernetes environments
  kubernetesMonitoring:
    # Enable Kubernetes monitoring functionality
    enabled: true

    # Amount of replicas of activegate pods
    #
    # replicas: 1

    # Optional: name of the ServiceAccount to assign to the ActiveGate Pods. Defaults to
    # "dynatrace-kubernetes-monitoring"
    #
    # serviceAccountName: "dynatrace-kubernetes-monitoring"

    # Optional: tolerations to include with the ActiveGate StatefulSet.
    # See more here: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    #
    # tolerations:
    # - effect: NoSchedule
    #   key: node-role.kubernetes.io/master
    #   operator: Exists

    # Optional: node selector to control on which nodes the OneAgent will be deployed.
    #
    # nodeSelector: {}

    # Optional: resource settings for ActiveGate container. Consumption of the ActiveGate heavily depends
    # on the workload to monitor; please adjust values accordingly.
    #
    # Suggested starting point for resources below:
    #
    # resources:
    #   requests:
    #     cpu: 150m
    #     memory: 250M
    #   limits:
    #     cpu: 300m
    #     memory: 1G

    # Optional: labels are customer defined labels for ActiveGate Pods to structure workloads as desired.
    #
    # labels:
    #   custom: label

    # Optional: arguments to add to the ActiveGate instances.
    # Available options: https://www.dynatrace.com/support/help/shortlink/activegate-custom-installation#linux
    #
    # args: []

    # Optional: additional environment variables to add to the ActiveGate Pods.
    #
    # env: []

    # Optional: Set activation group for ActiveGate
    #
    # group: ""

    # Optional: Add a custom properties file by providing it as a value or reference it from a secret
    # If referenced from a secret, make sure the key is called 'customProperties'
    #
    # customProperties:
    #   value: |
    #     [connectivity]
    #     networkZone=
    #   valueFrom: myCustomPropertiesConfigMap
