{
  "components" : {
    "schemas" : {
      "AbstractSloAlertDto" : {
        "discriminator" : {
          "propertyName" : "alertType"
        },
        "properties" : {
          "alertName" : {
            "description" : "Name of the alert.",
            "example" : "Payment service availability burn rate alert",
            "type" : "string"
          },
          "alertThreshold" : {
            "description" : "Threshold of the alert. Status alerts trigger if they fall below this value, burn rate alerts trigger if they exceed the value.",
            "example" : 10.0,
            "format" : "double",
            "type" : "number"
          },
          "alertType" : {
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `BURN_RATE` -> BurnRateAlert \n* `STATUS` -> StatusAlert \n",
            "enum" : [ "BURN_RATE", "STATUS" ],
            "type" : "string"
          }
        },
        "required" : [ "alertName", "alertThreshold", "alertType" ],
        "type" : "object"
      },
      "Action" : {
        "description" : "Defines a action that can be executed on a UA screen",
        "properties" : {
          "actionParameter" : {
            "description" : "A actionType specific parameter value. For instance of url action this is the actual url to use",
            "type" : "string"
          },
          "actionProperties" : {
            "additionalProperties" : {
              "description" : "Action specific properties. For instance for url actions this is the map of url parameters",
              "type" : "object"
            },
            "description" : "Action specific properties. For instance for url actions this is the map of url parameters",
            "type" : "object"
          },
          "actionType" : {
            "description" : "The action type of this action",
            "enum" : [ "EXTERNAL_LINK_ACTION", "LINK_ACTION", "SETTINGS_ACTION", "UI_ACTION" ],
            "type" : "string"
          },
          "buttonColor" : {
            "description" : "Color of the button.",
            "enum" : [ "PRIMARY", "SECONDARY" ],
            "type" : "string"
          },
          "displayName" : {
            "description" : "The action name to display in the UI",
            "type" : "string"
          },
          "icon" : {
            "description" : "Barista icon id",
            "type" : "string"
          },
          "iconOnly" : {
            "description" : "If true, only icon will be rendered in the action button.",
            "type" : "boolean"
          },
          "name" : {
            "description" : "The unique action name",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ActionDefinition" : {
        "description" : "Defines the possible actions for a UA screen element",
        "properties" : {
          "mainAction" : {
            "items" : {
              "$ref" : "#/components/schemas/Action"
            },
            "type" : "array"
          },
          "menuActions" : {
            "description" : "All menu action for the element ",
            "items" : {
              "$ref" : "#/components/schemas/Action"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ActiveGate" : {
        "description" : "Parameters of the ActiveGate.",
        "properties" : {
          "autoUpdateSettings" : {
            "$ref" : "#/components/schemas/ActiveGateAutoUpdateConfig"
          },
          "autoUpdateStatus" : {
            "description" : "The current status of auto-updates of the ActiveGate.",
            "enum" : [ "INCOMPATIBLE", "OUTDATED", "SCHEDULED", "SUPPRESSED", "UNKNOWN", "UP2DATE", "UPDATE_IN_PROGRESS", "UPDATE_PENDING", "UPDATE_PROBLEM" ],
            "example" : "OUTDATED",
            "readOnly" : true,
            "type" : "string"
          },
          "connectedHosts" : {
            "$ref" : "#/components/schemas/ActiveGateConnectedHosts"
          },
          "containerized" : {
            "description" : "ActiveGate is deployed in container (`true`) or not (`false`).",
            "readOnly" : true,
            "type" : "boolean"
          },
          "environments" : {
            "description" : "A list of environments (specified by IDs) the ActiveGate can connect to.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "group" : {
            "description" : "The group of the ActiveGate.",
            "example" : "default",
            "readOnly" : true,
            "type" : "string"
          },
          "hostname" : {
            "description" : "The name of the host the ActiveGate is running on.",
            "example" : "exampleHostname",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The ID of the ActiveGate.",
            "example" : "0x3efdd091",
            "readOnly" : true,
            "type" : "string"
          },
          "loadBalancerAddresses" : {
            "description" : "A list of Load Balancer addresses of the ActiveGate.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "mainEnvironment" : {
            "description" : "The ID of the main environment for a multi-environment ActiveGate.",
            "example" : "d1bf4a7e-666b-43af-9f45-718g98372e2f",
            "readOnly" : true,
            "type" : "string"
          },
          "modules" : {
            "description" : "A list of modules of the ActiveGate.",
            "items" : {
              "$ref" : "#/components/schemas/ActiveGateModule"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "networkAddresses" : {
            "description" : "A list of network addresses of the ActiveGate.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "networkZone" : {
            "description" : "The network zone of the ActiveGate.",
            "example" : "exampleNetworkZone",
            "readOnly" : true,
            "type" : "string"
          },
          "offlineSince" : {
            "description" : "The timestamp since when the ActiveGate is offline. \n\n The `null` value means the ActiveGate is online.",
            "example" : 1582031917814,
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "osArchitecture" : {
            "description" : "The OS architecture that the ActiveGate is running on.",
            "enum" : [ "S390", "X86" ],
            "example" : "X86",
            "readOnly" : true,
            "type" : "string"
          },
          "osBitness" : {
            "description" : "The OS bitness that the ActiveGate is running on.",
            "enum" : [ "64" ],
            "example" : "64",
            "readOnly" : true,
            "type" : "string"
          },
          "osType" : {
            "description" : "The OS type that the ActiveGate is running on.",
            "enum" : [ "LINUX", "WINDOWS" ],
            "example" : "WINDOWS",
            "readOnly" : true,
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the ActiveGate.",
            "enum" : [ "CLUSTER", "ENVIRONMENT", "ENVIRONMENT_MULTI" ],
            "example" : "ENVIRONMENT",
            "readOnly" : true,
            "type" : "string"
          },
          "version" : {
            "description" : "The current version of the ActiveGate in the `<major>.<minor>.<revision>.<timestamp>` format.",
            "example" : "1.185.0.20200201-120000",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ActiveGateAutoUpdateConfig" : {
        "description" : "Configuration of the ActiveGate auto-updates.",
        "properties" : {
          "effectiveSetting" : {
            "description" : "The actual state of the ActiveGate auto-update. \n\nApplicable only if the **setting** parameter is set to `INHERITED`. In that case, the value is taken from the parent setting. Otherwise, it's just a duplicate of the **setting** value.",
            "enum" : [ "ENABLED", "DISABLED" ],
            "example" : "ENABLED",
            "readOnly" : true,
            "type" : "string"
          },
          "setting" : {
            "description" : "The state of the ActiveGate auto-update: enabled, disabled, or inherited. \n\nIf set to `INHERITED`, the setting is inherited from the global configuration set on the environment or Managed cluster level.",
            "enum" : [ "DISABLED", "ENABLED", "INHERITED" ],
            "example" : "INHERITED",
            "type" : "string"
          }
        },
        "readOnly" : true,
        "required" : [ "setting" ],
        "type" : "object"
      },
      "ActiveGateConnectedHosts" : {
        "description" : "Information about hosts currently connected to the ActiveGate",
        "properties" : {
          "number" : {
            "description" : "The number of hosts currently connected to the ActiveGate",
            "example" : 150,
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "ActiveGateGlobalAutoUpdateConfig" : {
        "description" : "Global configuration of ActiveGates auto-update.",
        "properties" : {
          "globalSetting" : {
            "description" : "The state of auto-updates for all ActiveGates connected to the environment or Managed cluster. \n\nThis setting is inherited by all ActiveGates that have the `INHERITED` setting.",
            "enum" : [ "ENABLED", "DISABLED" ],
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/ConfigurationMetadata"
          }
        },
        "required" : [ "globalSetting" ],
        "type" : "object"
      },
      "ActiveGateList" : {
        "description" : "A list of ActiveGates.",
        "properties" : {
          "activeGates" : {
            "description" : "A list of ActiveGates.",
            "items" : {
              "$ref" : "#/components/schemas/ActiveGate"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ActiveGateModule" : {
        "description" : "Information about ActiveGate module",
        "properties" : {
          "attributes" : {
            "additionalProperties" : {
              "description" : "The attributes of the ActiveGate module.",
              "readOnly" : true,
              "type" : "string"
            },
            "description" : "The attributes of the ActiveGate module.",
            "readOnly" : true,
            "type" : "object"
          },
          "enabled" : {
            "description" : "The module is enabled (`true`) or disabled (`false`).",
            "readOnly" : true,
            "type" : "boolean"
          },
          "misconfigured" : {
            "description" : "The module is misconfigured (`true`) or not (`false`).",
            "readOnly" : true,
            "type" : "boolean"
          },
          "type" : {
            "description" : "The type of ActiveGate module.",
            "enum" : [ "AWS", "AZURE", "BEACON_FORWARDER", "CLOUD_FOUNDRY", "DB_INSIGHT", "EXTENSIONS_V1", "EXTENSIONS_V2", "KUBERNETES", "LOGS", "MEMORY_DUMPS", "METRIC_API", "ONE_AGENT_ROUTING", "OTLP_INGEST", "REST_API", "SYNTHETIC", "VMWARE", "Z_OS" ],
            "example" : "KUBERNETES",
            "readOnly" : true,
            "type" : "string"
          },
          "version" : {
            "description" : "The version of the ActiveGate module.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ActiveGateToken" : {
        "description" : "Metadata of an ActiveGate token.",
        "properties" : {
          "activeGateType" : {
            "description" : "The type of the ActiveGate for which the token is valid.",
            "enum" : [ "ENVIRONMENT", "CLUSTER" ],
            "type" : "string"
          },
          "creationDate" : {
            "description" : "The token creation date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).",
            "example" : "2020-11-22T08:15:30.144Z",
            "type" : "string"
          },
          "expirationDate" : {
            "description" : "The token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`). \n\n If not set, the token never expires.",
            "example" : "2020-11-24T08:15:30.144Z",
            "type" : "string"
          },
          "id" : {
            "description" : "The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token.",
            "example" : "dt0g02.4KWZO5EF",
            "type" : "string"
          },
          "lastUsedDate" : {
            "description" : "The token last used date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).",
            "example" : "2020-11-23T08:15:30.144Z",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the token.",
            "example" : "myToken",
            "type" : "string"
          },
          "owner" : {
            "description" : "The owner of the token.",
            "example" : "john.smith",
            "type" : "string"
          },
          "seedToken" : {
            "description" : "The token is a seed token (`true`) or an individual token (`false`).",
            "example" : false,
            "type" : "boolean"
          }
        },
        "required" : [ "activeGateType", "creationDate", "id", "name", "owner" ],
        "type" : "object"
      },
      "ActiveGateTokenCreate" : {
        "description" : "Parameters of a new ActiveGate token.",
        "properties" : {
          "activeGateType" : {
            "description" : "The type of the ActiveGate for which the token is valid.",
            "enum" : [ "ENVIRONMENT", "CLUSTER" ],
            "type" : "string"
          },
          "expirationDate" : {
            "description" : "The expiration date of the token. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the token never expires.",
            "example" : "now+14d",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the token.",
            "example" : "myToken",
            "type" : "string"
          },
          "seedToken" : {
            "description" : "The token is a seed token (`true`) or an individual token (`false`). \n\n We recommend the individual token option (false).",
            "example" : false,
            "type" : "boolean"
          }
        },
        "required" : [ "activeGateType", "name" ],
        "type" : "object"
      },
      "ActiveGateTokenCreated" : {
        "description" : "The newly created ActiveGate token.",
        "properties" : {
          "expirationDate" : {
            "description" : "The token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).",
            "example" : "2020-11-24T08:15:30.144Z",
            "type" : "string"
          },
          "id" : {
            "description" : "The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token.",
            "example" : "dt0g02.4KWZO5EF",
            "type" : "string"
          },
          "token" : {
            "description" : "The secret of the token.",
            "example" : "dt0g02.4KWZO5EF.XT47R5DRADJIZUFOX4UDNOKTSUSABGLN7XSMJG7UXHRXKNY4WLORH4OF4T75MG7E",
            "type" : "string"
          }
        },
        "required" : [ "id", "token" ],
        "type" : "object"
      },
      "ActiveGateTokenEnforcement" : {
        "description" : "The status of ActiveGate tokens enforcement.",
        "properties" : {
          "autoEnforced" : {
            "description" : "If `true`, ActiveGate tokens are enforced automatically.",
            "type" : "boolean"
          },
          "autoEnforcementEstimation" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "manualEnforced" : {
            "description" : "If `true`, ActiveGate tokens are manually enforced by user.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "ActiveGateTokenList" : {
        "description" : "A list of ActiveGate tokens.",
        "example" : {
          "activeGateTokens" : {
            "activeGateType" : "ENVIRONMENT",
            "creationDate" : "2020-11-22T08:15:30.144Z",
            "expirationDate" : "2020-11-24T08:15:30.144Z",
            "id" : "dt0g02.4KWZO5EF",
            "lastUsedDate" : "2020-11-23T08:15:30.144Z",
            "name" : "myToken",
            "owner" : "john.smith",
            "seedToken" : "false"
          },
          "nextPageKey" : "AAAAAAAAAAAAAABOAAAAAAAAAAAAAAA6ACQAEAAAABgACgAITFdXQk1BRzYAAAhtZXRhZGF0YQB___-bf___m3iIYxfF7xVQvY72rwblQkcAAwAAAAAAAADHAAAAZA==",
          "pageSize" : 100,
          "totalCount" : 1000
        },
        "properties" : {
          "activeGateTokens" : {
            "description" : "A list of ActiveGate tokens.",
            "items" : {
              "$ref" : "#/components/schemas/ActiveGateToken"
            },
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "AddEntityTag" : {
        "description" : "The custom tag to be added to monitored entities.",
        "properties" : {
          "key" : {
            "description" : "The key of the custom tag to be added to monitored entities.",
            "minLength" : 1,
            "type" : "string"
          },
          "value" : {
            "description" : "The value of the custom tag to be added to monitored entities. May be null",
            "type" : "string"
          }
        },
        "required" : [ "key" ],
        "type" : "object"
      },
      "AddEntityTags" : {
        "description" : "A list of tags to be added to monitored entities.",
        "example" : {
          "tags" : [ {
            "key" : "mainApp"
          }, {
            "key" : "bookings",
            "value" : "42"
          } ]
        },
        "properties" : {
          "tags" : {
            "description" : "A list of tags to be added to monitored entities.",
            "items" : {
              "$ref" : "#/components/schemas/AddEntityTag"
            },
            "maxItems" : 1000,
            "minItems" : 0,
            "type" : "array"
          }
        },
        "required" : [ "tags" ],
        "type" : "object"
      },
      "AddedEntityTags" : {
        "description" : "A list of custom tags added to monitored entities.",
        "example" : {
          "appliedTags" : [ {
            "context" : "CONTEXTLESS",
            "key" : "mainApp",
            "stringRepresentation" : "mainApp"
          }, {
            "context" : "CONTEXTLESS",
            "key" : "booking",
            "stringRepresentation" : "booking"
          } ],
          "matchedEntitiesCount" : 2
        },
        "properties" : {
          "appliedTags" : {
            "description" : "A list of added custom tags.",
            "items" : {
              "$ref" : "#/components/schemas/METag"
            },
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "type" : "array"
          },
          "matchedEntitiesCount" : {
            "description" : "The number of monitored entities where the tags have been added.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "AffectedEntities" : {
        "description" : "Information about affected entities of an attack.",
        "properties" : {
          "processGroup" : {
            "$ref" : "#/components/schemas/AffectedEntity"
          },
          "processGroupInstance" : {
            "$ref" : "#/components/schemas/AffectedEntity"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "AffectedEntity" : {
        "description" : "Information about an affected entity.",
        "properties" : {
          "id" : {
            "description" : "The monitored entity ID of the affected entity.",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the affected entity.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "AggregatedLog" : {
        "description" : "Aggregated log records.",
        "example" : {
          "aggregationResult" : {
            "hostId" : {
              "1597835271" : {
                "localhost" : "12"
              },
              "1597835331" : {
                "remotehost" : "6"
              }
            },
            "logLevel" : {
              "1597835271" : {
                "ERROR" : "1",
                "INFO" : "2"
              },
              "1597835331" : {
                "INFO" : "17"
              }
            },
            "logPath" : {
              "1597835271" : {
                "/var/log/messages" : "15",
                "/var/log/syslog" : "3"
              },
              "1597835331" : {
                "/var/log/messages" : "15",
                "/var/log/syslog" : "3"
              }
            },
            "processId" : {
              "1597835271" : {
                "cassandra" : "6"
              },
              "1597835331" : {
                "apache" : "12",
                "cassandra" : "60"
              }
            }
          }
        },
        "properties" : {
          "aggregationResult" : {
            "additionalProperties" : {
              "additionalProperties" : {
                "additionalProperties" : {
                  "description" : "Aggregated log records.",
                  "format" : "int64",
                  "type" : "integer"
                },
                "description" : "Aggregated log records.",
                "type" : "object"
              },
              "description" : "Aggregated log records.",
              "type" : "object"
            },
            "description" : "Aggregated log records.",
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "Aggregation" : {
        "description" : "The resulting aggregations of a query.",
        "discriminator" : {
          "propertyName" : "aggregationType"
        },
        "properties" : {
          "aggregationType" : {
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `BUCKET` -> BucketAggregation \n",
            "enum" : [ "BUCKET" ],
            "type" : "string"
          }
        },
        "required" : [ "aggregationType" ],
        "type" : "object"
      },
      "Aggregations" : {
        "description" : "The resulting aggregations of a query.",
        "properties" : {
          "aggregations" : {
            "description" : "The aggregations computed.",
            "items" : {
              "$ref" : "#/components/schemas/Aggregation"
            },
            "type" : "array"
          },
          "aggregationsCount" : {
            "description" : "The number of aggregations computed.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "AlertingProfileStub" : {
        "description" : "Short representation of the alerting profile.",
        "properties" : {
          "id" : {
            "description" : "The ID of the alerting profile.",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the alerting profile.",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "AnalyzerGeneralParametersDto" : {
        "properties" : {
          "resolveDimensionalQueryData" : {
            "type" : "boolean"
          },
          "timeFrame" : {
            "type" : "string"
          },
          "tracingActive" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "AnalyzerInputDto" : {
        "properties" : {
          "generalParameters" : {
            "$ref" : "#/components/schemas/AnalyzerGeneralParametersDto"
          }
        },
        "type" : "object"
      },
      "ApiToken" : {
        "description" : "Metadata of an API token.",
        "properties" : {
          "additionalMetadata" : {
            "description" : "Contains additional properties for specific kinds of token. Examples:\n\n* A `dashboardId` property for dashboard sharing tokens.\n* A `reportId` property for report sharing tokens",
            "example" : {
              "dashboardId" : "82402bab-7370-4359-924d-88ed13c8919a"
            },
            "type" : "object"
          },
          "creationDate" : {
            "description" : "Token creation date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`)",
            "example" : "2020-11-05T08:15:30.144Z",
            "type" : "string"
          },
          "enabled" : {
            "description" : "The token is enabled (`true`) or disabled (`false`).",
            "example" : true,
            "type" : "boolean"
          },
          "expirationDate" : {
            "description" : "Token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`). \n\n If not set, the token never expires.",
            "example" : "2020-11-12T08:15:30.144Z",
            "type" : "string"
          },
          "id" : {
            "description" : "The ID of the token, consisting of prefix and public part of the token.",
            "example" : "dt0c01.ST2EY72KQINMH574WMNVI7YN",
            "type" : "string"
          },
          "lastUsedDate" : {
            "description" : "Token last used date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`)",
            "example" : "2020-11-12T08:15:30.144Z",
            "type" : "string"
          },
          "lastUsedIpAddress" : {
            "description" : "Token last used IP address.",
            "example" : "34.197.2.44",
            "type" : "string"
          },
          "modifiedDate" : {
            "description" : "Token last modified date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`). Updating scopes or name counts as modification, enabling or disabling a token does not.",
            "example" : "2020-11-12T08:15:30.144Z",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the token.",
            "example" : "myToken",
            "type" : "string"
          },
          "owner" : {
            "description" : "The owner of the token.",
            "example" : "john.smith",
            "type" : "string"
          },
          "personalAccessToken" : {
            "description" : "The token is a [personal access token](https://dt-url.net/wm03sop) (`true`) or an API token (`false`).",
            "example" : true,
            "type" : "boolean"
          },
          "scopes" : {
            "description" : "A list of scopes assigned to the token.",
            "items" : {
              "enum" : [ "ActiveGateCertManagement", "AdvancedSyntheticIntegration", "AppMonIntegration", "CaptureRequestData", "DTAQLAccess", "DataExport", "DataImport", "DataPrivacy", "Davis", "DiagnosticExport", "DssFileManagement", "ExternalSyntheticIntegration", "InstallerDownload", "LogExport", "MemoryDump", "Mobile", "PluginUpload", "ReadConfig", "ReadSyntheticData", "RestRequestForwarding", "RumBrowserExtension", "RumJavaScriptTagManagement", "SupportAlert", "TenantTokenManagement", "UserSessionAnonymization", "ViewDashboard", "ViewReport", "WriteConfig", "WriteSyntheticData", "activeGateTokenManagement.create", "activeGateTokenManagement.read", "activeGateTokenManagement.write", "activeGates.read", "activeGates.write", "apiTokens.read", "apiTokens.write", "auditLogs.read", "credentialVault.read", "credentialVault.write", "entities.read", "entities.write", "events.ingest", "events.read", "extensionConfigurations.read", "extensionConfigurations.write", "extensionEnvironment.read", "extensionEnvironment.write", "extensions.read", "extensions.write", "geographicRegions.read", "logs.ingest", "logs.read", "metrics.ingest", "metrics.read", "metrics.write", "networkZones.read", "networkZones.write", "openTelemetryTrace.ingest", "problems.read", "problems.write", "releases.read", "securityProblems.read", "securityProblems.write", "settings.read", "settings.write", "slo.read", "slo.write", "syntheticExecutions.read", "syntheticExecutions.write", "syntheticLocations.read", "syntheticLocations.write", "tenantTokenRotation.write" ],
              "example" : "metrics.read",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ApiTokenCreate" : {
        "description" : "Parameters of a new API token.",
        "properties" : {
          "expirationDate" : {
            "description" : "The expiration date of the token. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the token never expires.",
            "example" : "now+14d",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the token.",
            "example" : "tokenName",
            "type" : "string"
          },
          "personalAccessToken" : {
            "description" : "The token is a personal access token (`true`) or an API token (`false`). \n\n Personal access tokens are tied to the permissions of their owner.",
            "example" : false,
            "type" : "boolean"
          },
          "scopes" : {
            "description" : "A list of the scopes to be assigned to the token.\n\n* `InstallerDownload`: PaaS integration - Installer download. \n* `DataExport`: Access problem and event feed, metrics, and topology. \n* `PluginUpload`: Upload Extension. \n* `SupportAlert`: PaaS integration - Support alert. \n* `AdvancedSyntheticIntegration`: Dynatrace module integration - Synthetic Classic. \n* `ExternalSyntheticIntegration`: Create and read synthetic monitors, locations, and nodes. \n* `AppMonIntegration`: Dynatrace module integration - AppMon. \n* `RumBrowserExtension`: RUM Browser Extension. \n* `LogExport`: Read logs. \n* `ReadConfig`: Read configuration. \n* `WriteConfig`: Write configuration. \n* `DTAQLAccess`: User sessions. \n* `UserSessionAnonymization`: Anonymize user session data for data privacy reasons. \n* `DataPrivacy`: Change data privacy settings. \n* `CaptureRequestData`: Capture request data. \n* `Davis`: Dynatrace module integration - Davis. \n* `DssFileManagement`: Mobile symbolication file management. \n* `RumJavaScriptTagManagement`: Real user monitoring JavaScript tag management. \n* `TenantTokenManagement`: Token management. \n* `ActiveGateCertManagement`: ActiveGate certificate management. \n* `RestRequestForwarding`: Fetch data from a remote environment. \n* `ReadSyntheticData`: Read synthetic monitors, locations, and nodes. \n* `DataImport`: Data ingest, e.g.: metrics and events. \n* `syntheticExecutions.write`: Write synthetic monitor executions. \n* `syntheticExecutions.read`: Read synthetic monitor execution results. \n* `auditLogs.read`: Read audit logs. \n* `metrics.read`: Read metrics. \n* `metrics.write`: Write metrics. \n* `entities.read`: Read entities. \n* `entities.write`: Write entities. \n* `problems.read`: Read problems. \n* `problems.write`: Write problems. \n* `events.read`: Read events. \n* `events.ingest`: Ingest events. \n* `networkZones.read`: Read network zones. \n* `networkZones.write`: Write network zones. \n* `activeGates.read`: Read ActiveGates. \n* `activeGates.write`: Write ActiveGates. \n* `activeGateTokenManagement.read`: Read ActiveGate tokens. \n* `activeGateTokenManagement.create`: Create ActiveGate tokens. \n* `activeGateTokenManagement.write`: Write ActiveGate tokens. \n* `credentialVault.read`: Read credential vault entries. \n* `credentialVault.write`: Write credential vault entries. \n* `extensions.read`: Read extensions. \n* `extensions.write`: Write extensions. \n* `extensionConfigurations.read`: Read extension monitoring configurations. \n* `extensionConfigurations.write`: Write extension monitoring configurations. \n* `extensionEnvironment.read`: Read extension environment configurations. \n* `extensionEnvironment.write`: Write extension environment configurations. \n* `metrics.ingest`: Ingest metrics. \n* `securityProblems.read`: Read security problems. \n* `securityProblems.write`: Write security problems. \n* `syntheticLocations.read`: Read synthetic locations. \n* `syntheticLocations.write`: Write synthetic locations. \n* `settings.read`: Read settings. \n* `settings.write`: Write settings. \n* `tenantTokenRotation.write`: Tenant token rotation. \n* `slo.read`: Read SLO. \n* `slo.write`: Write SLO. \n* `releases.read`: Read releases. \n* `apiTokens.read`: Read API tokens. \n* `apiTokens.write`: Write API tokens. \n* `openTelemetryTrace.ingest`: Ingest OpenTelemetry traces. \n* `logs.read`: Read logs. \n* `logs.ingest`: Ingest logs. \n* `geographicRegions.read`: Read Geographic regions. \n",
            "items" : {
              "enum" : [ "InstallerDownload", "DataExport", "PluginUpload", "SupportAlert", "AdvancedSyntheticIntegration", "ExternalSyntheticIntegration", "AppMonIntegration", "RumBrowserExtension", "LogExport", "ReadConfig", "WriteConfig", "DTAQLAccess", "UserSessionAnonymization", "DataPrivacy", "CaptureRequestData", "Davis", "DssFileManagement", "RumJavaScriptTagManagement", "TenantTokenManagement", "ActiveGateCertManagement", "RestRequestForwarding", "ReadSyntheticData", "DataImport", "syntheticExecutions.write", "syntheticExecutions.read", "auditLogs.read", "metrics.read", "metrics.write", "entities.read", "entities.write", "problems.read", "problems.write", "events.read", "events.ingest", "networkZones.read", "networkZones.write", "activeGates.read", "activeGates.write", "activeGateTokenManagement.read", "activeGateTokenManagement.create", "activeGateTokenManagement.write", "credentialVault.read", "credentialVault.write", "extensions.read", "extensions.write", "extensionConfigurations.read", "extensionConfigurations.write", "extensionEnvironment.read", "extensionEnvironment.write", "metrics.ingest", "securityProblems.read", "securityProblems.write", "syntheticLocations.read", "syntheticLocations.write", "settings.read", "settings.write", "tenantTokenRotation.write", "slo.read", "slo.write", "releases.read", "apiTokens.read", "apiTokens.write", "openTelemetryTrace.ingest", "logs.read", "logs.ingest", "geographicRegions.read" ],
              "example" : "metrics.read",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "name", "scopes" ],
        "type" : "object"
      },
      "ApiTokenCreated" : {
        "description" : "The newly created token.",
        "properties" : {
          "expirationDate" : {
            "description" : "The token expiration date in ISO 8601 format (`yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`).",
            "example" : "2020-11-12T08:15:30.144Z",
            "type" : "string"
          },
          "id" : {
            "description" : "The ID of the token, consisting of prefix and public part of the token.",
            "example" : "dt0c01.ST2EY72KQINMH574WMNVI7YN",
            "type" : "string"
          },
          "token" : {
            "description" : "The secret of the token.",
            "example" : "dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ApiTokenList" : {
        "description" : "A list of API tokens.",
        "example" : {
          "apiTokens" : {
            "additionalMetadata" : {
              "dashboardId" : "82402bab-7370-4359-924d-88ed13c8919a"
            },
            "creationDate" : "2020-11-05T08:15:30.144Z",
            "disabled" : "false",
            "expirationDate" : "2020-11-12T08:15:30.144Z",
            "id" : "dt0c01.ST2EY72KQINMH574WMNVI7YN",
            "lastUsedDate" : "2020-11-12T08:15:30.144Z",
            "lastUsedIpAddress" : "34.197.2.44",
            "name" : "tokenName",
            "owner" : "john.smith",
            "personalAccessToken" : "true",
            "scopes" : [ "metrics.read" ]
          },
          "pageSize" : "1",
          "totalCount" : "1"
        },
        "properties" : {
          "apiTokens" : {
            "description" : "A list of API tokens.",
            "items" : {
              "$ref" : "#/components/schemas/ApiToken"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "ApiTokenSecret" : {
        "properties" : {
          "token" : {
            "description" : "The API token.",
            "example" : "dt0c01.ST2EY72KQINMH574WMNVI7YN.G3DFPBEJYMODIDAEX454M7YWBUVEFOWKPRVMWFASS64NFH52PX6BNDVFFM572RZM",
            "type" : "string"
          }
        },
        "required" : [ "token" ],
        "type" : "object"
      },
      "ApiTokenUpdate" : {
        "description" : "The update of the API token.",
        "properties" : {
          "enabled" : {
            "description" : "The token is enabled (`true`) or disabled (`false`)",
            "example" : true,
            "type" : "boolean"
          },
          "name" : {
            "description" : "The name of the token.",
            "example" : "myToken",
            "type" : "string"
          },
          "scopes" : {
            "description" : "The list of scopes assigned to the token. \n\nApart from the new scopes, you need to submit the existing scopes you want to keep, too. Any existing scope, missing in the payload, is removed.",
            "items" : {
              "enum" : [ "ActiveGateCertManagement", "AdvancedSyntheticIntegration", "AppMonIntegration", "CaptureRequestData", "DTAQLAccess", "DataExport", "DataImport", "DataPrivacy", "Davis", "DiagnosticExport", "DssFileManagement", "ExternalSyntheticIntegration", "InstallerDownload", "LogExport", "MemoryDump", "Mobile", "PluginUpload", "ReadConfig", "ReadSyntheticData", "RestRequestForwarding", "RumBrowserExtension", "RumJavaScriptTagManagement", "SupportAlert", "TenantTokenManagement", "UserSessionAnonymization", "ViewDashboard", "ViewReport", "WriteConfig", "WriteSyntheticData", "activeGateTokenManagement.create", "activeGateTokenManagement.read", "activeGateTokenManagement.write", "activeGates.read", "activeGates.write", "apiTokens.read", "apiTokens.write", "auditLogs.read", "credentialVault.read", "credentialVault.write", "entities.read", "entities.write", "events.ingest", "events.read", "extensionConfigurations.read", "extensionConfigurations.write", "extensionEnvironment.read", "extensionEnvironment.write", "extensions.read", "extensions.write", "geographicRegions.read", "logs.ingest", "logs.read", "metrics.ingest", "metrics.read", "metrics.write", "networkZones.read", "networkZones.write", "openTelemetryTrace.ingest", "problems.read", "problems.write", "releases.read", "securityProblems.read", "securityProblems.write", "settings.read", "settings.write", "slo.read", "slo.write", "syntheticExecutions.read", "syntheticExecutions.write", "syntheticLocations.read", "syntheticLocations.write", "tenantTokenRotation.write" ],
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ApplicationImpact" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Impact"
        } ],
        "description" : "Analysis of problem impact to an application.",
        "required" : [ "estimatedAffectedUsers", "impactType", "impactedEntity" ],
        "type" : "object"
      },
      "AppliedFilter" : {
        "description" : "Optional filters that took effect.",
        "properties" : {
          "appliedTo" : {
            "description" : "The keys of all metrics that this filter has been applied to. \n\nCan contain multiple metrics for complex expressions and always at least one key.",
            "items" : {
              "description" : "The keys of all metrics that this filter has been applied to. \n\nCan contain multiple metrics for complex expressions and always at least one key.",
              "type" : "string"
            },
            "type" : "array"
          },
          "filter" : {
            "$ref" : "#/components/schemas/Filter"
          }
        },
        "required" : [ "appliedTo" ],
        "type" : "object"
      },
      "AssetInfoDto" : {
        "description" : "Public metadata for an extension asset.",
        "properties" : {
          "displayName" : {
            "description" : "User-friendly name of the asset.",
            "type" : "string"
          },
          "id" : {
            "description" : "ID of the asset. Identifies the asset in REST API and/or UI (where applicable).",
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the asset.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Attack" : {
        "description" : "Describes an attack.",
        "properties" : {
          "affectedEntities" : {
            "$ref" : "#/components/schemas/AffectedEntities"
          },
          "attackId" : {
            "description" : "The ID of the attack.",
            "readOnly" : true,
            "type" : "string"
          },
          "attackTarget" : {
            "$ref" : "#/components/schemas/AttackTarget"
          },
          "attackType" : {
            "description" : "The type of the attack.",
            "enum" : [ "COMMAND_INJECTION", "JNDI_INJECTION", "SQL_INJECTION" ],
            "readOnly" : true,
            "type" : "string"
          },
          "attacker" : {
            "$ref" : "#/components/schemas/Attacker"
          },
          "displayId" : {
            "description" : "The display ID of the attack.",
            "readOnly" : true,
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name of the attack.",
            "readOnly" : true,
            "type" : "string"
          },
          "entrypoint" : {
            "$ref" : "#/components/schemas/AttackEntrypoint"
          },
          "managementZones" : {
            "description" : "A list of management zones which the affected entities belong to.",
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "request" : {
            "$ref" : "#/components/schemas/RequestInformation"
          },
          "securityProblem" : {
            "$ref" : "#/components/schemas/AttackSecurityProblem"
          },
          "state" : {
            "description" : "The state of the attack.",
            "enum" : [ "ALLOWLISTED", "BLOCKED", "EXPLOITED" ],
            "readOnly" : true,
            "type" : "string"
          },
          "timestamp" : {
            "description" : "The timestamp when the attack occurred.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "vulnerability" : {
            "$ref" : "#/components/schemas/Vulnerability"
          }
        },
        "type" : "object"
      },
      "AttackEntrypoint" : {
        "description" : "Describes the entrypoint used by an attacker to start a specific attack.",
        "properties" : {
          "codeLocation" : {
            "$ref" : "#/components/schemas/CodeLocation"
          },
          "entrypointFunction" : {
            "$ref" : "#/components/schemas/FunctionDefinition"
          },
          "payload" : {
            "description" : "All relevant payload data that has been sent during the attack.",
            "items" : {
              "description" : "A list of values that has possibly been truncated.",
              "properties" : {
                "truncationInfo" : {
                  "$ref" : "#/components/schemas/TruncationInfo"
                },
                "values" : {
                  "description" : "Values of the list.",
                  "items" : {
                    "$ref" : "#/components/schemas/EntrypointPayload"
                  },
                  "readOnly" : true,
                  "type" : "array"
                }
              },
              "readOnly" : true,
              "type" : "object"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "AttackList" : {
        "description" : "A list of attacks.",
        "properties" : {
          "attacks" : {
            "description" : "A list of attacks.",
            "items" : {
              "$ref" : "#/components/schemas/Attack"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "AttackRequestHeader" : {
        "description" : "A header element of the attack's request.",
        "properties" : {
          "name" : {
            "description" : "The name of the header element.",
            "readOnly" : true,
            "type" : "string"
          },
          "value" : {
            "description" : "The value of the header element.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "AttackSecurityProblem" : {
        "description" : "Assessment information and the ID of a security problem related to an attack.",
        "properties" : {
          "assessment" : {
            "$ref" : "#/components/schemas/AttackSecurityProblemAssessmentDto"
          },
          "securityProblemId" : {
            "description" : "The security problem ID.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "AttackSecurityProblemAssessmentDto" : {
        "description" : "The assessment of a security problem related to an attack.",
        "properties" : {
          "dataAssets" : {
            "description" : "The reachability of data assets by the attacked target.",
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "REACHABLE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "exposure" : {
            "description" : "The level of exposure of the attacked target",
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "PUBLIC_NETWORK" ],
            "readOnly" : true,
            "type" : "string"
          },
          "numberOfReachableDataAssets" : {
            "description" : "The number of data assets reachable by the attacked target.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "AttackTarget" : {
        "description" : "Information about the targeted host/database of an attack.",
        "properties" : {
          "entityId" : {
            "description" : "The monitored entity ID of the targeted host/database.",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the targeted host/database.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "Attacker" : {
        "description" : "Attacker of an attack.",
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/AttackerLocation"
          },
          "sourceIp" : {
            "description" : "The source IP of the attacker.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "AttackerLocation" : {
        "description" : "Location of an attacker.",
        "properties" : {
          "city" : {
            "description" : "City of the attacker.",
            "readOnly" : true,
            "type" : "string"
          },
          "country" : {
            "description" : "The country of the attacker.",
            "readOnly" : true,
            "type" : "string"
          },
          "countryCode" : {
            "description" : "The country code of the country of the attacker, according to the ISO 3166-1 Alpha-2 standard.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "AuditLog" : {
        "description" : "The audit log of your environment.",
        "example" : {
          "auditLogs" : [ {
            "category" : "CONFIG",
            "entityId" : "MOBILE_RUM: MOBILE_APPLICATION-752C223D59734CD2",
            "environmentId" : "prod-env-13",
            "eventType" : "UPDATE",
            "logId" : "197425568800060000",
            "patch" : [ {
              "oldValue" : 20000,
              "op" : "replace",
              "path" : "/refreshTimeIntervalMillis",
              "value" : 30000
            } ],
            "success" : true,
            "timestamp" : 1974255688445,
            "user" : "test.user@company.com",
            "userOrigin" : "webui (192.168.0.2)",
            "userType" : "USER_NAME"
          } ],
          "nextPageKey" : "___a7acX3q0AAAAAACJidWlsdGluOnNlcnZpY2lUVEJCUzBaNVIxVjJOSGt6Y3oyLTcwMUZWRkxlclH__9rtpxferQ",
          "pageSize" : 5,
          "totalCount" : 10
        },
        "properties" : {
          "auditLogs" : {
            "description" : "A list of audit log entries ordered by the creation timestamp.",
            "items" : {
              "$ref" : "#/components/schemas/AuditLogEntry"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "AuditLogEntry" : {
        "description" : "An entry of the audit log.",
        "example" : {
          "category" : "CONFIG",
          "entityId" : "MOBILE_RUM: MOBILE_APPLICATION-752C223D59734CD2",
          "environmentId" : "prod-env-13",
          "eventType" : "UPDATE",
          "logId" : "197425568800060000",
          "patch" : [ {
            "oldValue" : 20000,
            "op" : "replace",
            "path" : "/refreshTimeIntervalMillis",
            "value" : 30000
          } ],
          "success" : true,
          "timestamp" : 1974255688445,
          "user" : "test.user@company.com",
          "userOrigin" : "webui (192.168.0.2)",
          "userType" : "USER_NAME"
        },
        "properties" : {
          "category" : {
            "description" : "The category of the recorded operation.",
            "enum" : [ "CONFIG", "DEBUG_UI", "MANUAL_TAGGING_SERVICE", "TOKEN", "WEB_UI" ],
            "readOnly" : true,
            "type" : "string"
          },
          "entityId" : {
            "description" : "The ID of an entity from the **category**. \n\nFor example, it can be config ID for the `CONFIG` category or token ID for the `TOKEN` category.",
            "readOnly" : true,
            "type" : "string"
          },
          "environmentId" : {
            "description" : "The ID of the Dynatrace environment where the recorded operation occurred.",
            "readOnly" : true,
            "type" : "string"
          },
          "eventType" : {
            "description" : "The type of the recorded operation.",
            "enum" : [ "CREATE", "DELETE", "GENERAL", "GET", "LOGIN", "LOGOUT", "PATCH", "POST", "PUT", "READ", "REVOKE", "TAG_ADD", "TAG_REMOVE", "TAG_UPDATE", "UPDATE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "logId" : {
            "description" : "The ID of the log entry.",
            "maxLength" : 19,
            "minLength" : 0,
            "readOnly" : true,
            "type" : "string"
          },
          "message" : {
            "description" : "The logged message.",
            "readOnly" : true,
            "type" : "string"
          },
          "patch" : {
            "description" : "The patch of the recorded operation as the JSON representation. \n\nThe format is an enhanced RFC 6902. The patch also carries the previous value in the **oldValue** field.",
            "readOnly" : true,
            "type" : "object"
          },
          "success" : {
            "description" : "The recorded operation is successful (`true`) or failed (`false`).",
            "readOnly" : true,
            "type" : "boolean"
          },
          "timestamp" : {
            "description" : "The timestamp of the record creation, in UTC milliseconds.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "user" : {
            "description" : "The ID of the user who performed the recorded operation.",
            "readOnly" : true,
            "type" : "string"
          },
          "userOrigin" : {
            "description" : "The origin and the IP address of the **user**.",
            "readOnly" : true,
            "type" : "string"
          },
          "userType" : {
            "description" : "The type of the authentication of the **user**.",
            "enum" : [ "PUBLIC_TOKEN_IDENTIFIER", "REQUEST_ID", "SERVICE_NAME", "TOKEN_HASH", "USER_NAME" ],
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "category", "environmentId", "eventType", "logId", "success", "timestamp", "user", "userType" ],
        "type" : "object"
      },
      "AuthorDto" : {
        "description" : "Extension author",
        "properties" : {
          "name" : {
            "description" : "Author name",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AvailabilityEvidence" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Evidence"
        }, {
          "properties" : {
            "endTime" : {
              "description" : "The end time of the evidence, in UTC milliseconds.",
              "format" : "int64",
              "type" : "integer"
            }
          },
          "type" : "object"
        } ],
        "description" : "The availability evidence of the problem. \n\nIndicates an entity that has been unavailable during the problem lifespan and that might be related to the root cause.",
        "required" : [ "displayName", "endTime", "entity", "evidenceType", "rootCauseRelevant", "startTime" ],
        "type" : "object"
      },
      "Axes" : {
        "description" : "Axes configuration",
        "properties" : {
          "getxAxis" : {
            "$ref" : "#/components/schemas/Axis"
          },
          "getyAxes" : {
            "description" : "y Axes configuration",
            "items" : {
              "$ref" : "#/components/schemas/YAxis"
            },
            "type" : "array"
          }
        },
        "required" : [ "getxAxis", "getyAxes" ],
        "type" : "object"
      },
      "Axis" : {
        "description" : "x Axis configuration",
        "properties" : {
          "displayName" : {
            "type" : "string"
          },
          "visible" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "BMAction" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExecutionStep"
        }, {
          "properties" : {
            "apdexType" : {
              "description" : "The user experience index of the action.",
              "enum" : [ "FRUSTRATED", "SATISFIED", "TOLERATING", "UNKNOWN" ],
              "type" : "string"
            },
            "cdnBusyTime" : {
              "description" : "The time spent waiting for CDN resources for the action, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "cdnResources" : {
              "description" : "The number of resources fetched from a CDN for the action.",
              "format" : "int32",
              "type" : "integer"
            },
            "clientTime" : {
              "description" : "The event startTime in client time, in milliseconds.",
              "format" : "int64",
              "type" : "integer"
            },
            "cumulativeLayoutShift" : {
              "description" : "Cumulative layout shift: Available for Chromium-based browsers. Measured using Google-provided APIs.",
              "format" : "double",
              "type" : "number"
            },
            "customErrorCount" : {
              "description" : "The total number of custom errors during the action.",
              "format" : "int32",
              "type" : "integer"
            },
            "documentInteractiveTime" : {
              "description" : "The amount of time spent until the document for the action became interactive, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "domCompleteTime" : {
              "description" : "The amount of time until the DOM tree is completed, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "domContentLoadedTime" : {
              "description" : "The amount of time until the DOM tree is loaded, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "domain" : {
              "description" : "The DNS domain where the action has been recorded",
              "type" : "string"
            },
            "duration" : {
              "description" : "The duration of the action, in milliseconds",
              "format" : "int64",
              "type" : "integer"
            },
            "endTime" : {
              "description" : "The stop time of the action on the server, in UTC milliseconds",
              "format" : "int64",
              "type" : "integer"
            },
            "entryAction" : {
              "type" : "boolean"
            },
            "exitAction" : {
              "type" : "boolean"
            },
            "firstInputDelay" : {
              "description" : "The first input delay (FID) is the time (in milliseconds) that the browser took to respond to the first user input.",
              "format" : "int32",
              "type" : "integer"
            },
            "firstPartyBusyTime" : {
              "description" : "The time spent waiting for resources from the originating server for the action, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "firstPartyResources" : {
              "description" : "The number of resources fetched from the originating server for the action.",
              "format" : "int32",
              "type" : "integer"
            },
            "frontendTime" : {
              "description" : "The amount of time spent on the frontend rendering for the action, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "javascriptErrorCount" : {
              "description" : "The total number of Javascript errors during the action.",
              "format" : "int32",
              "type" : "integer"
            },
            "largestContentfulPaint" : {
              "description" : "The largest contentful paint (LCP) is the time (in milliseconds) that the largest element on the page took to render.",
              "format" : "int32",
              "type" : "integer"
            },
            "loadEventEnd" : {
              "description" : "The amount of time until the load event ended, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "loadEventStart" : {
              "description" : "The amount of time until the load event started, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "name" : {
              "description" : "The name of the action.",
              "type" : "string"
            },
            "navigationStartTime" : {
              "description" : "The timestamp of the navigation start, in UTC milliseconds.",
              "format" : "int64",
              "type" : "integer"
            },
            "networkTime" : {
              "description" : "The amount of time spent on the data transfer for the action, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "referrer" : {
              "description" : "The referrer.",
              "type" : "string"
            },
            "requestErrorCount" : {
              "description" : "The total number of request errors during the action.",
              "format" : "int32",
              "type" : "integer"
            },
            "requestStart" : {
              "description" : "The amount of time until the request started, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "responseEnd" : {
              "description" : "The amount of time until the response ended, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "responseStart" : {
              "description" : "The amount of time until the response started, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "serverTime" : {
              "description" : "The amount of time spent on the server-side processing for the action, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "speedIndex" : {
              "description" : "A score indicating how quickly the page content is visually populated. A low speed index means that most parts of a page are rendering quickly.",
              "format" : "int32",
              "type" : "integer"
            },
            "startSequenceNumber" : {
              "description" : "The sequence number of the action (to get a kind of order).",
              "format" : "int32",
              "type" : "integer"
            },
            "startTime" : {
              "description" : "The start time of the action on the server, in in UTC milliseconds.",
              "format" : "int64",
              "type" : "integer"
            },
            "targetUrl" : {
              "description" : "The URL of the action.",
              "type" : "string"
            },
            "thirdPartyBusyTime" : {
              "description" : "The time spent waiting for third party resources for the action, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            },
            "thirdPartyResources" : {
              "description" : "The number of third party resources loaded for the action.",
              "format" : "int32",
              "type" : "integer"
            },
            "totalBlockingTime" : {
              "description" : "The time between the moment when the browser receives a request to download a resource and the time that it actually starts downloading the resource in ms.",
              "format" : "int32",
              "type" : "integer"
            },
            "type" : {
              "description" : "The type of the action.",
              "enum" : [ "Custom", "EndVisit", "Error", "Load", "RageClick", "StandaloneAgentEvent", "StandaloneHttpError", "SyntheticHiddenAction", "UserSessionProperties", "ViewChangeEvent", "VisitTag", "Xhr" ],
              "type" : "string"
            },
            "userActionPropertyCount" : {
              "description" : "The total number of properties in the action.",
              "format" : "int32",
              "type" : "integer"
            },
            "visuallyCompleteTime" : {
              "description" : "The amount of time until the page is visually complete, in milliseconds.",
              "format" : "int32",
              "type" : "integer"
            }
          },
          "type" : "object"
        } ],
        "description" : "Contains detailed information about Browser monitor action.",
        "required" : [ "monitorType" ],
        "type" : "object"
      },
      "Batch" : {
        "properties" : {
          "records" : {
            "items" : {
              "additionalProperties" : {
                "type" : "object"
              },
              "type" : "object"
            },
            "type" : "array"
          },
          "types" : {
            "additionalProperties" : {
              "enum" : [ "array", "binary", "boolean", "counter", "double", "duration", "geo_point", "ip_address", "long", "string", "summary_stats", "timeframe", "timestamp", "tuple", "undefined" ],
              "type" : "string"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "BizEventIngestError" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "index" : {
            "format" : "int32",
            "type" : "integer"
          },
          "message" : {
            "type" : "string"
          },
          "source" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BizEventIngestResult" : {
        "description" : "Result received after ingesting business events.",
        "properties" : {
          "errors" : {
            "description" : "A list of business events ingest errors.",
            "items" : {
              "$ref" : "#/components/schemas/BizEventIngestError"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Bucket" : {
        "description" : "A bucket containing all matching elements for the specified criterion.",
        "properties" : {
          "aggregations" : {
            "$ref" : "#/components/schemas/Aggregations"
          },
          "count" : {
            "description" : "The number of elements in the bucket.",
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "description" : "The key of the bucket.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BucketAggregation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Aggregation"
        }, {
          "properties" : {
            "bucketKeys" : {
              "description" : "The keys of the buckets created by the aggregation.",
              "items" : {
                "type" : "string"
              },
              "type" : "array"
            },
            "buckets" : {
              "description" : "The buckets created by the bucket aggregation.",
              "items" : {
                "$ref" : "#/components/schemas/Bucket"
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ],
        "description" : "The result of a bucket aggregation.",
        "required" : [ "aggregationType" ],
        "type" : "object"
      },
      "BurnRateAlert" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractSloAlertDto"
        } ],
        "description" : "Parameters of an error budget burn rate alert.",
        "required" : [ "alertName", "alertThreshold", "alertType" ],
        "type" : "object"
      },
      "CapabilityDetailsDto" : {
        "description" : "Public metadata for a capability.",
        "properties" : {
          "authorName" : {
            "description" : "Name of the author of the capability.",
            "type" : "string"
          },
          "capabilityId" : {
            "description" : "Unique Id of the capability.",
            "type" : "string"
          },
          "clusterCompatible" : {
            "type" : "boolean",
            "writeOnly" : true
          },
          "clusterMaxVersion" : {
            "description" : "The maximum supported cluster version for this capability.",
            "format" : "int32",
            "type" : "integer"
          },
          "clusterMinVersion" : {
            "description" : "The minimum cluster version required to use this capability.",
            "format" : "int32",
            "type" : "integer"
          },
          "description" : {
            "description" : "Description of the capability.",
            "type" : "string"
          },
          "descriptionBlocks" : {
            "items" : {
              "$ref" : "#/components/schemas/DescriptionBlockDto"
            },
            "type" : "array"
          },
          "documentationLink" : {
            "description" : "An absolute link to a documentation page explaining the capability.",
            "type" : "string"
          },
          "isClusterCompatible" : {
            "description" : "Checks if the capability is compatible with the cluster version.",
            "type" : "boolean"
          },
          "marketingLink" : {
            "description" : "An absolute link to a marketing page promoting how the capability can be used with dynatrace.",
            "type" : "string"
          },
          "name" : {
            "description" : "Name of the capability.",
            "type" : "string"
          },
          "notCompatibleReason" : {
            "description" : "The reason why the capability is compatible with the cluster version.",
            "type" : "string"
          },
          "tags" : {
            "description" : "Grouping of capabilities with keywords.",
            "items" : {
              "description" : "Grouping of capabilities with keywords.",
              "type" : "string"
            },
            "type" : "array"
          },
          "type" : {
            "description" : "Represents the type of capability. It can be TECHNOLOGY, EXTENSION1 or EXTENSION2.",
            "enum" : [ "EXTENSION1", "EXTENSION2", "TECHNOLOGY" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CapabilityListDto" : {
        "properties" : {
          "items" : {
            "description" : "A list of available capabilities.",
            "items" : {
              "$ref" : "#/components/schemas/CapabilityOverviewDto"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "CapabilityOverviewDto" : {
        "description" : "Overview of a capability.",
        "properties" : {
          "artifactId" : {
            "description" : "The unique ID used by the artifacts contained in releases.",
            "example" : "snmp-extension.dynatrace.com",
            "type" : "string"
          },
          "authorName" : {
            "description" : "Name of the author of the capability.",
            "type" : "string"
          },
          "capabilityId" : {
            "description" : "Unique Id of the capability.",
            "type" : "string"
          },
          "clusterCompatible" : {
            "type" : "boolean"
          },
          "comingSoon" : {
            "description" : "Whether or not the capability is planned to be released soon",
            "type" : "boolean"
          },
          "description" : {
            "description" : "Description of the capability.",
            "type" : "string"
          },
          "documentationLink" : {
            "description" : "An absolute link to the documentation page of this capability.",
            "type" : "string"
          },
          "hasDescriptionBlocks" : {
            "description" : "Whether or not the details call will contain description blocks.",
            "type" : "boolean"
          },
          "logo" : {
            "description" : "The logo of the capability. Can be a URL or Base64 encoded. Intended for <image> html tags",
            "type" : "string"
          },
          "marketingLink" : {
            "description" : "An absolute link to the marketing page of this capability.",
            "type" : "string"
          },
          "name" : {
            "description" : "Name of the capability.",
            "type" : "string"
          },
          "notCompatibleReason" : {
            "description" : "The reason why the capability is not compatible with the cluster version.",
            "type" : "string"
          },
          "tags" : {
            "description" : "Grouping of capabilities with keywords.",
            "items" : {
              "description" : "Grouping of capabilities with keywords.",
              "type" : "string"
            },
            "type" : "array"
          },
          "type" : {
            "description" : "Represents the type of capability. It can be TECHNOLOGY, EXTENSION1 or EXTENSION2.",
            "enum" : [ "EXTENSION1", "EXTENSION2", "TECHNOLOGY" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CategoryDto" : {
        "description" : "A list of available categories.",
        "properties" : {
          "capabilities" : {
            "description" : "Capabilities associated with the category",
            "items" : {
              "description" : "Capabilities associated with the category",
              "type" : "string"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "Description of the category",
            "type" : "string"
          },
          "id" : {
            "description" : "Id of the category",
            "type" : "string"
          },
          "name" : {
            "description" : "Name of the category",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CategoryListDto" : {
        "properties" : {
          "items" : {
            "description" : "A list of available categories.",
            "items" : {
              "$ref" : "#/components/schemas/CategoryDto"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "City" : {
        "description" : "The information about a city",
        "example" : {
          "latitude" : 48.85599,
          "longitude" : 2.3448,
          "name" : "Paris"
        },
        "properties" : {
          "latitude" : {
            "description" : "Latitude of city",
            "format" : "float",
            "type" : "number"
          },
          "longitude" : {
            "description" : "Longitude of city",
            "format" : "float",
            "type" : "number"
          },
          "name" : {
            "description" : "City name",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CodeLocation" : {
        "description" : "Information about a code location.",
        "properties" : {
          "className" : {
            "description" : "The fully qualified class name of the code location.",
            "readOnly" : true,
            "type" : "string"
          },
          "displayName" : {
            "description" : "A human readable string representation of the code location.",
            "readOnly" : true,
            "type" : "string"
          },
          "functionName" : {
            "description" : "The function/method name of the code location.",
            "readOnly" : true,
            "type" : "string"
          },
          "lineNumber" : {
            "description" : "The line number of the code location.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "parameterTypes" : {
            "$ref" : "#/components/schemas/TruncatableListString"
          },
          "returnType" : {
            "description" : "The return type of the function.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "Comment" : {
        "description" : "The comment to a problem.",
        "properties" : {
          "authorName" : {
            "description" : "The user who wrote the comment.",
            "type" : "string"
          },
          "content" : {
            "description" : "The text of the comment.",
            "type" : "string"
          },
          "context" : {
            "description" : "The context of the comment.",
            "type" : "string"
          },
          "createdAtTimestamp" : {
            "description" : "The timestamp of comment creation, in UTC milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "id" : {
            "description" : "The ID of the comment.",
            "type" : "string"
          }
        },
        "required" : [ "createdAtTimestamp" ],
        "type" : "object"
      },
      "CommentRequestDtoImpl" : {
        "properties" : {
          "context" : {
            "description" : "The context of the comment.",
            "type" : "string"
          },
          "message" : {
            "description" : "The text of the comment.",
            "type" : "string"
          }
        },
        "required" : [ "message" ],
        "type" : "object"
      },
      "CommentsList" : {
        "description" : "A list of comments.",
        "properties" : {
          "comments" : {
            "description" : "The result entries.",
            "items" : {
              "$ref" : "#/components/schemas/Comment"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "comments", "totalCount" ],
        "type" : "object"
      },
      "ComplexConstraint" : {
        "description" : "A constraint on the values accepted for a complex settings property.",
        "properties" : {
          "customMessage" : {
            "description" : "A custom message for invalid values.",
            "type" : "string"
          },
          "customValidatorId" : {
            "description" : "The ID of a custom validator.",
            "example" : "my-min-max",
            "type" : "string"
          },
          "maximumPropertyCount" : {
            "description" : "The maximum number of properties that can be set.",
            "example" : 2,
            "format" : "int32",
            "type" : "integer"
          },
          "minimumPropertyCount" : {
            "description" : "The minimum number of properties that must be set.",
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "properties" : {
            "description" : "A list of properties (defined by IDs) that are used to check the constraint.",
            "items" : {
              "description" : "A list of properties (defined by IDs) that are used to check the constraint.",
              "type" : "string"
            },
            "type" : "array"
          },
          "type" : {
            "description" : "The type of the constraint.",
            "enum" : [ "CUSTOM_VALIDATOR_REF", "GREATER_THAN", "GREATER_THAN_OR_EQUAL", "LESS_THAN", "LESS_THAN_OR_EQUAL", "PROPERTY_COUNT_RANGE", "UNKNOWN" ],
            "type" : "string"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "ConfigurationMetadata" : {
        "description" : "Metadata useful for debugging",
        "properties" : {
          "clusterVersion" : {
            "description" : "Dynatrace version.",
            "example" : "1.192.1",
            "type" : "string"
          },
          "configurationVersions" : {
            "description" : "A sorted list of the version numbers of the configuration.",
            "example" : [ 4, 2 ],
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "currentConfigurationVersions" : {
            "description" : "A sorted list of version numbers of the configuration.",
            "example" : [ "1.0.4", "1.23" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "Constraint" : {
        "description" : "A constraint on the values accepted for a settings property.",
        "properties" : {
          "customMessage" : {
            "description" : "A custom message for invalid values.",
            "example" : "customConstraintMessage",
            "type" : "string"
          },
          "customValidatorId" : {
            "description" : "The ID of a custom validator.",
            "example" : "my-min-max",
            "type" : "string"
          },
          "maxLength" : {
            "description" : "The maximum allowed length of string values.",
            "example" : 20,
            "format" : "int32",
            "type" : "integer"
          },
          "maximum" : {
            "description" : "The maximum allowed value.",
            "example" : 200,
            "type" : "number"
          },
          "minLength" : {
            "description" : "The minimum required length of string values.",
            "example" : 7,
            "format" : "int32",
            "type" : "integer"
          },
          "minimum" : {
            "description" : "The minimum allowed value.",
            "example" : 3,
            "type" : "number"
          },
          "pattern" : {
            "description" : "The regular expression pattern for valid string values.",
            "example" : "^([a-z]|[0-9]|\\-|\\_|\\+|\\.)+\\@([a-z]|[0-9]|-){2,}\\.([a-z]|[0-9]|-){2,}(\\.[a-z]{2,})?$",
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the constraint.",
            "enum" : [ "CUSTOM_VALIDATOR_REF", "LENGTH", "NOT_BLANK", "NOT_EMPTY", "NO_WHITESPACE", "PATTERN", "RANGE", "REGEX", "TRIMMED", "UNIQUE", "UNKNOWN" ],
            "example" : "UNKNOWN",
            "type" : "string"
          },
          "uniqueProperties" : {
            "description" : "A list of properties for which the combination of values must be unique.",
            "example" : [ "my-prop-1", "my-prop-2" ],
            "items" : {
              "description" : "A list of properties for which the combination of values must be unique.",
              "example" : "[\"my-prop-1\",\"my-prop-2\"]",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "ConstraintViolation" : {
        "description" : "A list of constraint violations",
        "properties" : {
          "location" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "parameterLocation" : {
            "enum" : [ "PATH", "PAYLOAD_BODY", "QUERY" ],
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Country" : {
        "description" : "The information about a country",
        "example" : {
          "code" : "AT",
          "name" : "Austria"
        },
        "properties" : {
          "code" : {
            "description" : "Country code",
            "type" : "string"
          },
          "name" : {
            "description" : "Country name",
            "type" : "string"
          },
          "regions" : {
            "description" : "An ordered list of regions for a given country.",
            "items" : {
              "$ref" : "#/components/schemas/Region"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "CountryList" : {
        "description" : "An ordered list of countries",
        "example" : {
          "countries" : [ {
            "code" : "FR",
            "name" : "France"
          }, {
            "code" : "BE",
            "name" : "Belgium"
          } ],
          "countryCount" : 252
        },
        "properties" : {
          "countries" : {
            "description" : "An ordered list of countries.",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            },
            "type" : "array"
          },
          "countryCount" : {
            "description" : "Number of countries",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "CountryListWithRegions" : {
        "description" : "An ordered list of countries with their regions",
        "example" : {
          "countries" : [ {
            "code" : "FR",
            "name" : "France",
            "regionCount" : 13,
            "regions" : [ {
              "code" : "ARA",
              "name" : "Auvergne-Rhone-Alpes"
            }, {
              "code" : "BFC",
              "name" : "Bourgogne-Franche-Comte"
            } ]
          }, {
            "code" : "BE",
            "name" : "Belgium",
            "regionCount" : 11,
            "regions" : [ {
              "code" : "01",
              "name" : "Antwerp Province"
            }, {
              "code" : "11",
              "name" : "Brussels Captial"
            } ]
          } ],
          "countryCount" : 252
        },
        "properties" : {
          "countries" : {
            "description" : "An ordered list of countries.",
            "items" : {
              "$ref" : "#/components/schemas/Country"
            },
            "type" : "array"
          },
          "countryCount" : {
            "description" : "Number of countries",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "CustomApplicationImpact" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Impact"
        } ],
        "description" : "Analysis of problem impact to a custom application.",
        "required" : [ "estimatedAffectedUsers", "impactType", "impactedEntity" ],
        "type" : "object"
      },
      "CustomDeviceCreation" : {
        "description" : "Configuration of a custom device.",
        "example" : {
          "configUrl" : "http://coffee-machine.dynatrace.internal.com/coffeemachine/manage",
          "customDeviceId" : "customDeviceId",
          "displayName" : "coffeeMachine",
          "dnsNames" : [ "coffee-machine.dynatrace.internal.com" ],
          "faviconUrl" : "https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png",
          "group" : "myCustomDeviceGroup",
          "ipAddresses" : [ "10.0.0.1" ],
          "listenPorts" : [ 80 ],
          "properties" : { },
          "type" : "coffee machine"
        },
        "properties" : {
          "configUrl" : {
            "description" : "The URL of a configuration web page for the custom device, such as a login page for a firewall or router.",
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          },
          "customDeviceId" : {
            "description" : "The internal ID of the custom device. \n\n If you use the ID of an existing device, the respective parameters will be updated.",
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string"
          },
          "displayName" : {
            "description" : "The name of the custom device to be displayed in the user interface.",
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string"
          },
          "dnsNames" : {
            "description" : "The list of DNS names related to the custom device. \n\nThese names are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape. \n\nIf you send a value, the existing values will be overwritten. \n\nIf you send `null` or an empty value; or omit this field, the existing values will be kept.",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 20,
            "minItems" : 0,
            "type" : "array",
            "uniqueItems" : true
          },
          "faviconUrl" : {
            "description" : "The icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.",
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string"
          },
          "group" : {
            "description" : "User defined group ID of entity. \n\nThe group ID helps to keep a consistent picture of device-group relations. One of many cases where a proper group is important is service detection: you can define which custom devices should lead to the same service by defining the same group ID for them. \n\nIf you set a group ID, it will be hashed into the Dynatrace entity ID of the custom device. In that case the custom device can only be part of one custom device group. \n\nIf you don't set the group ID, Dynatrace will create it based on the ID or type of the custom device. Also, the group will not be hashed into the device ID which means the device may switch groups.",
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string"
          },
          "ipAddresses" : {
            "description" : "The list of IP addresses that belong to the custom device. \n\nThese addresses are used to automatically discover the horizontal communication relationship between this component and all other observed components within Smartscape. Once a connection is discovered, it is automatically mapped and shown within Smartscape. \n\nIf you send a value (including an empty value), the existing values will be overwritten. \n\nIf you send `null` or omit this field, the existing values will be kept.",
            "items" : {
              "type" : "string"
            },
            "maxItems" : 100,
            "minItems" : 0,
            "type" : "array",
            "uniqueItems" : true
          },
          "listenPorts" : {
            "description" : "The list of ports the custom devices listens to. \n\nThese ports are used to discover the horizontal communication relationship between this component and all other observed components within Smartscape. \n\nOnce a connection is discovered, it is automatically mapped and shown within Smartscape. \n\nIf ports are specified, you should also add at least one IP address or a DNS name for the custom device. \n\nIf you send a value, the existing values will be overwritten. \n\nIf you send `null`, or an empty value, or omit this field, the existing values will be kept.",
            "items" : {
              "format" : "int32",
              "type" : "integer"
            },
            "maxItems" : 100,
            "minItems" : 0,
            "type" : "array",
            "uniqueItems" : true
          },
          "properties" : {
            "additionalProperties" : {
              "description" : "The list of key-value pair properties that will be shown beneath the infographics of your custom device.",
              "type" : "string"
            },
            "description" : "The list of key-value pair properties that will be shown beneath the infographics of your custom device.",
            "type" : "object"
          },
          "type" : {
            "description" : "The technology type definition of the custom device. \n\nIt must be the same technology type of the metric you're reporting. \n\nIf you send a value, the existing value will be overwritten. \n\nIf you send `null`, empty or omit this field, the existing value will be kept.",
            "maxLength" : 128,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "required" : [ "customDeviceId", "displayName" ],
        "type" : "object"
      },
      "CustomDeviceCreationResult" : {
        "description" : "The short representation of a newly created custom device.",
        "properties" : {
          "entityId" : {
            "description" : "The Dynatrace entity ID of the custom device.",
            "type" : "string"
          },
          "groupId" : {
            "description" : "The Dynatrace entity ID of the custom device group.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CustomEntityTags" : {
        "description" : "A list of custom tags.",
        "example" : {
          "tags" : [ {
            "context" : "CONTEXTLESS",
            "key" : "mainApp",
            "stringRepresentation" : "mainApp"
          }, {
            "context" : "CONTEXTLESS",
            "key" : "bookings",
            "stringRepresentation" : "bookings"
          } ],
          "totalCount" : 2
        },
        "properties" : {
          "tags" : {
            "description" : "A list of custom tags.",
            "items" : {
              "$ref" : "#/components/schemas/METag"
            },
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "totalCount" : {
            "description" : "The total number of tags in the response.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "tags" ],
        "type" : "object"
      },
      "CustomValidationErrorInfo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ErrorInfo"
        } ],
        "type" : "object"
      },
      "DatasourceDefinition" : {
        "description" : "Configuration of a datasource for a property.",
        "properties" : {
          "filterProperties" : {
            "description" : "The properties to filter the datasource options on.",
            "items" : {
              "description" : "The properties to filter the datasource options on.",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "fullContext" : {
            "description" : "Whether this datasource expects full setting payload as the context.",
            "type" : "boolean"
          },
          "identifier" : {
            "description" : "The identifier of a custom data source of the property's value.",
            "type" : "string"
          },
          "resetValue" : {
            "description" : "When to reset datasource value in the UI on filter change.",
            "enum" : [ "ALWAYS", "INVALID_ONLY", "NEVER" ],
            "type" : "string"
          },
          "useApiSearch" : {
            "description" : "If true, the datasource should use the api to filter the results instead of client-side filtering.",
            "type" : "boolean"
          },
          "validate" : {
            "description" : "Whether to validate input to only allow values returned by the datasource.",
            "type" : "boolean"
          }
        },
        "required" : [ "filterProperties", "fullContext", "identifier", "useApiSearch", "validate" ],
        "type" : "object"
      },
      "DavisSecurityAdvice" : {
        "description" : "Security advice from the Davis security advisor.",
        "properties" : {
          "adviceType" : {
            "description" : "The type of the advice.",
            "enum" : [ "UPGRADE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "critical" : {
            "description" : "IDs of `critical` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
            "items" : {
              "description" : "IDs of `critical` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "high" : {
            "description" : "IDs of `high` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
            "items" : {
              "description" : "IDs of `high` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "low" : {
            "description" : "IDs of `low` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
            "items" : {
              "description" : "IDs of `low` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "medium" : {
            "description" : "IDs of `medium` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
            "items" : {
              "description" : "IDs of `medium` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "name" : {
            "description" : "The name of the advice.",
            "readOnly" : true,
            "type" : "string"
          },
          "none" : {
            "description" : "IDs of `none` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
            "items" : {
              "description" : "IDs of `none` level [security problems](https://dt-url.net/p103u1h) caused by vulnerable component.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "technology" : {
            "description" : "The technology of the vulnerable component.",
            "enum" : [ "DOTNET", "JAVA", "KUBERNETES", "NODE_JS", "PHP" ],
            "readOnly" : true,
            "type" : "string"
          },
          "vulnerableComponent" : {
            "description" : "The vulnerable component to which advice applies.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "DavisSecurityAdviceList" : {
        "description" : "A list of advice from the Davis security advisor.",
        "properties" : {
          "advices" : {
            "items" : {
              "$ref" : "#/components/schemas/DavisSecurityAdvice"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "DeletedEntityTags" : {
        "description" : "Deleted custom tag.",
        "example" : {
          "matchedEntitiesCount" : 2
        },
        "properties" : {
          "matchedEntitiesCount" : {
            "description" : "The number of monitored entities where the tag has been deleted.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "DescriptionBlockDto" : {
        "description" : "Represents a section of data describing the given capability.",
        "properties" : {
          "images" : {
            "description" : "Collection of images (in case of gallery).",
            "items" : {
              "$ref" : "#/components/schemas/ImageDto"
            },
            "type" : "array"
          },
          "source" : {
            "description" : "Source of the description block (in case of markdown).",
            "type" : "string"
          },
          "sourceId" : {
            "description" : "Optional identifier of special description blocks.",
            "type" : "string"
          },
          "title" : {
            "description" : "Title of the description block.",
            "type" : "string"
          },
          "type" : {
            "description" : "Type of the data, either markdown or gallery.",
            "enum" : [ "GALLERY", "MARKDOWN" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Duration" : {
        "description" : "Defines a period of time.",
        "properties" : {
          "unit" : {
            "description" : "The unit of time. \n\n If not set, millisecond is used.",
            "enum" : [ "DAYS", "HOURS", "MILLIS", "MINUTES", "SECONDS" ],
            "type" : "string"
          },
          "value" : {
            "description" : "The amount of time.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "value" ],
        "type" : "object"
      },
      "EffectiveSettingsValue" : {
        "description" : "An effective settings value.",
        "properties" : {
          "author" : {
            "description" : "The user (identified by a user ID or a public token ID) who performed that most recent modification.",
            "example" : "john.doe@example.com",
            "type" : "string"
          },
          "created" : {
            "description" : "The timestamp of the creation.",
            "format" : "int64",
            "type" : "integer"
          },
          "externalId" : {
            "description" : "The external identifier of the settings object.",
            "type" : "string"
          },
          "modified" : {
            "description" : "The timestamp of the last modification.",
            "format" : "int64",
            "type" : "integer"
          },
          "origin" : {
            "description" : "The origin of the settings value.",
            "example" : "HOST-D3A3C5A146830A79",
            "type" : "string"
          },
          "schemaId" : {
            "description" : "The schema on which the object is based.",
            "example" : "builtin:container.built-in-monitoring-rule",
            "type" : "string"
          },
          "schemaVersion" : {
            "description" : "The version of the schema on which the object is based.",
            "example" : "1.0.0",
            "type" : "string"
          },
          "summary" : {
            "description" : "A short summary of settings.",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/SettingsValue"
          }
        },
        "type" : "object"
      },
      "EffectiveSettingsValuesList" : {
        "description" : "A list of effective settings values.",
        "properties" : {
          "items" : {
            "description" : "A list of effective settings values.",
            "items" : {
              "$ref" : "#/components/schemas/EffectiveSettingsValue"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "items", "pageSize", "totalCount" ],
        "type" : "object"
      },
      "EntitiesList" : {
        "description" : "A list of monitored entities along with their properties.",
        "properties" : {
          "entities" : {
            "description" : "A list of monitored entities.",
            "items" : {
              "$ref" : "#/components/schemas/Entity"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "EntitlementFeatureState" : {
        "description" : "Describes the current entitlement feature state.",
        "example" : {
          "enabled" : "true",
          "name" : "HostMonitoring"
        },
        "properties" : {
          "enabled" : {
            "description" : "Defines whether a feature is enabled or disabled.",
            "type" : "boolean"
          },
          "name" : {
            "description" : "Name of the feature.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntitlementState" : {
        "description" : "Returns the current entitlement state of an environment.",
        "example" : {
          "entitlementFeatureStates" : [ {
            "enabled" : "true",
            "name" : "HostMonitoring"
          }, {
            "enabled" : "false",
            "name" : "Logs"
          } ],
          "environmentUuid" : "epk22427"
        },
        "properties" : {
          "entitlementFeatureStates" : {
            "description" : "A list of entitlement feature states.",
            "items" : {
              "$ref" : "#/components/schemas/EntitlementFeatureState"
            },
            "type" : "array"
          },
          "environmentUuid" : {
            "description" : "UUID of the environment.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Entity" : {
        "description" : "The properties of a monitored entity.",
        "example" : {
          "displayName" : "my host",
          "entityId" : "HOST-06F288EE2A930951",
          "firstSeenTms" : 1574697667547,
          "fromRelationships" : {
            "isInstanceOf" : [ {
              "id" : "HOST_GROUP-0E489369D663A4BF",
              "type" : "HOST_GROUP"
            } ]
          },
          "icon" : {
            "customIconPath" : "host",
            "primaryIconType" : "linux",
            "secondaryIconType" : "microsoft-azure-signet"
          },
          "lastSeenTms" : 1588242361417,
          "managementZones" : [ {
            "id" : "6239538939987181652",
            "name" : "main app"
          } ],
          "properties" : {
            "bitness" : 64,
            "cpuCores" : 8,
            "monitoringMode" : "FULL_STACK",
            "networkZoneId" : "aws.us.east01",
            "osArchitecture" : "X86",
            "osType" : "LINUX"
          },
          "tags" : [ {
            "context" : "CONTEXTLESS",
            "key" : "architecture",
            "stringRepresentation" : "architecture:x86",
            "value" : "x86"
          }, {
            "context" : "ENVIRONMENT",
            "key" : "Infrastructure",
            "stringRepresentation" : "[ENVIRONMENT]Infrastructure:Linux",
            "value" : "Linux"
          } ],
          "toRelationships" : {
            "isDiskOf" : [ {
              "id" : "DISK-0393340DCA3853B0",
              "type" : "DISK"
            } ]
          },
          "type" : "HOST"
        },
        "properties" : {
          "displayName" : {
            "description" : "The name of the entity, displayed in the UI.",
            "type" : "string"
          },
          "entityId" : {
            "description" : "The ID of the entity.",
            "type" : "string"
          },
          "firstSeenTms" : {
            "description" : "The timestamp at which the entity was first seen, in UTC milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "fromRelationships" : {
            "additionalProperties" : {
              "description" : "A list of relationships where the entity occupies the FROM position.",
              "items" : {
                "$ref" : "#/components/schemas/EntityId"
              },
              "type" : "array"
            },
            "description" : "A list of relationships where the entity occupies the FROM position.",
            "type" : "object"
          },
          "icon" : {
            "$ref" : "#/components/schemas/EntityIcon"
          },
          "lastSeenTms" : {
            "description" : "The timestamp at which the entity was last seen, in UTC milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "managementZones" : {
            "description" : "A set of management zones to which the entity belongs.",
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "properties" : {
            "additionalProperties" : {
              "description" : "A list of additional properties of the entity.",
              "type" : "object"
            },
            "description" : "A list of additional properties of the entity.",
            "type" : "object"
          },
          "tags" : {
            "description" : "A set of tags assigned to the entity.",
            "items" : {
              "$ref" : "#/components/schemas/METag"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "toRelationships" : {
            "additionalProperties" : {
              "description" : "A list of relationships where the entity occupies the TO position.",
              "items" : {
                "$ref" : "#/components/schemas/EntityId"
              },
              "type" : "array"
            },
            "description" : "A list of relationships where the entity occupies the TO position.",
            "type" : "object"
          },
          "type" : {
            "description" : "The type of the entity.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntityIcon" : {
        "description" : "The icon of a monitored entity.",
        "properties" : {
          "customIconPath" : {
            "description" : "The user-defined icon of the entity. \n\nSpecify the [barista](https://dt-url.net/u403suy) ID of the icon or a URL of your own icon.",
            "type" : "string"
          },
          "primaryIconType" : {
            "description" : "The primary icon of the entity. \n\nSpecified by the [barista](https://dt-url.net/u403suy) ID of the icon.",
            "readOnly" : true,
            "type" : "string"
          },
          "secondaryIconType" : {
            "description" : "The secondary icon of the entity. \n\nSpecified by the [barista](https://dt-url.net/u403suy) ID of the icon.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntityId" : {
        "description" : "A short representation of a monitored entity.",
        "properties" : {
          "id" : {
            "description" : "The ID of the entity.",
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the entity.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntityMarker" : {
        "description" : "Marks a monitored entity in the screen for instance in an entity table",
        "properties" : {
          "markerType" : {
            "description" : "Defines what type of problem is marked",
            "enum" : [ "CRITICAL", "INFO" ],
            "type" : "string"
          },
          "meIdentifier" : {
            "type" : "string"
          },
          "summaryMessage" : {
            "description" : "A message that describe the marker in textual form",
            "type" : "string"
          }
        },
        "required" : [ "markerType" ],
        "type" : "object"
      },
      "EntityShortRepresentation" : {
        "description" : "The short representation of a Dynatrace entity.",
        "example" : {
          "description" : "Dynatrace entity for the REST API example",
          "id" : "6a98d7bc-abb9-44f8-ae6a-73e68e71812a",
          "name" : "Dynatrace entity"
        },
        "properties" : {
          "description" : {
            "description" : "A short description of the Dynatrace entity.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The ID of the Dynatrace entity.",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the Dynatrace entity.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "EntityStub" : {
        "description" : "A short representation of a monitored entity.",
        "properties" : {
          "entityId" : {
            "$ref" : "#/components/schemas/EntityId"
          },
          "name" : {
            "description" : "The name of the entity. \n\n Not included in the response in case no entity with the relevant ID was found.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntityType" : {
        "description" : "A list of properties of the monitored entity type.",
        "example" : {
          "entityLimitExceeded" : "false",
          "fromRelationships" : [ {
            "id" : "RUNS_ON_RESOURCE",
            "toTypes" : [ "CUSTOM_DEVICE" ]
          }, {
            "id" : "IS_NETWORK_CLIENT_OF_HOST",
            "toTypes" : [ "HOST", "CUSTOM_DEVICE" ]
          } ],
          "managementZones" : "placeholder for management zones",
          "properties" : [ {
            "id" : "BITNESS",
            "type" : "Enum"
          }, {
            "id" : "CPU_CORES",
            "type" : "Number"
          } ],
          "tags" : "placeholder for tags",
          "toRelationships" : [ {
            "fromTypes" : [ "DISK" ],
            "id" : "IS_DISK_OF"
          }, {
            "fromTypes" : [ "VMWARE_DATACENTER", "GEOLOC_SITE" ],
            "id" : "IS_SITE_OF"
          } ],
          "type" : "HOST"
        },
        "properties" : {
          "dimensionKey" : {
            "description" : "The dimension key used within metrics for this monitored entity.",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name of the monitored entity.",
            "type" : "string"
          },
          "entityLimitExceeded" : {
            "description" : "Whether the entity creation limit for the given type has been exceeded",
            "type" : "boolean"
          },
          "fromRelationships" : {
            "description" : "A list of possible relationships where the monitored entity type occupies the FROM position",
            "items" : {
              "$ref" : "#/components/schemas/ToPosition"
            },
            "type" : "array"
          },
          "managementZones" : {
            "description" : "The placeholder for the list of management zones of an actual entity.",
            "type" : "string"
          },
          "properties" : {
            "description" : "A list of additional properties of the monitored entity type.",
            "items" : {
              "$ref" : "#/components/schemas/EntityTypePropertyDto"
            },
            "type" : "array"
          },
          "tags" : {
            "description" : "The placeholder for the list of tags of an actual entity.",
            "type" : "string"
          },
          "toRelationships" : {
            "description" : "A list of possible relationships where the monitored entity type occupies the TO position.",
            "items" : {
              "$ref" : "#/components/schemas/FromPosition"
            },
            "type" : "array"
          },
          "type" : {
            "description" : "The type of the monitored entity.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntityTypeList" : {
        "description" : "A list of properties of all available entity types.",
        "properties" : {
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          },
          "types" : {
            "description" : "The list of meta information for all available entity-types",
            "items" : {
              "$ref" : "#/components/schemas/EntityType"
            },
            "type" : "array"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "EntityTypePropertyDto" : {
        "description" : "The property of a monitored entity.",
        "properties" : {
          "displayName" : {
            "description" : "The display-name of the property.",
            "example" : "cpu cores",
            "type" : "string"
          },
          "id" : {
            "description" : "The ID of the property.",
            "example" : "cpuCores",
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the property.",
            "example" : "Number",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EntrypointPayload" : {
        "description" : "Describes a payload sent to an entrypoint during an attack.",
        "properties" : {
          "name" : {
            "description" : "Name of the payload, if applicable.",
            "nullable" : true,
            "readOnly" : true,
            "type" : "string"
          },
          "type" : {
            "description" : "Type of the payload.",
            "enum" : [ "HTTP_BODY", "HTTP_COOKIE", "HTTP_HEADER_NAME", "HTTP_HEADER_VALUE", "HTTP_OTHER", "HTTP_PARAMETER_NAME", "HTTP_PARAMETER_VALUE", "HTTP_URL", "UNKNOWN" ],
            "readOnly" : true,
            "type" : "string"
          },
          "value" : {
            "description" : "Value of the payload.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "EnumType" : {
        "description" : "Definition of an enum property.",
        "properties" : {
          "description" : {
            "description" : "A short description of the property.",
            "example" : "typeDescription",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name of the property.",
            "example" : "typeDisplayName",
            "type" : "string"
          },
          "documentation" : {
            "description" : "An extended description and/or links to documentation.",
            "example" : "typeDocumentation",
            "type" : "string"
          },
          "enumClass" : {
            "description" : "An existing Java enum class that holds the allowed values of the enum.",
            "example" : "enumClass",
            "type" : "string"
          },
          "items" : {
            "description" : "A list of allowed values of the enum.",
            "items" : {
              "$ref" : "#/components/schemas/EnumValue"
            },
            "type" : "array"
          },
          "type" : {
            "description" : "The type of the property.",
            "enum" : [ "enum" ],
            "example" : "enum",
            "type" : "string"
          }
        },
        "required" : [ "description", "documentation", "items", "type" ],
        "type" : "object"
      },
      "EnumValue" : {
        "description" : "An allowed value for an enum property.",
        "properties" : {
          "description" : {
            "description" : "A short description of the value.",
            "example" : "exampleDescription",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name of the value.",
            "example" : "exampleDisplayName",
            "type" : "string"
          },
          "enumInstance" : {
            "description" : "The name of the value in an existing Java enum class.",
            "example" : "exampleJavaEnumValue",
            "type" : "string"
          },
          "icon" : {
            "description" : "The icon of the value.",
            "example" : "checkmark",
            "type" : "string"
          },
          "value" : {
            "description" : "The allowed value of the enum.",
            "example" : "exampleValue",
            "type" : "object"
          }
        },
        "required" : [ "displayName", "value" ],
        "type" : "object"
      },
      "Error" : {
        "properties" : {
          "code" : {
            "description" : "The HTTP status code",
            "format" : "int32",
            "type" : "integer"
          },
          "constraintViolations" : {
            "description" : "A list of constraint violations",
            "items" : {
              "$ref" : "#/components/schemas/ConstraintViolation"
            },
            "type" : "array"
          },
          "message" : {
            "description" : "The error message",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ErrorEnvelope" : {
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/Error"
          }
        },
        "type" : "object"
      },
      "ErrorInfo" : {
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "type" : {
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `custom` -> CustomValidationErrorInfo \n* `media-type` -> MediaTypeErrorInfo \n* `proxy` -> ProxyErrorInfo \n* `request-body` -> RequestBodyErrorInfo \n* `parameter` -> ParameterErrorInfo \n* `qf-raw-error` -> QueryFrontendRawErrorInfo \n",
            "enum" : [ "custom", "media-type", "parameter", "proxy", "qf-raw-error", "request-body" ],
            "type" : "string"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "Event" : {
        "description" : "Configuration of an event.",
        "properties" : {
          "correlationId" : {
            "description" : "The correlation ID of the event. ",
            "example" : "933613657e1c8fcf",
            "type" : "string"
          },
          "endTime" : {
            "description" : "The timestamp when the event was closed, in UTC milliseconds. \n\n Has the value of `null` if the event is still active.",
            "example" : 1564039524182,
            "format" : "int64",
            "type" : "integer"
          },
          "entityId" : {
            "$ref" : "#/components/schemas/EntityStub"
          },
          "entityTags" : {
            "description" : "A list of tags of the related entity.",
            "items" : {
              "$ref" : "#/components/schemas/METag"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "eventId" : {
            "description" : "The ID of the event.",
            "example" : "4293884258445543163_1564039524182",
            "type" : "string"
          },
          "eventType" : {
            "description" : "The type of the event.",
            "example" : "LOW_DISK_SPACE",
            "type" : "string"
          },
          "frequentEvent" : {
            "description" : "If `true`, the event happens [frequently](https://dt-url.net/4da3kdg). \n\n A frequent event doesn't raise a problem.",
            "type" : "boolean"
          },
          "managementZones" : {
            "description" : "A list of all management zones that the event belongs to.",
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "properties" : {
            "description" : "A list of event properties.",
            "items" : {
              "$ref" : "#/components/schemas/EventProperty"
            },
            "type" : "array"
          },
          "startTime" : {
            "description" : "The timestamp when the event was raised, in UTC milliseconds.",
            "example" : 1564039524182,
            "format" : "int64",
            "type" : "integer"
          },
          "status" : {
            "description" : "The status of the event.",
            "enum" : [ "CLOSED", "OPEN" ],
            "example" : "OPEN",
            "type" : "string"
          },
          "suppressAlert" : {
            "description" : "The alerting status during a [maintenance](https://dt-url.net/b2123rg0): \n\n * `false`: Alerting works as usual. \n* `true`: Alerting is disabled.",
            "type" : "boolean"
          },
          "suppressProblem" : {
            "description" : "The problem detection status during a [maintenance](https://dt-url.net/b2123rg0): \n\n * `false`: Problem detection works as usual. \n* `true`: Problem detection is disabled.",
            "type" : "boolean"
          },
          "title" : {
            "description" : "The title of the event.",
            "example" : "High CPU load on host X",
            "type" : "string"
          },
          "underMaintenance" : {
            "description" : "If `true`, the event happened while the monitored system was under maintenance.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "EventEvidence" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Evidence"
        }, {
          "properties" : {
            "data" : {
              "$ref" : "#/components/schemas/Event"
            },
            "endTime" : {
              "description" : "The end timestamp of the event, in UTC milliseconds. \n\n Has `-1` value, if the event is still active.",
              "format" : "int64",
              "type" : "integer"
            },
            "eventId" : {
              "description" : "The ID of the event.",
              "type" : "string"
            },
            "eventType" : {
              "description" : "The type of the event.",
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "The event evidence of the problem. \n\nAn event that occurred during the problem lifespan that might be related to the root cause.",
        "required" : [ "displayName", "endTime", "entity", "eventId", "eventType", "evidenceType", "rootCauseRelevant", "startTime" ],
        "type" : "object"
      },
      "EventIngest" : {
        "description" : "The configuration of an event to be ingested.",
        "properties" : {
          "endTime" : {
            "description" : "The end time of the event, in UTC milliseconds.\n\nIf not set, the start time plus timeout is used.",
            "format" : "int64",
            "type" : "integer"
          },
          "entitySelector" : {
            "description" : "The [entity selector](https://dt-url.net/apientityselector), defining a set of Dynatrace entities to be associated with the event.\n\nOnly entities that have been active within the last 24 hours can be selected. \n\n If not set, the event is associated with the environment (`dt.entity.environment`) entity.",
            "type" : "string"
          },
          "eventType" : {
            "description" : "The type of the event.",
            "enum" : [ "AVAILABILITY_EVENT", "CUSTOM_ALERT", "CUSTOM_ANNOTATION", "CUSTOM_CONFIGURATION", "CUSTOM_DEPLOYMENT", "CUSTOM_INFO", "ERROR_EVENT", "MARKED_FOR_TERMINATION", "PERFORMANCE_EVENT", "RESOURCE_CONTENTION_EVENT" ],
            "type" : "string"
          },
          "properties" : {
            "additionalProperties" : {
              "description" : "A map of event properties.\n\nKeys with prefix `dt.*` are reserved and may be used to set event properties with predefined semantics within the Dynatrace product.\nAll other keys are interpreted as user-defined event properties.\n\nValues of Dynatrace-reserved properties (identified by a key with prefix `dt.*`) must fulfill the requirements of the respective property.",
              "type" : "string"
            },
            "description" : "A map of event properties.\n\nKeys with prefix `dt.*` are reserved and may be used to set event properties with predefined semantics within the Dynatrace product.\nAll other keys are interpreted as user-defined event properties.\n\nValues of Dynatrace-reserved properties (identified by a key with prefix `dt.*`) must fulfill the requirements of the respective property.",
            "type" : "object"
          },
          "startTime" : {
            "description" : "The start time of the event, in UTC milliseconds.\n\nIf not set, the current timestamp is used.\n\nDepending on the event type, the start time must not lie in the future more than 5 minutes for trigger events and 7 days for info events.",
            "format" : "int64",
            "type" : "integer"
          },
          "timeout" : {
            "description" : "The timeout of the event, in minutes.\n\nIf not set, 15 is used.\n\nThe timeout will automatically be capped to a maximum of 300 minutes (5 hours).\n\nProblem-opening events can be refreshed and therefore kept open by sending the same payload again.",
            "format" : "int32",
            "type" : "integer"
          },
          "title" : {
            "description" : "The title of the event.",
            "type" : "string"
          }
        },
        "required" : [ "eventType", "title" ],
        "type" : "object"
      },
      "EventIngestResult" : {
        "description" : "The result of a created event report.",
        "properties" : {
          "correlationId" : {
            "description" : "The correlation ID of the created event.",
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the ingestion.",
            "enum" : [ "INVALID_ENTITY_TYPE", "INVALID_METADATA", "INVALID_TIMESTAMPS", "OK" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EventIngestResults" : {
        "description" : "The results of an event ingest.",
        "properties" : {
          "eventIngestResults" : {
            "description" : "The result of each created event report.",
            "items" : {
              "$ref" : "#/components/schemas/EventIngestResult"
            },
            "type" : "array"
          },
          "reportCount" : {
            "description" : "The number of created event reports.",
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "EventList" : {
        "description" : "A list of events.",
        "properties" : {
          "events" : {
            "description" : "A list of events.",
            "items" : {
              "$ref" : "#/components/schemas/Event"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          },
          "warnings" : {
            "description" : "A list of warnings.",
            "items" : {
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "EventMarker" : {
        "description" : "Marks an event in the screen",
        "properties" : {
          "eventId" : {
            "type" : "string"
          },
          "markerType" : {
            "description" : "Defines what type of problem is marked",
            "enum" : [ "CRITICAL", "INFO" ],
            "type" : "string"
          },
          "summaryMessage" : {
            "description" : "A message that describe the marker in textual form",
            "type" : "string"
          }
        },
        "required" : [ "markerType" ],
        "type" : "object"
      },
      "EventProperty" : {
        "description" : "A property of an event.",
        "properties" : {
          "key" : {
            "description" : "The key of the event property.",
            "type" : "string"
          },
          "value" : {
            "description" : "The value of the event property.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EventPropertyDetail" : {
        "description" : "Configuration of an event property.",
        "properties" : {
          "description" : {
            "description" : "A short description of the event property.",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name of the event property.",
            "example" : "Custom description",
            "type" : "string"
          },
          "key" : {
            "description" : "The event property key.",
            "example" : "dt.event.description",
            "type" : "string"
          },
          "writable" : {
            "description" : "Indicates whether the property may be set during event ingestion.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "EventPropertyDetails" : {
        "description" : "A list of event properties.",
        "properties" : {
          "eventProperties" : {
            "description" : "A list of event properties.",
            "items" : {
              "$ref" : "#/components/schemas/EventPropertyDetail"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "EventType" : {
        "description" : "Configuration of an event type.",
        "properties" : {
          "description" : {
            "description" : "A short description of the event type.",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name of the event type.",
            "example" : "High CPU",
            "type" : "string"
          },
          "severityLevel" : {
            "description" : "The severity level associated with the event type.",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "INFO", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ],
            "example" : "PERFORMANCE",
            "type" : "string"
          },
          "type" : {
            "description" : "The event type.",
            "example" : "OSI_HIGH_CPU",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "EventTypeList" : {
        "description" : "A list of event types.",
        "properties" : {
          "eventTypeInfos" : {
            "description" : "A list of event types.",
            "items" : {
              "$ref" : "#/components/schemas/EventType"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "Evidence" : {
        "description" : "An evidence of a root cause. \n\n The actual set of fields depends on the type of the evidence. Find the list of actual objects in the description of the **evidenceType** field or see [Problems API v2 - JSON models](https://dt-url.net/we03sp2).",
        "discriminator" : {
          "propertyName" : "evidenceType"
        },
        "properties" : {
          "displayName" : {
            "description" : "The display name of the evidence.",
            "type" : "string"
          },
          "entity" : {
            "$ref" : "#/components/schemas/EntityStub"
          },
          "evidenceType" : {
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `EVENT` -> EventEvidence \n* `METRIC` -> MetricEvidence \n* `TRANSACTIONAL` -> TransactionalEvidence \n* `MAINTENANCE_WINDOW` -> MaintenanceWindowEvidence \n* `AVAILABILITY_EVIDENCE` -> AvailabilityEvidence \n",
            "enum" : [ "AVAILABILITY_EVIDENCE", "EVENT", "MAINTENANCE_WINDOW", "METRIC", "TRANSACTIONAL" ],
            "type" : "string"
          },
          "groupingEntity" : {
            "$ref" : "#/components/schemas/EntityStub"
          },
          "rootCauseRelevant" : {
            "description" : "The evidence is (`true`) or is not (`false`) a part of the root cause.",
            "type" : "boolean"
          },
          "startTime" : {
            "description" : "The start time of the evidence, in UTC milliseconds.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "displayName", "entity", "evidenceType", "rootCauseRelevant", "startTime" ],
        "type" : "object"
      },
      "EvidenceDetails" : {
        "description" : "The evidence details of a problem.",
        "properties" : {
          "details" : {
            "description" : "A list of all evidence.",
            "items" : {
              "$ref" : "#/components/schemas/Evidence"
            },
            "type" : "array"
          },
          "totalCount" : {
            "description" : "The total number of evidence of a problem.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "details", "totalCount" ],
        "type" : "object"
      },
      "ExceptionalReturn" : {
        "properties" : {
          "code" : {
            "format" : "int32",
            "type" : "integer"
          },
          "errorDetails" : {
            "items" : {
              "$ref" : "#/components/schemas/ErrorInfo"
            },
            "properties" : {
              "empty" : {
                "type" : "boolean"
              }
            },
            "type" : "array"
          },
          "message" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ExecutionFullResults" : {
        "description" : "Contains extended monitor's execution details.",
        "properties" : {
          "errorCode" : {
            "description" : "Error code.",
            "type" : "string"
          },
          "executionStepCount" : {
            "description" : "Number executed steps.",
            "format" : "int32",
            "type" : "integer"
          },
          "executionSteps" : {
            "description" : "Details about the monitor's step execution.",
            "items" : {
              "$ref" : "#/components/schemas/ExecutionStep"
            },
            "type" : "array"
          },
          "failureMessage" : {
            "description" : "Failure message.",
            "type" : "string"
          },
          "status" : {
            "description" : "Execution status.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ExecutionSimpleResults" : {
        "description" : "Contains basic results of the monitor's on-demand execution.",
        "properties" : {
          "chromeError" : {
            "description" : "Informs whether is Chrome error.",
            "type" : "boolean"
          },
          "engineId" : {
            "description" : "Synthetic engine id on which monitor was executed.",
            "format" : "int64",
            "type" : "integer"
          },
          "errorCode" : {
            "description" : "Error code.",
            "type" : "string"
          },
          "executedSteps" : {
            "description" : "Number of the executed steps by Synthetic engine",
            "format" : "int32",
            "type" : "integer"
          },
          "failureMessage" : {
            "description" : "Failure message.",
            "type" : "string"
          },
          "hostNameResolutionTime" : {
            "description" : "A hostname resolution time measured in milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "httperror" : {
            "description" : "Informs whether is HTTP error.",
            "type" : "boolean"
          },
          "peerCertificateExpiryDate" : {
            "description" : "An expiry date of the first SSL certificate from the certificate chain.",
            "format" : "int64",
            "type" : "integer"
          },
          "publicLocation" : {
            "description" : "Flag informs whether request was executed on public location.",
            "type" : "boolean"
          },
          "redirectionTime" : {
            "description" : "Total number of milliseconds spent on handling all redirect requests, measured in milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "redirectsCount" : {
            "description" : "Number of redirects.",
            "format" : "int32",
            "type" : "integer"
          },
          "responseBodySizeLimitExceeded" : {
            "description" : "A flag indicating that the response payload size limit of 10MB has been exceeded.",
            "type" : "boolean"
          },
          "responseSize" : {
            "description" : "Request's response size in bytes.",
            "format" : "int64",
            "type" : "integer"
          },
          "responseStatusCode" : {
            "description" : "Response status code.",
            "format" : "int32",
            "type" : "integer"
          },
          "startTimestamp" : {
            "description" : "Start timestamp.",
            "format" : "int64",
            "type" : "integer"
          },
          "status" : {
            "description" : "Execution status.",
            "type" : "string"
          },
          "tcpConnectTime" : {
            "description" : "A TCP connect time measured in milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "timeToFirstByte" : {
            "description" : "A time to first byte measured in milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "tlsHandshakeTime" : {
            "description" : "A TLS handshake time measured in milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "totalTime" : {
            "description" : "A total time measured in milliseconds.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ExecutionStep" : {
        "description" : "Contains detailed information about the monitor's step execution.",
        "discriminator" : {
          "propertyName" : "monitorType"
        },
        "properties" : {
          "monitorType" : {
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `BROWSER` -> BMAction \n* `HTTP` -> MonitorRequestExecutionResult \n",
            "enum" : [ "BROWSER", "HTTP" ],
            "type" : "string"
          }
        },
        "required" : [ "monitorType" ],
        "type" : "object"
      },
      "ExportedLogRecordList" : {
        "description" : "A list of exported log records.",
        "example" : {
          "nextPageKey" : "___-2lZ43q0AAAAdeJxjYAAC1sLS1KJKBhjggtIijFCGHEwCAFiHAoP___7aVnjerQ",
          "pageSize" : 100,
          "results" : [ {
            "additionalColumns" : {
              "custom.attribute" : [ "value1", "value2" ],
              "loglevel" : [ "SEVERE" ]
            },
            "content" : "example log content",
            "event.type" : "LOG",
            "status" : "ERROR",
            "timestamp" : "1631193089000"
          } ],
          "totalCount" : 150
        },
        "properties" : {
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "results" : {
            "description" : "A list of retrieved log records.",
            "items" : {
              "$ref" : "#/components/schemas/LogRecord"
            },
            "type" : "array"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "Extension" : {
        "properties" : {
          "author" : {
            "$ref" : "#/components/schemas/AuthorDto"
          },
          "dataSources" : {
            "description" : "Data sources that extension uses to gather data",
            "items" : {
              "description" : "Data sources that extension uses to gather data",
              "type" : "string"
            },
            "type" : "array"
          },
          "extensionName" : {
            "description" : "Extension name",
            "type" : "string"
          },
          "featureSets" : {
            "description" : "Available feature sets",
            "items" : {
              "description" : "Available feature sets",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "featureSetsDetails" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/FeatureSetDetails"
            },
            "description" : "Details of feature sets",
            "type" : "object"
          },
          "fileHash" : {
            "description" : "SHA-256 hash of uploaded Extension file",
            "type" : "string"
          },
          "minDynatraceVersion" : {
            "description" : "Minimal Dynatrace version that works with the extension",
            "type" : "string"
          },
          "variables" : {
            "description" : "Custom variables used in extension configuration",
            "items" : {
              "description" : "Custom variables used in extension configuration",
              "type" : "string"
            },
            "type" : "array"
          },
          "version" : {
            "description" : "Extension version",
            "example" : "1.2.3",
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ExtensionAssetsDto" : {
        "description" : "List of assets imported with the active extension environment configuration.",
        "properties" : {
          "assets" : {
            "description" : "The list of the imported assets.",
            "items" : {
              "$ref" : "#/components/schemas/AssetInfoDto"
            },
            "type" : "array"
          },
          "status" : {
            "description" : "The status of the assets list.",
            "type" : "string"
          },
          "version" : {
            "description" : "Extension version",
            "example" : "1.2.3",
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ExtensionEnvironmentConfigurationVersion" : {
        "properties" : {
          "version" : {
            "description" : "Extension version",
            "example" : "1.2.3",
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        },
        "required" : [ "version" ],
        "type" : "object"
      },
      "ExtensionEventDto" : {
        "description" : "A list of extension events.",
        "properties" : {
          "content" : {
            "description" : "Content of the event",
            "type" : "string"
          },
          "dt.active_gate.id" : {
            "description" : "Hexadecimal ID of Active Gate that uses this monitoring configuration.\n\nExample: `0x1a2b3c4d`",
            "type" : "string"
          },
          "dt.entity.host" : {
            "description" : "Host that uses this monitoring configuration.\n\nExample: `HOST-ABCDEF0123456789`",
            "type" : "string"
          },
          "dt.extension.ds" : {
            "description" : "Data source that uses this monitoring configuration.\n\nExample: `snmp`",
            "type" : "string"
          },
          "severity" : {
            "description" : "Severity of the event",
            "type" : "string"
          },
          "status" : {
            "description" : "Status of the event",
            "enum" : [ "ERROR", "INFO", "NONE", "WARN" ],
            "type" : "string"
          },
          "timestamp" : {
            "description" : "Timestamp of the event",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ExtensionEventsList" : {
        "properties" : {
          "extensionEvents" : {
            "description" : "A list of extension events.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionEventDto"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ExtensionList" : {
        "properties" : {
          "extensions" : {
            "description" : "A list of extensions.",
            "items" : {
              "$ref" : "#/components/schemas/MinimalExtension"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "ExtensionMonitoringConfiguration" : {
        "properties" : {
          "objectId" : {
            "description" : "Configuration id",
            "type" : "string"
          },
          "scope" : {
            "description" : "Configuration scope",
            "type" : "string"
          },
          "value" : {
            "description" : "Configuration",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ExtensionMonitoringConfigurationsList" : {
        "properties" : {
          "items" : {
            "description" : "A list of extension monitoring configurations.",
            "items" : {
              "$ref" : "#/components/schemas/ExtensionMonitoringConfiguration"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "ExtensionStatusDto" : {
        "properties" : {
          "status" : {
            "description" : "Latest status of given configuration.",
            "type" : "string"
          },
          "timestamp" : {
            "description" : "Timestamp of the latest status of given configuration.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "FeatureSetDetails" : {
        "description" : "Additional information about a Feature Set",
        "properties" : {
          "metrics" : {
            "description" : "Feature set metrics",
            "items" : {
              "$ref" : "#/components/schemas/MetricDto"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Filter" : {
        "description" : "A dimensional or series filter on a metric.",
        "properties" : {
          "operands" : {
            "description" : "If the type is `not`, `and` or `or`, then holds the contained filters.",
            "items" : {
              "$ref" : "#/components/schemas/Filter"
            },
            "type" : "array"
          },
          "referenceInvocation" : {
            "$ref" : "#/components/schemas/Invocation"
          },
          "referenceString" : {
            "description" : "For filters that match a dimension against a valkue, such as `eq` or `ne`, holds the value to compare the dimension against.",
            "type" : "string"
          },
          "referenceValue" : {
            "description" : "For the operands of `series` filters that match against a number, holds the number to compare against.",
            "type" : "number"
          },
          "rollup" : {
            "$ref" : "#/components/schemas/Rollup"
          },
          "targetDimension" : {
            "description" : "If the type applies to a dimension, then holds the target dimension.",
            "type" : "string"
          },
          "targetDimensions" : {
            "description" : "If the type applies to n dimensions, then holds the target dimensions. Currently only used for the `remainder` filter.",
            "items" : {
              "description" : "If the type applies to n dimensions, then holds the target dimensions. Currently only used for the `remainder` filter.",
              "type" : "string"
            },
            "type" : "array"
          },
          "type" : {
            "description" : "Type of this filter, determines which other fields are present.Can be any of: \n* `eq`,\n* `ne`,\n* `prefix`,\n* `in`,\n* `remainder`,\n* `suffix`,\n* `contains`,\n* `existsKey`,\n* `series`,\n* `or`,\n* `and`,\n* `not`,\n* `ge`,\n* `gt`,\n* `le`,\n* `lt`,\n* `otherwise`.",
            "enum" : [ "and", "contains", "eq", "existsKey", "ge", "gt", "in", "le", "lt", "ne", "not", "or", "otherwise", "prefix", "remainder", "series", "suffix" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FromPosition" : {
        "description" : "The FROM position of a relationship.",
        "properties" : {
          "fromTypes" : {
            "description" : "A list of monitored entity types that can occupy the FROM position.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "The ID of the relationship.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "FunctionDefinition" : {
        "description" : "Information about a function definition.",
        "properties" : {
          "className" : {
            "description" : "The fully qualified class name of the class that includes the function.",
            "readOnly" : true,
            "type" : "string"
          },
          "displayName" : {
            "description" : "A human readable string representation of the function definition.",
            "readOnly" : true,
            "type" : "string"
          },
          "functionName" : {
            "description" : "The function/method name.",
            "readOnly" : true,
            "type" : "string"
          },
          "parameterTypes" : {
            "$ref" : "#/components/schemas/TruncatableListString"
          },
          "returnType" : {
            "description" : "The return type of the function.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "Global_Log_Monitoring_Agents_State" : {
        "description" : "Enable Log Monitoring on every host",
        "example" : {
          "enabled" : true
        },
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "Host" : {
        "description" : "A single Log Monitoring Agent configuration",
        "example" : {
          "enabled" : true,
          "hostId" : "Host-1234"
        },
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "hostId" : {
            "description" : "Host id",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Hosts" : {
        "description" : "Log Monitoring Agents configuration",
        "example" : {
          "hosts" : [ {
            "enabled" : true,
            "hostId" : "Host-1234"
          } ]
        },
        "properties" : {
          "hosts" : {
            "description" : "Hosts",
            "items" : {
              "$ref" : "#/components/schemas/Host"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "HttpProtocolDetails" : {
        "description" : "HTTP specific request details.",
        "properties" : {
          "headers" : {
            "$ref" : "#/components/schemas/TruncatableListAttackRequestHeader"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TruncatableListHttpRequestParameter"
          },
          "requestMethod" : {
            "description" : "The HTTP request method.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "HttpRequestParameter" : {
        "description" : "An HTTP request parameter.",
        "properties" : {
          "name" : {
            "description" : "The name of the parameter.",
            "readOnly" : true,
            "type" : "string"
          },
          "value" : {
            "description" : "The value of the parameter.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "ImageDto" : {
        "description" : "Information about the image details of a capability.",
        "properties" : {
          "alt" : {
            "description" : "Alternate text for the image.",
            "type" : "string"
          },
          "title" : {
            "description" : "Title of the image.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ImmutableListActiveGateToken" : {
        "description" : "A list of ActiveGate tokens.",
        "items" : {
          "$ref" : "#/components/schemas/ActiveGateToken"
        },
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "type" : "array"
      },
      "ImmutableListErrorInfo" : {
        "items" : {
          "$ref" : "#/components/schemas/ErrorInfo"
        },
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "type" : "array"
      },
      "ImmutableListMETag" : {
        "description" : "A list of added custom tags.",
        "items" : {
          "$ref" : "#/components/schemas/METag"
        },
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "type" : "array"
      },
      "ImmutableListString" : {
        "items" : {
          "type" : "string"
        },
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "type" : "array"
      },
      "ImmutableSetMETag" : {
        "description" : "A list of custom tags.",
        "items" : {
          "$ref" : "#/components/schemas/METag"
        },
        "properties" : {
          "empty" : {
            "type" : "boolean"
          }
        },
        "type" : "array",
        "uniqueItems" : true
      },
      "Impact" : {
        "description" : "The impact analysis of the problem on other entities/users. \n\n The actual set of fields depends on the type of the impact. Find the list of actual objects in the description of the **impactType** field or see [Problems API v2 - JSON models](https://dt-url.net/we03sp2).",
        "discriminator" : {
          "propertyName" : "impactType"
        },
        "properties" : {
          "estimatedAffectedUsers" : {
            "description" : "The estimated number of affected users.",
            "format" : "int64",
            "type" : "integer"
          },
          "impactType" : {
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `SERVICE` -> ServiceImpact \n* `APPLICATION` -> ApplicationImpact \n* `MOBILE` -> MobileImpact \n* `CUSTOM_APPLICATION` -> CustomApplicationImpact \n",
            "enum" : [ "APPLICATION", "CUSTOM_APPLICATION", "MOBILE", "SERVICE" ],
            "type" : "string"
          },
          "impactedEntity" : {
            "$ref" : "#/components/schemas/EntityStub"
          }
        },
        "required" : [ "estimatedAffectedUsers", "impactType", "impactedEntity" ],
        "type" : "object"
      },
      "ImpactAnalysis" : {
        "description" : "A list of all impacts of the problem.",
        "properties" : {
          "impacts" : {
            "description" : "A list of all impacts of the problem.",
            "items" : {
              "$ref" : "#/components/schemas/Impact"
            },
            "type" : "array"
          }
        },
        "required" : [ "impacts" ],
        "type" : "object"
      },
      "Invocation" : {
        "description" : "Invocation of a function, e.g. the `entitySelector` function.",
        "properties" : {
          "args" : {
            "description" : "Arguments to pass to the function, e.g. entity selector source code.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "function" : {
            "description" : "Function that is invoked, e.g. `entitySelector`.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Item" : {
        "description" : "An item of a collection property.",
        "properties" : {
          "constraints" : {
            "description" : "A list of constraints limiting the values to be accepted.",
            "items" : {
              "$ref" : "#/components/schemas/Constraint"
            },
            "type" : "array"
          },
          "datasource" : {
            "$ref" : "#/components/schemas/DatasourceDefinition"
          },
          "description" : {
            "description" : "A short description of the item.",
            "example" : "itemDescription",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name of the item.",
            "example" : "itemDisplayName",
            "type" : "string"
          },
          "documentation" : {
            "description" : "An extended description and/or links to documentation.",
            "example" : "propertyDocumentation",
            "type" : "string"
          },
          "metadata" : {
            "additionalProperties" : {
              "description" : "Metadata of the items.",
              "type" : "string"
            },
            "description" : "Metadata of the items.",
            "type" : "object"
          },
          "referencedType" : {
            "description" : "The type referenced by the item's value.",
            "example" : "itemReferencedType",
            "type" : "string"
          },
          "subType" : {
            "description" : "The subtype of the item's value.",
            "example" : "itemSubType",
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the item's value.",
            "type" : "object"
          },
          "uiCustomization" : {
            "$ref" : "#/components/schemas/UiCustomization"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "JsonNode" : {
        "description" : "The monitoring configuration",
        "type" : "object"
      },
      "LinkedProblem" : {
        "description" : "The properties of the linked problem.",
        "properties" : {
          "displayId" : {
            "description" : "The display ID of the problem.",
            "type" : "string"
          },
          "problemId" : {
            "description" : "The ID of the problem.",
            "type" : "string"
          }
        },
        "required" : [ "displayId", "problemId" ],
        "type" : "object"
      },
      "LocationCollectionElement" : {
        "description" : "A synthetic location.",
        "properties" : {
          "cloudPlatform" : {
            "description" : "The cloud provider where the location is hosted. \n\n Only applicable to `PUBLIC` locations.",
            "enum" : [ "ALIBABA", "AMAZON_EC2", "AZURE", "DYNATRACE_CLOUD", "GOOGLE_CLOUD", "INTEROUTE", "OTHER", "UNDEFINED" ],
            "type" : "string"
          },
          "entityId" : {
            "description" : "The Dynatrace entity ID of the location.",
            "type" : "string"
          },
          "geoLocationId" : {
            "description" : "The Dynatrace GeoLocation ID of the location.",
            "type" : "string"
          },
          "ips" : {
            "description" : "The list of IP addresses assigned to the location. \n\n Only applicable to `PUBLIC` locations.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "The name of the location.",
            "type" : "string"
          },
          "stage" : {
            "description" : "The release stage of the location.",
            "enum" : [ "BETA", "COMING_SOON", "DELETED", "GA" ],
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the location.",
            "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ],
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the location.",
            "enum" : [ "CLUSTER", "PRIVATE", "PUBLIC" ],
            "type" : "string"
          }
        },
        "required" : [ "entityId", "geoLocationId", "name", "type" ],
        "type" : "object"
      },
      "LocationExecutionResults" : {
        "description" : "Results of the execution HTTP monitor's requests at a given location",
        "properties" : {
          "executionId" : {
            "description" : "Execution id.",
            "type" : "string"
          },
          "locationId" : {
            "description" : "Location id.",
            "type" : "string"
          },
          "requestResults" : {
            "description" : "The list of the monitor's request results executed on this location.",
            "items" : {
              "$ref" : "#/components/schemas/MonitorRequestExecutionResult"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "LogMessageJson" : {
        "description" : "The log message in JSON format. Use one object representing a single event or an array of objects representing multiple events. \n\nThe object might contain the following types of keys (the possible key values are listed below): \n\n* Timestamp: \n    * The earliest timestamp for a log event is the current time minus 24 hours. If the log event contains a timestamp earlier than the current time minus 24 hours, the event is dropped, and the generic log ingestion API returns a `400` response code. \n    * The latest timestamp for a log event is the current time plus 12 hours. If the log event contains a timestamp later than the current time plus 12 hours, the event is dropped, and the generic log ingestion API returns a `400` response code. \n    * The following formats are supported: UTC milliseconds, RFC3339, and RFC3164. If not set, the current timestamp is used. \n* Severity. If not set, `NONE` is used. \n* Content. If the content key is not set, the whole JSON is parsed as the content. \n* Semantic attribute. Only values of the `String` type are supported. Semantic attributes are indexed and can be used in queries. These are also displayed in aggregations (facets). If an unsupported key occurs, it is not indexed and can't be used in indexing and aggregations. \n\nThe object value can be a single constant or, in case of semantic attribute, an array of constants. The length of the value is limited. Any content exceeding the limit is trimmed. Default limits:\n\n* Attributes: up to 50 attributes. \n* Content: 8,192 bytes. \n* Semantic attribute: 250 bytes per value, up to 32 attribute values\n\nSupported timestamp keys:\n * @timestamp\n * Timestamp\n * _timestamp\n * date\n * eventTime\n * published_date\n * syslog.timestamp\n * timestamp\n\nSupported content keys:\n * body\n * content\n * message\n * payload\n\nSupported severity keys:\n * level\n * loglevel\n * severity\n * status\n * syslog.severity\n\nSupported semantic attribute keys:\n * audit.action\n * audit.identity\n * audit.result\n * aws.account.id\n * aws.arn\n * aws.log_group\n * aws.log_stream\n * aws.region\n * aws.resource.id\n * aws.resource.type\n * aws.service\n * azure.location\n * azure.resource.group\n * azure.resource.id\n * azure.resource.name\n * azure.resource.type\n * azure.subscription\n * cloud.account.id\n * cloud.availability_zone\n * cloud.provider\n * cloud.region\n * container.image.name\n * container.image.tag\n * container.name\n * db.cassandra.keyspace\n * db.connection_string\n * db.hbase.namespace\n * db.jdbc.driver_classname\n * db.mongodb.collection\n * db.mssql.instance_name\n * db.name\n * db.operation\n * db.redis.database_index\n * db.statement\n * db.system\n * db.user\n * dt.active_gate.group.name\n * dt.active_gate.id\n * dt.code.filepath\n * dt.code.func\n * dt.code.lineno\n * dt.code.ns\n * dt.ctg.calltype\n * dt.ctg.extendmode\n * dt.ctg.gatewayurl\n * dt.ctg.program\n * dt.ctg.rc\n * dt.ctg.requesttype\n * dt.ctg.serverid\n * dt.ctg.termid\n * dt.ctg.transid\n * dt.ctg.userid\n * dt.entity.cloud_application\n * dt.entity.cloud_application_instance\n * dt.entity.cloud_application_namespace\n * dt.entity.container_group\n * dt.entity.container_group_instance\n * dt.entity.custom_device\n * dt.entity.host\n * dt.entity.kubernetes_cluster\n * dt.entity.kubernetes_node\n * dt.entity.process_group\n * dt.entity.process_group_instance\n * dt.event.group_label\n * dt.event.key\n * dt.events.root_cause_relevant\n * dt.exception.messages\n * dt.exception.serialized_stacktraces\n * dt.exception.types\n * dt.extension.config.id\n * dt.extension.ds\n * dt.extension.name\n * dt.extension.status\n * dt.host.ip\n * dt.host.smfid\n * dt.host.snaid\n * dt.host_group.id\n * dt.http.application_id\n * dt.http.context_root\n * dt.kubernetes.cluster.id\n * dt.kubernetes.cluster.name\n * dt.kubernetes.config.id\n * dt.kubernetes.event.involved_object.kind\n * dt.kubernetes.event.involved_object.name\n * dt.kubernetes.event.reason\n * dt.kubernetes.node.name\n * dt.kubernetes.node.system_uuid\n * dt.kubernetes.topmost_controller.kind\n * dt.kubernetes.workload.kind\n * dt.kubernetes.workload.name\n * dt.network_zone.id\n * dt.os.description\n * dt.os.type\n * dt.process.commandline\n * dt.process.executable\n * dt.process.name\n * dt.source_entity\n * dt.source_entity_name\n * dt.source_entity_type\n * event.device.address\n * event.source\n * event.trapoid\n * faas.id\n * faas.instance\n * faas.name\n * faas.version\n * gcp.instance.id\n * gcp.instance.name\n * gcp.project.id\n * gcp.region\n * gcp.resource.type\n * host.hostname\n * host.id\n * host.image.id\n * host.image.name\n * host.image.version\n * host.name\n * host.type\n * http.client_ip\n * http.flavor\n * http.host\n * http.method\n * http.route\n * http.scheme\n * http.server_name\n * http.status_code\n * http.status_text\n * http.target\n * http.url\n * k8s.cluster.name\n * k8s.container.name\n * k8s.cronjob.name\n * k8s.cronjob.uid\n * k8s.daemonset.name\n * k8s.daemonset.uid\n * k8s.deployment.name\n * k8s.deployment.uid\n * k8s.job.name\n * k8s.job.uid\n * k8s.namespace.name\n * k8s.pod.name\n * k8s.pod.uid\n * k8s.replicaset.name\n * k8s.replicaset.uid\n * k8s.statefulset.name\n * k8s.statefulset.uid\n * log.source\n * net.host.ip\n * net.host.name\n * net.host.port\n * net.peer.ip\n * net.peer.name\n * net.peer.port\n * net.transport\n * process.technology\n * service.instance.id\n * service.name\n * service.namespace\n * service.version\n * span_id\n * trace_id\n * winlog.eventid\n * winlog.level\n * winlog.opcode\n * winlog.provider\n * winlog.task",
        "type" : "object"
      },
      "LogMessagePlain" : {
        "description" : "The log message in plain text. \n\nThe length of the message is limited to 8,192 bytes. Any content exceeding the limit is trimmed.",
        "type" : "object"
      },
      "LogRecord" : {
        "description" : "A single log record.",
        "example" : {
          "additionalColumns" : {
            "custom.attribute" : [ "value1", "value2" ],
            "loglevel" : [ "SEVERE" ]
          },
          "content" : "example log content",
          "event.type" : "LOG",
          "status" : "ERROR",
          "timestamp" : "1631193089000"
        },
        "properties" : {
          "additionalColumns" : {
            "additionalProperties" : {
              "description" : "Additional columns of the log record.",
              "items" : {
                "description" : "Additional columns of the log record.",
                "type" : "string"
              },
              "type" : "array"
            },
            "description" : "Additional columns of the log record.",
            "type" : "object"
          },
          "content" : {
            "description" : "The content of the log record.",
            "type" : "string"
          },
          "eventType" : {
            "description" : "Type of event",
            "enum" : [ "K8S", "LOG", "SFM" ],
            "type" : "string"
          },
          "status" : {
            "description" : "The log status (based on the log level).",
            "enum" : [ "ERROR", "INFO", "NONE", "WARN" ],
            "type" : "string"
          },
          "timestamp" : {
            "description" : "The timestamp of the log record, in UTC milliseconds.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "LogRecordsList" : {
        "description" : "A list of retrieved log records.",
        "example" : {
          "nextSliceKey" : "___-2hI03q0AAAAAAAAAAAAAA-gAAAAAAAAH0P____8AAABkAAAACXRpbWVzdGFtcAD___7aEjTerQ",
          "results" : [ {
            "additionalColumns" : {
              "custom.attribute" : [ "value1", "value2" ],
              "loglevel" : [ "SEVERE" ]
            },
            "content" : "example log content",
            "event.type" : "LOG",
            "status" : "ERROR",
            "timestamp" : "1631193089000"
          } ],
          "sliceSize" : 100
        },
        "properties" : {
          "nextSliceKey" : {
            "description" : "The cursor for the next slice of log records.",
            "type" : "string"
          },
          "results" : {
            "description" : "A list of retrieved log records.",
            "items" : {
              "$ref" : "#/components/schemas/LogRecord"
            },
            "type" : "array"
          },
          "sliceSize" : {
            "description" : "The total number of records in a slice.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "METag" : {
        "description" : "The tag of a monitored entity.",
        "properties" : {
          "context" : {
            "description" : "The origin of the tag, such as AWS or Cloud Foundry. \n\n Custom tags use the `CONTEXTLESS` value.",
            "type" : "string"
          },
          "key" : {
            "description" : "The key of the tag.",
            "type" : "string"
          },
          "stringRepresentation" : {
            "description" : "The string representation of the tag.",
            "type" : "string"
          },
          "value" : {
            "description" : "The value of the tag.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MaintenanceWindowEvidence" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Evidence"
        }, {
          "properties" : {
            "endTime" : {
              "description" : "The end time of the evidence, in UTC milliseconds.",
              "format" : "int64",
              "type" : "integer"
            },
            "maintenanceWindowConfigId" : {
              "description" : "The ID of the related maintenance window.",
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "The  maintenance window evidence of the problem. \n\nThe maintenance window during which the problem occurred.",
        "required" : [ "displayName", "endTime", "entity", "evidenceType", "maintenanceWindowConfigId", "rootCauseRelevant", "startTime" ],
        "type" : "object"
      },
      "ManagementZone" : {
        "description" : "A short representation of a management zone.",
        "properties" : {
          "id" : {
            "description" : "The ID of the management zone.",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the management zone.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MediaTypeErrorInfo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ErrorInfo"
        }, {
          "properties" : {
            "supportedMediaTypes" : {
              "items" : {
                "type" : "string"
              },
              "properties" : {
                "empty" : {
                  "type" : "boolean"
                }
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ],
        "type" : "object"
      },
      "MetricData" : {
        "description" : "A list of metrics and their data points.",
        "example" : {
          "nextPageKey" : "null",
          "resolution" : "1h",
          "result" : [ {
            "data" : [ {
              "dimensions" : [ "HOST-F1266E1D0AAC2C3C", "DISK-F1266E1D0AAC2C3F" ],
              "timestamps" : [ 3151435100000, 3151438700000, 3151442300000 ],
              "values" : [ 11.1, 22.2, 33.3 ]
            }, {
              "dimensions" : [ "HOST-F1266E1D0AAC2C3C", "DISK-F1266E1D0AAC2C3D" ],
              "timestamps" : [ 3151435100000, 3151438700000, 3151442300000 ],
              "values" : [ 111.1, 222.2, 333.3 ]
            } ],
            "dataPointCountRatio" : "0.1211",
            "dimensionCountRatio" : "0.0322",
            "metricId" : "builtin:host.disk.avail"
          }, {
            "data" : [ {
              "dimensions" : [ "HOST-F1266E1D0AAC2C3C" ],
              "timestamps" : [ 3151435100000, 3151438700000, 3151442300000 ],
              "values" : [ 1.1, 2.2, 3.3 ]
            } ],
            "metricId" : "builtin:host.cpu.idle"
          } ],
          "totalCount" : 3,
          "warnings" : [ "The contains filter transformation is deprecated and will be removed in a future release." ]
        },
        "properties" : {
          "nextPageKey" : {
            "description" : "Deprecated. This field is returned for compatibility reasons. It always has the value of `null`.",
            "type" : "string"
          },
          "resolution" : {
            "description" : "The timeslot resolution in the result.",
            "type" : "string"
          },
          "result" : {
            "description" : "A list of metrics and their data points.",
            "items" : {
              "$ref" : "#/components/schemas/MetricSeriesCollection"
            },
            "type" : "array"
          },
          "totalCount" : {
            "description" : "The total number of primary entities in the result. \n\nHas the `0` value if none of the requested metrics is suitable for pagination.",
            "format" : "int64",
            "type" : "integer"
          },
          "warnings" : {
            "description" : "A list of warnings",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "resolution", "result", "totalCount" ],
        "type" : "object"
      },
      "MetricDefaultAggregation" : {
        "description" : "The default aggregation of a metric.",
        "properties" : {
          "parameter" : {
            "description" : "The percentile to be delivered. Valid values are between `0` and `100`. \n\nApplicable only to the `percentile` aggregation type.",
            "format" : "double",
            "type" : "number"
          },
          "type" : {
            "description" : "The type of default aggregation.",
            "enum" : [ "auto", "avg", "count", "max", "median", "min", "percentile", "sum", "value" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MetricDescriptor" : {
        "description" : "The descriptor of a metric.",
        "example" : {
          "aggregationTypes" : [ "auto", "value" ],
          "created" : 1597400123451,
          "dduBillable" : false,
          "defaultAggregation" : {
            "type" : "value"
          },
          "description" : "Percentage of user-space CPU time currently utilized, per host.",
          "dimensionCardinalities" : [ {
            "estimate" : 20,
            "key" : "dt.entity.host",
            "relative" : 0.2
          } ],
          "dimensionDefinitions" : [ {
            "displayName" : "Host",
            "index" : 0,
            "key" : "dt.entity.host",
            "name" : "Host",
            "type" : "ENTITY"
          } ],
          "displayName" : "CPU user",
          "entityType" : [ "HOST" ],
          "lastWritten" : 1597400717783,
          "latency" : 1,
          "metricId" : "builtin:host.cpu.user:splitBy(\"dt.entity.host\"):max:fold",
          "metricValueType" : {
            "type" : "unknown"
          },
          "scalar" : false,
          "tags" : [ ],
          "transformations" : [ "filter", "fold", "limit", "merge", "names", "parents", "timeshift", "rate", "sort", "last", "splitBy" ],
          "unit" : "Percent"
        },
        "properties" : {
          "aggregationTypes" : {
            "description" : "The list of allowed aggregations for this metric.",
            "items" : {
              "enum" : [ "auto", "avg", "count", "max", "median", "min", "percentile", "sum", "value" ],
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "created" : {
            "description" : "The timestamp of metric creation. \n\nBuilt-in metrics and metric expressions have the value of `null`.",
            "format" : "int64",
            "type" : "integer"
          },
          "dduBillable" : {
            "description" : "If `true` the usage of metric consumes [Davis data units](https://dt-url.net/ddu). \n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "type" : "boolean"
          },
          "defaultAggregation" : {
            "$ref" : "#/components/schemas/MetricDefaultAggregation"
          },
          "description" : {
            "description" : "A short description of the metric.",
            "type" : "string"
          },
          "dimensionCardinalities" : {
            "description" : "The cardinalities of MINT metric dimensions.",
            "items" : {
              "$ref" : "#/components/schemas/MetricDimensionCardinality"
            },
            "type" : "array"
          },
          "dimensionDefinitions" : {
            "description" : "The fine metric division (for example, process group and process ID for some process-related metric). \n\nFor [ingested metrics](https://dt-url.net/5d63ic1), dimensions that doesn't have have any data within the last 15 days are omitted. ",
            "items" : {
              "$ref" : "#/components/schemas/MetricDimensionDefinition"
            },
            "type" : "array"
          },
          "displayName" : {
            "description" : "The name of the metric in the user interface.",
            "type" : "string"
          },
          "entityType" : {
            "description" : "List of admissible primary entity types for this metric. Can be used for the `type` predicate in the `entitySelector`.",
            "items" : {
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "impactRelevant" : {
            "description" : "The metric is (`true`) or is not (`false`) impact relevant. \n\n An impact-relevant metric is highly dependent on other metrics and changes because an underlying root-cause metric has changed.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "type" : "boolean"
          },
          "lastWritten" : {
            "description" : "The timestamp when the metric was last written. \n\nHas the value of `null` for metric expressions or if the data has never been written.",
            "format" : "int64",
            "type" : "integer"
          },
          "latency" : {
            "description" : "The latency of the metric, in minutes. \n\n The latency is the expected reporting delay (for example, caused by constraints of cloud vendors or other third-party data sources) between the observation of a metric data point and its availability in Dynatrace. \n\nThe allowed value range is from 1 to 60 minutes.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "format" : "int64",
            "type" : "integer"
          },
          "maximumValue" : {
            "description" : "The maximum allowed value of the metric.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "format" : "double",
            "type" : "number"
          },
          "metricId" : {
            "description" : "The fully qualified key of the metric. \n\nIf a transformation has been used it is reflected in the metric key.",
            "type" : "string"
          },
          "metricSelector" : {
            "description" : "The metric selector that is used when querying a func: metric.",
            "type" : "string"
          },
          "metricValueType" : {
            "$ref" : "#/components/schemas/MetricValueType"
          },
          "minimumValue" : {
            "description" : "The minimum allowed value of the metric.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "format" : "double",
            "type" : "number"
          },
          "resolutionInfSupported" : {
            "description" : "If 'true', resolution=Inf can be applied to the metric query.",
            "type" : "boolean"
          },
          "rootCauseRelevant" : {
            "description" : "The metric is (`true`) or is not (`false`) root cause relevant. \n\n A root-cause relevant metric represents a strong indicator for a faulty component.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "type" : "boolean"
          },
          "scalar" : {
            "description" : "Indicates whether the metric expression resolves to a scalar (`true`) or to a series (`false`). \nA scalar result always contains one data point. The amount of data points in a series result depends on the resolution you're using.",
            "type" : "boolean"
          },
          "tags" : {
            "description" : "The tags applied to the metric. \n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "items" : {
              "description" : "The tags applied to the metric. \n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "transformations" : {
            "description" : "Transform operators that could be appended to the current transformation list.",
            "items" : {
              "enum" : [ "asGauge", "default", "delta", "evaluateModel", "filter", "fold", "last", "lastReal", "limit", "merge", "names", "parents", "partition", "rate", "rollup", "setUnit", "smooth", "sort", "splitBy", "timeshift", "toUnit" ],
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "unit" : {
            "description" : "The unit of the metric.",
            "type" : "string"
          },
          "unitDisplayFormat" : {
            "description" : "The raw value is stored in bits or bytes. The user interface can display it in these numeral systems:\n\nBinary: 1 MiB = 1024 KiB = 1,048,576 bytes\n\nDecimal: 1 MB = 1000 kB = 1,000,000 bytes\n\nIf not set, the decimal system is used.\n\n [Metric expressions](https://dt-url.net/metricExpression) don't return this field.",
            "enum" : [ "binary", "decimal" ],
            "type" : "string"
          },
          "warnings" : {
            "description" : "A list of potential warnings that affect this ID. For example deprecated feature usage etc.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "metricId" ],
        "type" : "object"
      },
      "MetricDescriptorCollection" : {
        "description" : "A list of metrics along with their descriptors.",
        "example" : {
          "metrics" : [ {
            "aggregationTypes" : [ "auto", "value" ],
            "created" : 1597400123451,
            "dduBillable" : false,
            "defaultAggregation" : {
              "type" : "value"
            },
            "description" : "Percentage of user-space CPU time currently utilized, per host.",
            "dimensionDefinitions" : [ {
              "displayName" : "Host",
              "index" : 0,
              "key" : "dt.entity.host",
              "name" : "Host",
              "type" : "ENTITY"
            } ],
            "displayName" : "CPU user",
            "entityType" : [ "HOST" ],
            "lastWritten" : 1597400717783,
            "metricId" : "builtin:host.cpu.user:splitBy(\"dt.entity.host\"):max:fold",
            "metricValueType" : {
              "type" : "unknown"
            },
            "tags" : [ ],
            "transformations" : [ "filter", "fold", "limit", "merge", "names", "parents", "timeshift", "rate", "sort", "last", "splitBy" ],
            "unit" : "Percent"
          }, {
            "aggregationTypes" : [ "auto", "value" ],
            "created" : 1597400123451,
            "dduBillable" : false,
            "defaultAggregation" : {
              "type" : "value"
            },
            "description" : "Percentage of user-space CPU time currently utilized, per host.",
            "dimensionDefinitions" : [ {
              "displayName" : "Host",
              "index" : 0,
              "key" : "dt.entity.host",
              "name" : "Host",
              "type" : "ENTITY"
            } ],
            "displayName" : "CPU user",
            "entityType" : [ "HOST" ],
            "lastWritten" : 1597400717783,
            "metricId" : "builtin:host.cpu.user:splitBy()",
            "metricValueType" : {
              "type" : "unknown"
            },
            "tags" : [ ],
            "transformations" : [ "filter", "fold", "limit", "merge", "names", "parents", "timeshift", "rate", "sort", "last", "splitBy" ],
            "unit" : "Percent"
          } ],
          "nextPageKey" : "ABCDEFABCDEFABCDEF_",
          "totalCount" : 3
        },
        "properties" : {
          "metrics" : {
            "description" : "A list of metric along with their descriptors",
            "items" : {
              "$ref" : "#/components/schemas/MetricDescriptor"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "type" : "string"
          },
          "totalCount" : {
            "description" : "The estimated number of metrics in the result.",
            "format" : "int64",
            "type" : "integer"
          },
          "warnings" : {
            "description" : "A list of potential warnings about the query. For example deprecated feature usage etc.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "metrics", "nextPageKey", "totalCount" ],
        "type" : "object"
      },
      "MetricDimensionCardinality" : {
        "description" : "The dimension cardinalities of a metric.",
        "properties" : {
          "estimate" : {
            "description" : "The cardinality estimate of the dimension.",
            "format" : "int64",
            "type" : "integer"
          },
          "key" : {
            "description" : "The key of the dimension. \n\n It must be unique within the metric.",
            "type" : "string"
          },
          "relative" : {
            "description" : "The relative cardinality of the dimension expressed as percentage",
            "format" : "double",
            "type" : "number"
          }
        },
        "required" : [ "estimate", "key", "relative" ],
        "type" : "object"
      },
      "MetricDimensionDefinition" : {
        "description" : "The dimension of a metric.",
        "properties" : {
          "displayName" : {
            "description" : "The display name of the dimension.",
            "type" : "string"
          },
          "index" : {
            "description" : "The unique 0-based index of the dimension. \n\n Appending transformations such as :names or :parents may change the indexes of dimensions. `null` is used for the dimensions of a metric with flexible dimensions, which can be referenced with their dimension key, but do not have an intrinsic order that could be used for the index.",
            "format" : "int32",
            "type" : "integer"
          },
          "key" : {
            "description" : "The key of the dimension. \n\n It must be unique within the metric.",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the dimension.",
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the dimension.",
            "enum" : [ "ENTITY", "NUMBER", "OTHER", "STRING", "VOID" ],
            "type" : "string"
          }
        },
        "required" : [ "displayName", "index", "key", "name", "type" ],
        "type" : "object"
      },
      "MetricDto" : {
        "description" : "Metric gathered by an extension",
        "properties" : {
          "key" : {
            "description" : "Metric key",
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/MetricMetadataDto"
          }
        },
        "type" : "object"
      },
      "MetricEvidence" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Evidence"
        }, {
          "properties" : {
            "endTime" : {
              "description" : "The end time of the evidence, in UTC milliseconds.\n\nThe value `null` indicates that the evidence is still open.",
              "format" : "int64",
              "type" : "integer"
            },
            "metricId" : {
              "description" : "The ID of the metric.",
              "type" : "string"
            },
            "unit" : {
              "description" : "The unit of the metric.",
              "enum" : [ "Bit", "BitPerHour", "BitPerMinute", "BitPerSecond", "Byte", "BytePerHour", "BytePerMinute", "BytePerSecond", "Cores", "Count", "Day", "DecibelMilliWatt", "GibiByte", "Giga", "GigaByte", "Hour", "KibiByte", "KibiBytePerHour", "KibiBytePerMinute", "KibiBytePerSecond", "Kilo", "KiloByte", "KiloBytePerHour", "KiloBytePerMinute", "KiloBytePerSecond", "MSU", "MebiByte", "MebiBytePerHour", "MebiBytePerMinute", "MebiBytePerSecond", "Mega", "MegaByte", "MegaBytePerHour", "MegaBytePerMinute", "MegaBytePerSecond", "MicroSecond", "MilliCores", "MilliSecond", "MilliSecondPerMinute", "Minute", "Month", "NanoSecond", "NanoSecondPerMinute", "NotApplicable", "PerHour", "PerMinute", "PerSecond", "Percent", "Pixel", "Promille", "Ratio", "Second", "State", "Unspecified", "Week", "Year" ],
              "type" : "string"
            },
            "valueAfterChangePoint" : {
              "description" : "The metric's value after the problem start.",
              "format" : "float",
              "type" : "number"
            },
            "valueBeforeChangePoint" : {
              "description" : "The metric's value before the problem start.",
              "format" : "float",
              "type" : "number"
            }
          },
          "type" : "object"
        } ],
        "description" : "The metric evidence of the problem. \n\nA change of metric behavior that indicates the problem and/or is its root cause.",
        "required" : [ "displayName", "endTime", "entity", "evidenceType", "metricId", "rootCauseRelevant", "startTime", "unit", "valueAfterChangePoint", "valueBeforeChangePoint" ],
        "type" : "object"
      },
      "MetricMarker" : {
        "description" : "Defines are marker for given metric",
        "properties" : {
          "actionList" : {
            "description" : "A list of action that can executed on the marker",
            "items" : {
              "$ref" : "#/components/schemas/Action"
            },
            "type" : "array"
          },
          "dimensionFilter" : {
            "additionalProperties" : {
              "description" : "A dimension filter (if the metric selector resolves to multiple lines and the marker is just for one of them).",
              "type" : "string"
            },
            "description" : "A dimension filter (if the metric selector resolves to multiple lines and the marker is just for one of them).",
            "type" : "object"
          },
          "endTimeStamp" : {
            "description" : "Timestamp when the marking should end. If not set marking should not end at all",
            "format" : "int64",
            "type" : "integer"
          },
          "heatFieldMessage" : {
            "description" : "A message for for the heat field in the table",
            "type" : "string"
          },
          "markerType" : {
            "description" : "Defines what type of problem is marked",
            "enum" : [ "CRITICAL", "INFO" ],
            "type" : "string"
          },
          "metricSelector" : {
            "description" : "The metric selector that is associated to this marker object. The field might be null if the marker is not assigned to a metric selector",
            "type" : "string"
          },
          "metricSelectorIndex" : {
            "description" : "The corresponding array index of the metricSelector input. Only set if metricSelector is set",
            "format" : "int32",
            "type" : "integer"
          },
          "startTimeStamp" : {
            "description" : "Timestamp when the marking should start",
            "format" : "int64",
            "type" : "integer"
          },
          "summaryMessage" : {
            "description" : "A message that describe the marker in textual form",
            "type" : "string"
          }
        },
        "required" : [ "markerType", "startTimeStamp" ],
        "type" : "object"
      },
      "MetricMetadataDto" : {
        "description" : "Metric metadata",
        "properties" : {
          "description" : {
            "description" : "A short description of the metric",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The name of the metric in the user interface",
            "type" : "string"
          },
          "unit" : {
            "description" : "The unit of the metric",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MetricSeries" : {
        "description" : "Data points per dimension of a metric. \n\nThe data is represented by two arrays of the same length: **timestamps** and **values**. Entries of the same index from both arrays form a timestamped data point.",
        "example" : {
          "dimensions" : [ "HOST-F1266E1D0AAC2C3C" ],
          "timestamps" : [ 3151435100000, 3151438700000, 3151442300000 ],
          "values" : [ 1.1, 2.2, 3.3 ]
        },
        "properties" : {
          "dimensionMap" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "dimensions" : {
            "description" : "The ordered list of dimensions to which the data point list belongs. \n\n Each metric can have a certain number of dimensions. Dimensions exceeding this number are aggregated into one, which is shown as `null` here.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "timestamps" : {
            "description" : "A list of timestamps of data points. \n\nThe value of data point for each time from this array is located in **values** array at the same index.",
            "items" : {
              "format" : "int64",
              "type" : "integer"
            },
            "type" : "array"
          },
          "values" : {
            "description" : "A list of values of data points. \n\nThe timestamp of data point for each value from this array is located in **timestamps** array at the same index.",
            "items" : {
              "format" : "double",
              "type" : "number"
            },
            "type" : "array"
          }
        },
        "required" : [ "dimensionMap", "dimensions", "timestamps", "values" ],
        "type" : "object"
      },
      "MetricSeriesCollection" : {
        "description" : "Data points of a metric.",
        "example" : {
          "data" : [ {
            "dimensions" : [ "HOST-F1266E1D0AAC2C3C", "DISK-F1266E1D0AAC2C3F" ],
            "timestamps" : [ 3151435100000, 3151438700000, 3151442300000 ],
            "values" : [ 11.1, 22.2, 33.3 ]
          }, {
            "dimensions" : [ "HOST-F1266E1D0AAC2C3C", "DISK-F1266E1D0AAC2C3D" ],
            "timestamps" : [ 3151435100000, 3151438700000, 3151442300000 ],
            "values" : [ 111.1, 222.2, 333.3 ]
          } ],
          "dataPointCountRatio" : "0.1211",
          "dimensionCountRatio" : "0.0322",
          "metricId" : "builtin:host.disk.avail"
        },
        "properties" : {
          "appliedOptionalFilters" : {
            "description" : "A list of filtered metric keys along with filters that have been applied to these keys, from the `optionalFilter` parameter.",
            "items" : {
              "$ref" : "#/components/schemas/AppliedFilter"
            },
            "type" : "array"
          },
          "data" : {
            "description" : "Data points of the metric.",
            "items" : {
              "$ref" : "#/components/schemas/MetricSeries"
            },
            "type" : "array"
          },
          "dataPointCountRatio" : {
            "description" : "The ratio of queried data points divided by the maximum number of data points per metric that are allowed in a single query.",
            "format" : "float",
            "type" : "number"
          },
          "dimensionCountRatio" : {
            "description" : "The ratio of queried dimension tuples divided by the maximum number of dimension tuples allowed in a single query.",
            "format" : "float",
            "type" : "number"
          },
          "metricId" : {
            "description" : "The key of the metric. \n\nIf any transformation is applied, it is included here.",
            "type" : "string"
          },
          "warnings" : {
            "description" : "A list of potential warnings that affect this ID. For example deprecated feature usage etc.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "data", "dataPointCountRatio", "dimensionCountRatio", "metricId" ],
        "type" : "object"
      },
      "MetricValueType" : {
        "description" : "The value type for the metric.",
        "properties" : {
          "type" : {
            "description" : "The metric value type",
            "enum" : [ "error", "score", "unknown" ],
            "type" : "string"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "MinimalExtension" : {
        "description" : "A list of extensions.",
        "properties" : {
          "extensionName" : {
            "description" : "Extension name",
            "type" : "string"
          },
          "version" : {
            "description" : "Extension version",
            "example" : "1.2.3",
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MobileImpact" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Impact"
        } ],
        "description" : "Analysis of problem impact to a mobile application.",
        "required" : [ "estimatedAffectedUsers", "impactType", "impactedEntity" ],
        "type" : "object"
      },
      "MonitorExecutionResults" : {
        "description" : "Results of the execution of all HTTP monitor's requests.",
        "example" : {
          "locationsExecutionResults" : [ {
            "executionId" : "6136172183050046113",
            "locationId" : "7804738439930364165",
            "requestResults" : [ {
              "engineId" : 338502283,
              "errorCode" : 0,
              "failureMessage" : "",
              "hostNameResolutionTime" : 26,
              "method" : "GET",
              "peerCertificateDetails" : "[Certificate details]",
              "peerCertificateExpiryDate" : 1647302399000,
              "publicLocation" : false,
              "redirectionTime" : 70,
              "redirectsCount" : 1,
              "requestBody" : "",
              "requestHeaders" : [ {
                "name" : "User-Agent",
                "value" : "DynatraceSynthetic/1.215.1"
              }, {
                "name" : "X-Dynatrace-Visit",
                "value" : "6136172183050046113"
              }, {
                "name" : "X-Dynatrace-Test",
                "value" : "HTTP_CHECK-12B428F6D37A9197"
              } ],
              "requestId" : "HTTP_CHECK_STEP-53071FC3C4F72E28",
              "requestName" : "Request name",
              "resolvedIps" : [ "80.252.0.145" ],
              "responseBody" : "<html><head>Title</head><body>Main Page</body></html>",
              "responseBodySizeLimitExceeded" : false,
              "responseHeaders" : [ {
                "name" : "Date",
                "value" : "Mon, 15 Mar 2021 11:09:30 GMT"
              }, {
                "name" : "Content-Language",
                "value" : "en"
              } ],
              "responseMessage" : "OK",
              "responseSize" : 1112,
              "responseStatusCode" : 200,
              "sequenceNumber" : 1,
              "startTimestamp" : 1615806570884,
              "tcpConnectTime" : 15,
              "timeToFirstByte" : 96,
              "tlsHandshakeTime" : 8,
              "totalTime" : 238,
              "url" : "https://www.examplePage.com",
              "waitingTime" : 47
            } ]
          } ],
          "monitorId" : "HTTP_CHECK-12B428F6D37A9197"
        },
        "properties" : {
          "locationsExecutionResults" : {
            "description" : "The list with the results of the requests executed on assigned locations.",
            "items" : {
              "$ref" : "#/components/schemas/LocationExecutionResults"
            },
            "type" : "array"
          },
          "monitorId" : {
            "description" : "Monitor id.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MonitorRequestExecutionResult" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ExecutionStep"
        }, {
          "properties" : {
            "engineId" : {
              "description" : "VUC's id on which monitor's request was executed.",
              "format" : "int64",
              "type" : "integer"
            },
            "failureMessage" : {
              "description" : "Request's failure message.",
              "type" : "string"
            },
            "healthStatus" : {
              "description" : "Request's health status.",
              "type" : "string"
            },
            "healthStatusCode" : {
              "description" : "Request's health status code.",
              "format" : "int32",
              "type" : "integer"
            },
            "hostNameResolutionTime" : {
              "description" : "A hostname resolution time measured in ms.",
              "format" : "int64",
              "type" : "integer"
            },
            "method" : {
              "description" : "Request method type.",
              "type" : "string"
            },
            "peerCertificateDetails" : {
              "description" : "Request's certificate details.",
              "type" : "string"
            },
            "peerCertificateExpiryDate" : {
              "description" : "An expiry date of the first SSL certificate from the certificate chain.",
              "format" : "int64",
              "type" : "integer"
            },
            "publicLocation" : {
              "description" : "Flag informs whether request was executed on public location.",
              "type" : "boolean"
            },
            "redirectionTime" : {
              "description" : "Total number of milliseconds spent on handling all redirect requests, measured in ms.",
              "format" : "int64",
              "type" : "integer"
            },
            "redirectsCount" : {
              "description" : "Number of request's redirects.",
              "format" : "int32",
              "type" : "integer"
            },
            "requestBody" : {
              "description" : "Request's request body.",
              "type" : "string"
            },
            "requestHeaders" : {
              "description" : "A list of request's headers",
              "items" : {
                "$ref" : "#/components/schemas/MonitorRequestHeader"
              },
              "type" : "array"
            },
            "requestId" : {
              "description" : "Request id.",
              "type" : "string"
            },
            "requestName" : {
              "description" : "Request name.",
              "type" : "string"
            },
            "resolvedIps" : {
              "description" : "Request's resolved ips.'",
              "items" : {
                "description" : "Request's resolved ips.'",
                "type" : "string"
              },
              "type" : "array"
            },
            "responseBody" : {
              "description" : "Request's response body.",
              "type" : "string"
            },
            "responseBodySizeLimitExceeded" : {
              "description" : "A flag indicating that the response payload size limit of 10MB has been exceeded.",
              "type" : "boolean"
            },
            "responseHeaders" : {
              "description" : "A list of request's response headers",
              "items" : {
                "$ref" : "#/components/schemas/MonitorRequestHeader"
              },
              "type" : "array"
            },
            "responseMessage" : {
              "description" : "Request's response message.'",
              "type" : "string"
            },
            "responseSize" : {
              "description" : "Request's response size in bytes.",
              "format" : "int64",
              "type" : "integer"
            },
            "responseStatusCode" : {
              "description" : "Request's response status code.",
              "format" : "int32",
              "type" : "integer"
            },
            "sequenceNumber" : {
              "description" : "Request's sequence number.",
              "format" : "int32",
              "type" : "integer"
            },
            "startTimestamp" : {
              "description" : "Request start timestamp.",
              "format" : "int64",
              "type" : "integer"
            },
            "tcpConnectTime" : {
              "description" : "A TCP connect time measured in ms.",
              "format" : "int64",
              "type" : "integer"
            },
            "timeToFirstByte" : {
              "description" : "A time to first byte measured in ms.",
              "format" : "int64",
              "type" : "integer"
            },
            "tlsHandshakeTime" : {
              "description" : "A TLS handshake time measured in ms.",
              "format" : "int64",
              "type" : "integer"
            },
            "totalTime" : {
              "description" : "A total request time measured in ms.",
              "format" : "int64",
              "type" : "integer"
            },
            "url" : {
              "description" : "Request URL address.",
              "type" : "string"
            },
            "waitingTime" : {
              "description" : "Waiting time (time to first byte - (DNS lookup time + TCP connect time + TLS handshake time), measured in ms.",
              "format" : "int64",
              "type" : "integer"
            }
          },
          "type" : "object"
        } ],
        "description" : "A result of the execution HTTP monitor's request.",
        "required" : [ "monitorType" ],
        "type" : "object"
      },
      "MonitorRequestHeader" : {
        "description" : "A header of the Http request",
        "properties" : {
          "name" : {
            "description" : "Header's name.",
            "type" : "string"
          },
          "value" : {
            "description" : "Header's value.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MonitoringConfigurationDto" : {
        "properties" : {
          "scope" : {
            "description" : "The scope this monitoring configuration will be defined for",
            "example" : "HOST-D3A3C5A146830A79",
            "minLength" : 1,
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/JsonNode"
          }
        },
        "required" : [ "scope" ],
        "type" : "object"
      },
      "MonitoringConfigurationResponse" : {
        "properties" : {
          "code" : {
            "description" : "The HTTP Status code",
            "format" : "int32",
            "type" : "integer"
          },
          "objectId" : {
            "description" : "The identifier of the new configuration",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MonitoringConfigurationUpdateDto" : {
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/JsonNode"
          }
        },
        "type" : "object"
      },
      "MuteState" : {
        "description" : "Metadata of the muted state of a security problem in relation to an event.",
        "properties" : {
          "comment" : {
            "description" : "A user's comment.",
            "readOnly" : true,
            "type" : "string"
          },
          "reason" : {
            "description" : "The reason for the mute state change.",
            "enum" : [ "AFFECTED", "CONFIGURATION_NOT_AFFECTED", "FALSE_POSITIVE", "IGNORE", "INITIAL_STATE", "OTHER", "VULNERABLE_CODE_NOT_IN_USE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "user" : {
            "description" : "The user who has muted or unmuted the problem.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "NetworkZone" : {
        "description" : "Configuration of a network zone.",
        "properties" : {
          "alternativeZones" : {
            "description" : "A list of alternative network zones.",
            "items" : {
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "description" : {
            "description" : "A short description of the network zone",
            "type" : "string"
          },
          "id" : {
            "description" : "The ID of the network zone",
            "readOnly" : true,
            "type" : "string"
          },
          "numOfConfiguredActiveGates" : {
            "description" : "The number of ActiveGates in the network zone.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numOfConfiguredOneAgents" : {
            "description" : "The number of OneAgents that are configured to use the network zone as primary.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numOfOneAgentsFromOtherZones" : {
            "description" : "The number of OneAgents from other network zones that are using ActiveGates in the network zone. \n\n This is a fraction of **numOfOneAgentsUsing**. \n\nOne possible reason for switching to another zone is that a firewall is preventing a OneAgent from connecting to any ActiveGate in the preferred network zone.\n\n",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numOfOneAgentsUsing" : {
            "description" : "The number of OneAgents that are using ActiveGates in the network zone.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "NetworkZoneConnectionStatistics" : {
        "description" : "Runtime information about host connections.",
        "properties" : {
          "hostsConfiguredButNotConnected" : {
            "description" : "Hosts from the network zone that use other zones.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "hostsConnectedAsAlternative" : {
            "description" : "Hosts that use the network zone as an alternative.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "hostsConnectedAsFailover" : {
            "description" : "Hosts from other zones that use the zone (not configured as an alternative) even though ActiveGates of higher priority are available.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "hostsConnectedAsFailoverWithoutActiveGates" : {
            "description" : "Hosts from other zones that use the zone (not configured as an alternative) and **no** ActiveGates of higher priority are available.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "NetworkZoneList" : {
        "description" : "A list of network zones.",
        "properties" : {
          "networkZones" : {
            "description" : "A list of network zones.",
            "items" : {
              "$ref" : "#/components/schemas/NetworkZone"
            },
            "type" : "array"
          }
        },
        "required" : [ "networkZones" ],
        "type" : "object"
      },
      "NetworkZoneSettings" : {
        "description" : "Global network zone configuration.",
        "properties" : {
          "networkZonesEnabled" : {
            "description" : "Network zones feature is enabled (`true`) or disabled (`false`).",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "Node" : {
        "description" : "Configuration of a synthetic node. \n\n A *synthetic node* is an ActiveGate that is able to execute synthetic monitors.",
        "example" : {
          "activeGateVersion" : "1.172.2.20190607-040913",
          "autoUpdateEnabled" : true,
          "browserMonitorsEnabled" : true,
          "browserType" : "Chrome",
          "browserVersion" : "69.0.3497.81",
          "entityId" : "3086117876",
          "healthCheckStatus" : "Ok",
          "hostname" : "gdn.dyna.trace",
          "ips" : [ "238.245.160.14" ],
          "oneAgentRoutingEnabled" : true,
          "operatingSystem" : "Linux",
          "playerVersion" : "1.179.0.20190920-145430",
          "status" : "Running",
          "version" : "1.161.0.20181210-173639"
        },
        "properties" : {
          "activeGateVersion" : {
            "description" : "The version of the Active Gate.",
            "type" : "string"
          },
          "autoUpdateEnabled" : {
            "description" : "The Active Gate has the Auto update option enabled ('true') or not ('false')",
            "type" : "boolean"
          },
          "browserMonitorsEnabled" : {
            "description" : "The synthetic node is able to execute browser monitors (`true`) or not (`false`).",
            "type" : "boolean"
          },
          "browserType" : {
            "description" : "The browser type.",
            "type" : "string"
          },
          "browserVersion" : {
            "description" : "The browser version.",
            "type" : "string"
          },
          "entityId" : {
            "description" : "The ID of the synthetic node.",
            "type" : "string"
          },
          "healthCheckStatus" : {
            "description" : "The health check status of the synthetic node.",
            "type" : "string"
          },
          "hostname" : {
            "description" : "The hostname of the synthetic node.",
            "type" : "string"
          },
          "ips" : {
            "description" : "The IP of the synthetic node.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "oneAgentRoutingEnabled " : {
            "description" : "The Active Gate has the One Agent routing enabled ('true') or not ('false').",
            "type" : "boolean"
          },
          "operatingSystem" : {
            "description" : "The Active Gate's host operating system.",
            "type" : "string"
          },
          "playerVersion" : {
            "description" : "The version of the synthetic player.",
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the synthetic node.",
            "type" : "string"
          },
          "version" : {
            "description" : "The version of the synthetic node.",
            "type" : "string"
          }
        },
        "required" : [ "activeGateVersion", "autoUpdateEnabled", "browserMonitorsEnabled", "browserType", "browserVersion", "entityId", "healthCheckStatus", "hostname", "ips", "oneAgentRoutingEnabled ", "operatingSystem", "playerVersion", "status", "version" ],
        "type" : "object"
      },
      "NodeCollectionElement" : {
        "description" : "The short representation of a synthetic object. Only contains the ID and the display name.",
        "properties" : {
          "activeGateVersion" : {
            "description" : "The version of the Active Gate.",
            "type" : "string"
          },
          "autoUpdateEnabled" : {
            "description" : "The Active Gate has the Auto update option enabled ('true') or not ('false')",
            "type" : "boolean"
          },
          "browserMonitorsEnabled" : {
            "description" : "Browser check capabilities enabled flag.",
            "type" : "boolean"
          },
          "entityId" : {
            "description" : "The ID of a node.",
            "type" : "string"
          },
          "healthCheckStatus" : {
            "description" : "The health check status of the synthetic node.",
            "type" : "string"
          },
          "hostname" : {
            "description" : "The hostname of a node.",
            "type" : "string"
          },
          "ips" : {
            "description" : "The IP of a node.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "oneAgentRoutingEnabled " : {
            "description" : "The Active Gate has the One Agent routing enabled ('true') or not ('false').",
            "type" : "boolean"
          },
          "operatingSystem" : {
            "description" : "The Active Gate's host operating system.",
            "type" : "string"
          },
          "playerVersion" : {
            "description" : "The version of the synthetic player.",
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the synthetic node.",
            "type" : "string"
          },
          "version" : {
            "description" : "The version of a node",
            "type" : "string"
          }
        },
        "required" : [ "activeGateVersion", "autoUpdateEnabled", "browserMonitorsEnabled", "entityId", "healthCheckStatus", "hostname", "ips", "oneAgentRoutingEnabled ", "operatingSystem", "playerVersion", "status", "version" ],
        "type" : "object"
      },
      "Nodes" : {
        "description" : "A list of synthetic nodes",
        "example" : {
          "nodes" : [ {
            "activeGateVersion" : "1.172.2.20190607-040913",
            "autoUpdateEnabled" : true,
            "browserMonitorsEnabled" : true,
            "entityId" : "3086117876",
            "healthCheckStatus" : "Ok",
            "hostname" : "gdn.dyna.trace",
            "ips" : [ "238.245.160.14" ],
            "oneAgentRoutingEnabled" : true,
            "operatingSystem" : "Linux",
            "playerVersion" : "1.179.0.20190920-145430",
            "status" : "Running",
            "version" : "1.161.0.20181210-173639"
          } ]
        },
        "properties" : {
          "nodes" : {
            "description" : "A list of synthetic nodes",
            "items" : {
              "$ref" : "#/components/schemas/NodeCollectionElement"
            },
            "type" : "array"
          }
        },
        "required" : [ "nodes" ],
        "type" : "object"
      },
      "Notification" : {
        "properties" : {
          "arguments" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "message" : {
            "type" : "string"
          },
          "messageFormat" : {
            "type" : "string"
          },
          "messageFormatSpecifierTypes" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "notificationType" : {
            "type" : "string"
          },
          "severity" : {
            "type" : "string"
          },
          "syntaxPosition" : {
            "$ref" : "#/components/schemas/TokenPosition"
          }
        },
        "type" : "object"
      },
      "ObjectsList" : {
        "description" : "A list of settings objects.",
        "properties" : {
          "items" : {
            "description" : "A list of settings objects.",
            "items" : {
              "$ref" : "#/components/schemas/SettingsObject"
            },
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "items", "pageSize", "totalCount" ],
        "type" : "object"
      },
      "ParameterErrorInfo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ErrorInfo"
        }, {
          "properties" : {
            "parameterDescriptor" : {
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "type" : "object"
      },
      "PositionInfo" : {
        "properties" : {
          "column" : {
            "format" : "int32",
            "type" : "integer"
          },
          "index" : {
            "format" : "int32",
            "type" : "integer"
          },
          "line" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Precondition" : {
        "description" : "A precondition for visibility of a property.",
        "properties" : {
          "expectedValue" : {
            "description" : "The expected value of the property. \n\nOnly applicable to properties of the `EQUALS` type.",
            "example" : "expectedValue",
            "type" : "object"
          },
          "expectedValues" : {
            "description" : "A list of valid values of the property. \n\nOnly applicable to properties of the `IN` type.",
            "example" : "expectedValues",
            "items" : {
              "type" : "object"
            },
            "type" : "array"
          },
          "pattern" : {
            "description" : "The Regular expression which is matched against the property. \n\nOnly applicable to properties of the `REGEX_MATCH` type.",
            "example" : "example Regex",
            "type" : "string"
          },
          "precondition" : {
            "$ref" : "#/components/schemas/Precondition"
          },
          "preconditions" : {
            "description" : "A list of child preconditions to be evaluated. \n\nOnly applicable to properties of the `AND` and `OR` types.",
            "items" : {
              "$ref" : "#/components/schemas/Precondition"
            },
            "type" : "array"
          },
          "property" : {
            "description" : "The property to be evaluated.",
            "example" : "propertyToEvaluate",
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the precondition.",
            "enum" : [ "AND", "EQUALS", "IN", "NOT", "NULL", "OR", "REGEX_MATCH" ],
            "example" : "NULL",
            "type" : "string"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "PrivateSyntheticLocation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocation"
        }, {
          "properties" : {
            "autoUpdateChromium" : {
              "description" : "Auto upgrade of Chromium is enabled (`true`) or disabled (`false`).",
              "type" : "boolean"
            },
            "availabilityLocationOutage" : {
              "description" : "The alerting of location outage is enabled (`true`) or disabled (`false`).",
              "type" : "boolean"
            },
            "availabilityNodeOutage" : {
              "description" : "The alerting of node outage is enabled (`true`) or disabled (`false`). \n\n If enabled, the outage of *any* node in the location triggers an alert.",
              "type" : "boolean"
            },
            "availabilityNotificationsEnabled" : {
              "description" : "The notifications of location and node outage is enabled (`true`) or disabled (`false`).",
              "type" : "boolean"
            },
            "locationNodeOutageDelayInMinutes" : {
              "description" : "Alert if the location or node outage lasts longer than *X* minutes. \n\n Only applicable when **availabilityLocationOutage** or **availabilityNodeOutage** is set to `true`.",
              "format" : "int32",
              "maximum" : 5,
              "minimum" : 1,
              "type" : "integer"
            },
            "nodes" : {
              "description" : "A list of synthetic nodes belonging to the location. \n\n You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl) call.",
              "items" : {
                "type" : "string"
              },
              "type" : "array"
            }
          },
          "type" : "object"
        } ],
        "description" : "Configuration of a private synthetic location. \n\n Some fields are inherited from the base *SyntheticLocation* object.",
        "example" : {
          "autoUpdateChromium" : true,
          "availabilityLocationNodeOutageDelayInMinutes" : 5,
          "availabilityLocationOutage" : false,
          "availabilityNodeOutage" : false,
          "city" : "Linz",
          "countryCode" : "AT",
          "latitude" : 48.306351,
          "longitude" : 14.287399,
          "name" : "Linz Location",
          "nodes" : [ "93302281" ],
          "regionCode" : "04",
          "status" : "ENABLED",
          "type" : "PRIVATE"
        },
        "required" : [ "entityId", "latitude", "longitude", "name", "nodes", "type" ],
        "type" : "object"
      },
      "Problem" : {
        "description" : "The properties of a problem.",
        "properties" : {
          "affectedEntities" : {
            "description" : "A list of all entities that are affected by the problem.",
            "items" : {
              "$ref" : "#/components/schemas/EntityStub"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "displayId" : {
            "description" : "The display ID of the problem.",
            "type" : "string"
          },
          "endTime" : {
            "description" : "The end timestamp of the problem, in UTC milliseconds. \n\n Has `-1` value, if the problem is still open.",
            "format" : "int64",
            "type" : "integer"
          },
          "entityTags" : {
            "description" : "A list of all entity tags of the problem.",
            "items" : {
              "$ref" : "#/components/schemas/METag"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "evidenceDetails" : {
            "$ref" : "#/components/schemas/EvidenceDetails"
          },
          "impactAnalysis" : {
            "$ref" : "#/components/schemas/ImpactAnalysis"
          },
          "impactLevel" : {
            "description" : "The impact level of the problem. It shows what is affected by the problem.",
            "enum" : [ "APPLICATION", "ENVIRONMENT", "INFRASTRUCTURE", "SERVICES" ],
            "type" : "string"
          },
          "impactedEntities" : {
            "description" : "A list of all entities that are impacted by the problem.",
            "items" : {
              "$ref" : "#/components/schemas/EntityStub"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "linkedProblemInfo" : {
            "$ref" : "#/components/schemas/LinkedProblem"
          },
          "managementZones" : {
            "description" : "A list of all management zones that the problem belongs to.",
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "problemFilters" : {
            "description" : "A list of alerting profiles that match the problem.",
            "items" : {
              "$ref" : "#/components/schemas/AlertingProfileStub"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "problemId" : {
            "description" : "The ID of the problem.",
            "type" : "string"
          },
          "recentComments" : {
            "$ref" : "#/components/schemas/CommentsList"
          },
          "rootCauseEntity" : {
            "$ref" : "#/components/schemas/EntityStub"
          },
          "severityLevel" : {
            "description" : "The severity of the problem.",
            "enum" : [ "AVAILABILITY", "CUSTOM_ALERT", "ERROR", "INFO", "MONITORING_UNAVAILABLE", "PERFORMANCE", "RESOURCE_CONTENTION" ],
            "type" : "string"
          },
          "startTime" : {
            "description" : "The start timestamp of the problem, in UTC milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "status" : {
            "description" : "The status of the problem.",
            "enum" : [ "CLOSED", "OPEN" ],
            "type" : "string"
          },
          "title" : {
            "description" : "The name of the problem, displayed in the UI.",
            "type" : "string"
          }
        },
        "required" : [ "affectedEntities", "displayId", "endTime", "impactLevel", "impactedEntities", "managementZones", "problemFilters", "problemId", "severityLevel", "startTime", "status", "title" ],
        "type" : "object"
      },
      "ProblemCloseRequestDtoImpl" : {
        "properties" : {
          "message" : {
            "description" : "The text of the closing comment.",
            "type" : "string"
          }
        },
        "required" : [ "message" ],
        "type" : "object"
      },
      "ProblemCloseResult" : {
        "description" : "The result of closing a problem.",
        "properties" : {
          "closeTimestamp" : {
            "description" : "The timestamp when the user triggered the closing.",
            "format" : "int64",
            "type" : "integer"
          },
          "closing" : {
            "description" : "True, if the problem is being closed.",
            "type" : "boolean"
          },
          "comment" : {
            "$ref" : "#/components/schemas/Comment"
          },
          "problemId" : {
            "description" : "The ID of the problem.",
            "type" : "string"
          }
        },
        "required" : [ "closeTimestamp", "closing", "problemId" ],
        "type" : "object"
      },
      "Problems" : {
        "description" : "A list of problems.",
        "properties" : {
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "problems" : {
            "description" : "The result entries.",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            },
            "type" : "array"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          },
          "warnings" : {
            "description" : "A list of warnings",
            "items" : {
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "problems", "totalCount" ],
        "type" : "object"
      },
      "ProcessGroupVulnerableFunctions" : {
        "description" : "The vulnerable functions of a process group including their usage.",
        "properties" : {
          "functionsInUse" : {
            "description" : "A list of vulnerable functions in use.",
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "functionsNotAvailable" : {
            "description" : "A list of vulnerable functions with unknown state.",
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "functionsNotInUse" : {
            "description" : "A list of vulnerable functions not in use.",
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "processGroup" : {
            "description" : "The process group identifier.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PropertyDefinition" : {
        "description" : "Configuration of a property in a settings schema.",
        "properties" : {
          "constraints" : {
            "description" : "A list of constraints limiting the values to be accepted.",
            "items" : {
              "$ref" : "#/components/schemas/Constraint"
            },
            "type" : "array"
          },
          "datasource" : {
            "$ref" : "#/components/schemas/DatasourceDefinition"
          },
          "default" : {
            "description" : "The default value to be used when no value is provided. \n\nIf a non-singleton has the value of `null`, it means an empty collection.",
            "example" : "propertyDefaultValue",
            "type" : "object"
          },
          "description" : {
            "description" : "A short description of the property.",
            "example" : "propertyDescription",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name of the property.",
            "example" : "propertyDisplayName",
            "type" : "string"
          },
          "documentation" : {
            "description" : "An extended description and/or links to documentation.",
            "example" : "propertyDocumentation",
            "type" : "string"
          },
          "items" : {
            "$ref" : "#/components/schemas/Item"
          },
          "maxObjects" : {
            "description" : "The maximum number of **objects** in a collection property. \n\n Has the value of `1` for singletons.",
            "format" : "int32",
            "type" : "integer"
          },
          "metadata" : {
            "additionalProperties" : {
              "description" : "Metadata of the property.",
              "type" : "string"
            },
            "description" : "Metadata of the property.",
            "type" : "object"
          },
          "minObjects" : {
            "description" : "The minimum number of **objects** in a collection property.",
            "example" : 1,
            "format" : "int32",
            "type" : "integer"
          },
          "modificationPolicy" : {
            "description" : "Modification policy of the property.",
            "enum" : [ "ALWAYS", "DEFAULT", "NEVER" ],
            "example" : "ALWAYS",
            "type" : "string"
          },
          "nullable" : {
            "description" : "The value can (`true`) or can't (`false`) be `null`.",
            "example" : true,
            "type" : "boolean"
          },
          "precondition" : {
            "$ref" : "#/components/schemas/Precondition"
          },
          "referencedType" : {
            "description" : "The type referenced by the property value",
            "example" : "propertyReferencedType",
            "type" : "string"
          },
          "subType" : {
            "description" : "The subtype of the property's value.",
            "example" : "propertySubType",
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the property's value.",
            "type" : "object"
          },
          "uiCustomization" : {
            "$ref" : "#/components/schemas/UiCustomization"
          }
        },
        "required" : [ "maxObjects", "nullable", "type" ],
        "type" : "object"
      },
      "ProtocolDetails" : {
        "description" : "Details that are specific to the used protocol.",
        "properties" : {
          "http" : {
            "$ref" : "#/components/schemas/HttpProtocolDetails"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "ProxyErrorInfo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ErrorInfo"
        } ],
        "type" : "object"
      },
      "PublicSyntheticLocation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocation"
        }, {
          "properties" : {
            "browserType" : {
              "description" : "The type of the browser the location is using to execute browser monitors.",
              "type" : "string"
            },
            "browserVersion" : {
              "description" : "The version of the browser the location is using to execute browser monitors.",
              "type" : "string"
            },
            "capabilities" : {
              "description" : "A list of location capabilities.",
              "items" : {
                "type" : "string"
              },
              "type" : "array"
            },
            "cloudPlatform" : {
              "description" : "The cloud provider where the location is hosted.",
              "enum" : [ "ALIBABA", "AMAZON_EC2", "AZURE", "DYNATRACE_CLOUD", "GOOGLE_CLOUD", "INTEROUTE", "OTHER", "UNDEFINED" ],
              "type" : "string"
            },
            "ips" : {
              "description" : "The list of IP addresses assigned to the location.",
              "items" : {
                "type" : "string"
              },
              "type" : "array",
              "uniqueItems" : true
            },
            "stage" : {
              "description" : "The stage of the location.",
              "enum" : [ "BETA", "COMING_SOON", "DELETED", "GA" ],
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "Configuration of a public synthetic location. \n\n Some fields are inherited from the base *SyntheticLocation* object.",
        "example" : {
          "browserType" : "Chrome",
          "browserVersion" : "69.0.3497.81",
          "capabilities" : [ "BROWSER", "HTTP" ],
          "city" : "Amazon US East (N. Virginia)",
          "cloudPlatform" : "AMAZON_EC2",
          "countryCode" : "US",
          "entityId" : "SYNTHETIC_LOCATION-95196F3C9A4F4215",
          "geoLocationId" : "GEOLOCATION-95196F3C9A4F4215",
          "ips" : [ "134.189.153.97", "134.189.153.98" ],
          "latitude" : 39.0436,
          "longitude" : -77.4875,
          "name" : "Amazon US East",
          "regionCode" : "VA",
          "stage" : "GA",
          "status" : "ENABLED",
          "type" : "PUBLIC"
        },
        "required" : [ "browserType", "browserVersion", "cloudPlatform", "entityId", "ips", "latitude", "longitude", "name", "stage", "type" ],
        "type" : "object"
      },
      "QueryFrontendRawErrorInfo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ErrorInfo"
        }, {
          "properties" : {
            "rawQueryFrontendResponse" : {
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "type" : "object"
      },
      "QueryResponse" : {
        "properties" : {
          "batches" : {
            "items" : {
              "$ref" : "#/components/schemas/Batch"
            },
            "type" : "array"
          },
          "notifications" : {
            "items" : {
              "$ref" : "#/components/schemas/Notification"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Region" : {
        "description" : "The information about a region for a given country",
        "example" : {
          "code" : "01",
          "name" : "Burgenland"
        },
        "properties" : {
          "cities" : {
            "description" : "An order list of cities for a given region",
            "items" : {
              "$ref" : "#/components/schemas/City"
            },
            "type" : "array"
          },
          "code" : {
            "description" : "Region code",
            "type" : "string"
          },
          "name" : {
            "description" : "Region name",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "RegionList" : {
        "description" : "An ordered list of regions for a given country",
        "example" : {
          "CountryCode" : "FR",
          "CountryName" : "France",
          "regionCount" : 13,
          "regions" : [ {
            "cities" : [ {
              "latitude" : 46.2806,
              "longitude" : 6.7217,
              "name" : "Abondance"
            }, {
              "latitude" : 46.1008,
              "longitude" : 3.4463,
              "name" : "Abrest"
            } ],
            "code" : "ARA",
            "name" : "Auvergne-Rhone-Alpes"
          } ]
        },
        "properties" : {
          "countryCode" : {
            "description" : "Country code",
            "type" : "string"
          },
          "countryName" : {
            "description" : "Country name",
            "type" : "string"
          },
          "regionCount" : {
            "description" : "Number of regions",
            "format" : "int32",
            "type" : "integer"
          },
          "regions" : {
            "description" : "An ordered list of regions.",
            "items" : {
              "$ref" : "#/components/schemas/Region"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "RegionListSingleCountry" : {
        "description" : "An ordered list of regions for a single country",
        "example" : {
          "countryCode" : "FR",
          "countryName" : "France",
          "regionCount" : 13,
          "regions" : [ {
            "code" : "ARA",
            "name" : "Auvergne-Rhone-Alpes"
          }, {
            "code" : "BFC",
            "name" : "Bourgogne-Franche-Comte"
          } ]
        },
        "properties" : {
          "countryCode" : {
            "description" : "Country code",
            "type" : "string"
          },
          "countryName" : {
            "description" : "Country name",
            "type" : "string"
          },
          "regionCount" : {
            "description" : "Number of regions",
            "format" : "int32",
            "type" : "integer"
          },
          "regions" : {
            "description" : "An ordered list of regions.",
            "items" : {
              "$ref" : "#/components/schemas/Region"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "RegisteredExtensionResultDto" : {
        "properties" : {
          "extensionName" : {
            "description" : "FQN of the extension registered in the tenant.",
            "type" : "string"
          },
          "extensionVersion" : {
            "description" : "Version number of the extension.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "RelatedAttacksList" : {
        "description" : "A list of related attacks of the security problem. \n\nRelated attacks are attacks on the exposed security problem.",
        "properties" : {
          "attacks" : {
            "description" : "A list of related attack ids.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "RelatedContainerImage" : {
        "description" : "Related container image of a security problem.",
        "properties" : {
          "affectedEntities" : {
            "description" : "A list of affected entities.",
            "items" : {
              "description" : "A list of affected entities.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "imageId" : {
            "description" : "The image ID of the related container image.",
            "readOnly" : true,
            "type" : "string"
          },
          "imageName" : {
            "description" : "The image name of the related container image.",
            "readOnly" : true,
            "type" : "string"
          },
          "numberOfAffectedEntities" : {
            "description" : "The number of affected entities.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "RelatedContainerList" : {
        "description" : "A list of related container images.",
        "properties" : {
          "containerImages" : {
            "description" : "A list of related container images.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedContainerImage"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "RelatedEntitiesList" : {
        "description" : "A list of related entities of the security problem. \n\nA related entity is a monitored entity that is directly or indirectly related to an *affected entity* (for example, it could be a host where an affected process runs). \n\nEach related entity contains a list of corresponding affected entities (for example, an affected process running on this host).",
        "properties" : {
          "applications" : {
            "description" : "A list of related applications.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedEntity"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "databases" : {
            "description" : "A list of related databases.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "hosts" : {
            "description" : "A list of related hosts.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedEntity"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "kubernetesClusters" : {
            "description" : "A list of related Kubernetes clusters.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedEntity"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "kubernetesWorkloads" : {
            "description" : "A list of related Kubernetes workloads.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedEntity"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "services" : {
            "description" : "A list of related services.",
            "items" : {
              "$ref" : "#/components/schemas/RelatedService"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "RelatedEntity" : {
        "description" : "An entity related to a security problem.",
        "properties" : {
          "affectedEntities" : {
            "description" : "A list of affected entities related to the entity.",
            "items" : {
              "description" : "A list of affected entities related to the entity.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "id" : {
            "description" : "The Dynatrace entity ID of the entity.",
            "readOnly" : true,
            "type" : "string"
          },
          "numberOfAffectedEntities" : {
            "description" : "The number of affected entities related to the entity.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "RelatedService" : {
        "description" : "A service related to a security problem.",
        "properties" : {
          "affectedEntities" : {
            "description" : "A list of affected entities related to the entity.",
            "items" : {
              "description" : "A list of affected entities related to the entity.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "exposure" : {
            "description" : "The level of exposure of the service.",
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "PUBLIC_NETWORK" ],
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The Dynatrace entity ID of the entity.",
            "readOnly" : true,
            "type" : "string"
          },
          "numberOfAffectedEntities" : {
            "description" : "The number of affected entities related to the entity.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Release" : {
        "description" : "Contains data related to a single release of a component.\nA Release is a combination of a component and a version.\nA Component can be any form of deployable that can be associated with a version.\nIn the first draft, a Component is always a Service.\n\nThe tuple <name, product, stage, version> is always unique.",
        "properties" : {
          "affectedByProblems" : {
            "description" : "The entity has one or more problems",
            "example" : true,
            "type" : "boolean"
          },
          "affectedBySecurityVulnerabilities" : {
            "description" : "The entity has one or more security vulnerabilities",
            "example" : true,
            "type" : "boolean"
          },
          "instances" : {
            "description" : "The instances entityIds included in this release",
            "example" : [ "PROCESS_GROUP_INSTANCE-49D94B90FB71C45B", "PROCESS_GROUP_INSTANCE-7EA049157C82D1A5" ],
            "items" : {
              "$ref" : "#/components/schemas/ReleaseInstance"
            },
            "type" : "array"
          },
          "name" : {
            "description" : "The entity name",
            "example" : "cluster",
            "type" : "string"
          },
          "problemCount" : {
            "description" : "The number of problems of the entity",
            "example" : 4,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "product" : {
            "description" : "The product name",
            "example" : "Sockshop",
            "type" : "string"
          },
          "releaseEntityId" : {
            "description" : "The entity id of correlating release.",
            "example" : "PROCESS_GROUP-DFDBAC9CBF104253",
            "type" : "string"
          },
          "running" : {
            "description" : "The related PGI is still running/monitored",
            "example" : true,
            "type" : "boolean"
          },
          "securityVulnerabilitiesCount" : {
            "description" : "The number of security vulnerabilities of the entity",
            "example" : 4,
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "securityVulnerabilitiesEnabled" : {
            "description" : "Indicates that the security vulnerabilities feature is enabled",
            "example" : true,
            "type" : "boolean"
          },
          "softwareTechs" : {
            "description" : "The software technologies of the release",
            "example" : [ {
              "edition" : "OpenJDK",
              "technology" : "JAVA",
              "verbatimType" : "Java",
              "version" : "1.8.0_242"
            } ],
            "items" : {
              "$ref" : "#/components/schemas/SoftwareTechs"
            },
            "type" : "array"
          },
          "stage" : {
            "description" : "The stage name",
            "example" : "staging",
            "type" : "string"
          },
          "throughput" : {
            "description" : "The count of bytes per second of the entity",
            "example" : 923234,
            "format" : "double",
            "minimum" : 0,
            "type" : "number"
          },
          "version" : {
            "description" : "The identified release version",
            "example" : "1.195.34.12341232423-012342",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ReleaseInstance" : {
        "description" : "Contains data related to a single instance of a release.\nAn instance is a Process Group Instance and has an optional build version.",
        "example" : [ "PROCESS_GROUP_INSTANCE-49D94B90FB71C45B", "PROCESS_GROUP_INSTANCE-7EA049157C82D1A5" ],
        "properties" : {
          "buildVersion" : {
            "description" : "The build version",
            "example" : "223005",
            "type" : "string"
          },
          "entityId" : {
            "description" : "The entity id of the instance.",
            "example" : "PROCESS_GROUP_INSTANCE-DFDBAC9CBF104253",
            "type" : "string"
          },
          "problems" : {
            "description" : "List of event Ids of open problems",
            "example" : [ "573177299181554914_1616573184015V2" ],
            "items" : {
              "description" : "List of event Ids of open problems",
              "example" : "[\"573177299181554914_1616573184015V2\"]",
              "type" : "string"
            },
            "type" : "array"
          },
          "securityVulnerabilities" : {
            "description" : "List of Security vulnerabilities Ids",
            "example" : [ "SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567" ],
            "items" : {
              "description" : "List of Security vulnerabilities Ids",
              "example" : "[\"SNYK-JAVA-COMFASTERXMLJACKSONCORE-1234567\"]",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Releases" : {
        "description" : "A list of releases.",
        "properties" : {
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "releases" : {
            "description" : "A list of releases.",
            "items" : {
              "$ref" : "#/components/schemas/Release"
            },
            "type" : "array"
          },
          "releasesWithProblems" : {
            "description" : "Number of releases with problems.",
            "format" : "int64",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "RemediationAssessment" : {
        "description" : "Assessment of the remediation item.",
        "properties" : {
          "dataAssets" : {
            "description" : "The reachability of related data assets by affected entities.",
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "REACHABLE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "exposure" : {
            "description" : "The level of exposure of affected entities.",
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "PUBLIC_NETWORK" ],
            "readOnly" : true,
            "type" : "string"
          },
          "numberOfDataAssets" : {
            "description" : "The number of related data assets.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "vulnerableFunctionUsage" : {
            "description" : "The usage of vulnerable functions",
            "enum" : [ "IN_USE", "NOT_AVAILABLE", "NOT_IN_USE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "vulnerableFunctionsInUse" : {
            "description" : "A list of vulnerable functions that are in use.",
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            },
            "readOnly" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "vulnerableFunctionsNotAvailable" : {
            "description" : "A list of vulnerable functions that are not available.",
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            },
            "readOnly" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "vulnerableFunctionsNotInUse" : {
            "description" : "A list of vulnerable functions that are not in use.",
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunction"
            },
            "readOnly" : true,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "RemediationItem" : {
        "description" : "A possible remediation for a security problem.",
        "properties" : {
          "assessment" : {
            "$ref" : "#/components/schemas/RemediationAssessment"
          },
          "entityIds" : {
            "description" : "A list of related entities, represented by entity IDs.",
            "items" : {
              "description" : "A list of related entities, represented by entity IDs.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "firstAffectedTimestamp" : {
            "description" : "The timestamp when the entity has first been related to the vulnerability.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "id" : {
            "description" : "The ID of the remediation item.",
            "readOnly" : true,
            "type" : "string"
          },
          "muteState" : {
            "$ref" : "#/components/schemas/RemediationItemMuteState"
          },
          "name" : {
            "description" : "The name of the entity.",
            "readOnly" : true,
            "type" : "string"
          },
          "remediationProgress" : {
            "$ref" : "#/components/schemas/RemediationProgress"
          },
          "resolvedTimestamp" : {
            "description" : "The timestamp (UTC milliseconds) when the vulnerability has been resolved for related entities.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "vulnerabilityState" : {
            "description" : "The current state of related entities for the vulnerability.",
            "enum" : [ "RESOLVED", "VULNERABLE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "vulnerableComponents" : {
            "description" : "A list of vulnerable components of the remediation item. \n\nA vulnerable component is what causes the security problem.",
            "items" : {
              "$ref" : "#/components/schemas/VulnerableComponent"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "RemediationItemList" : {
        "description" : "A list of remediation items.",
        "properties" : {
          "remediationItems" : {
            "description" : "A list of remediation items.",
            "items" : {
              "$ref" : "#/components/schemas/RemediationItem"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "RemediationItemMuteState" : {
        "description" : "The mute state of a remediation item of a security problem.",
        "properties" : {
          "comment" : {
            "description" : "A short comment about the most recent mute state change.",
            "readOnly" : true,
            "type" : "string"
          },
          "lastUpdatedTimestamp" : {
            "description" : "The timestamp (UTC milliseconds) of the last update of the mute state.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "muted" : {
            "description" : "The remediation is (`true`) or is not (`false`) muted.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "reason" : {
            "description" : "The reason for the most recent mute state change.",
            "enum" : [ "AFFECTED", "CONFIGURATION_NOT_AFFECTED", "FALSE_POSITIVE", "IGNORE", "INITIAL_STATE", "OTHER", "VULNERABLE_CODE_NOT_IN_USE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "user" : {
            "description" : "The user who last changed the mute state.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "RemediationItemMuteStateChange" : {
        "description" : "An updated configuration of the remediation item's mute state.",
        "properties" : {
          "comment" : {
            "description" : "A comment about the mute state change reason.",
            "type" : "string",
            "writeOnly" : true
          },
          "muted" : {
            "description" : "The desired mute state of the remediation item.",
            "type" : "boolean",
            "writeOnly" : true
          },
          "reason" : {
            "description" : "The reason for the mute state change.",
            "enum" : [ "AFFECTED", "CONFIGURATION_NOT_AFFECTED", "FALSE_POSITIVE", "IGNORE", "INITIAL_STATE", "OTHER", "VULNERABLE_CODE_NOT_IN_USE" ],
            "example" : "IGNORE",
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "comment", "muted", "reason" ],
        "type" : "object"
      },
      "RemediationProgress" : {
        "description" : "The progress of this remediation item. It contains affected and unaffected entities.",
        "properties" : {
          "affectedEntities" : {
            "description" : "A list of related entities that are affected by the security problem.",
            "items" : {
              "description" : "A list of related entities that are affected by the security problem.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "unaffectedEntities" : {
            "description" : "A list of related entities that are affected by the security problem.",
            "items" : {
              "description" : "A list of related entities that are affected by the security problem.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "RequestBodyErrorInfo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ErrorInfo"
        }, {
          "properties" : {
            "bodyDescriptor" : {
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "type" : "object"
      },
      "RequestInformation" : {
        "description" : "Describes the complete request information of an attack.",
        "properties" : {
          "host" : {
            "description" : "The target host of the request.",
            "readOnly" : true,
            "type" : "string"
          },
          "path" : {
            "description" : "The request path.",
            "readOnly" : true,
            "type" : "string"
          },
          "protocolDetails" : {
            "$ref" : "#/components/schemas/ProtocolDetails"
          },
          "url" : {
            "description" : "The requested URL.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "RiskAssessment" : {
        "description" : "Risk assessment of a security problem.",
        "properties" : {
          "baseRiskLevel" : {
            "description" : "The risk level from the CVSS score.",
            "enum" : [ "CRITICAL", "HIGH", "LOW", "MEDIUM", "NONE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "baseRiskScore" : {
            "description" : "The risk score (1-10) from the CVSS score.",
            "format" : "float",
            "readOnly" : true,
            "type" : "number"
          },
          "baseRiskVector" : {
            "description" : "The original attack vector of the CVSS assessment.",
            "readOnly" : true,
            "type" : "string"
          },
          "dataAssets" : {
            "description" : "The reachability of related data assets by affected entities.",
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "REACHABLE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "exposure" : {
            "description" : "The level of exposure of affected entities.",
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "PUBLIC_NETWORK" ],
            "readOnly" : true,
            "type" : "string"
          },
          "publicExploit" : {
            "description" : "The availability status of public exploits.",
            "enum" : [ "AVAILABLE", "NOT_AVAILABLE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "riskLevel" : {
            "description" : "The Davis risk level. \n\n It is calculated by Dynatrace on the basis of CVSS score.",
            "enum" : [ "CRITICAL", "HIGH", "LOW", "MEDIUM", "NONE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "riskScore" : {
            "description" : "The Davis risk score (1-10). \n\n It is calculated by Dynatrace on the basis of CVSS score.",
            "format" : "float",
            "readOnly" : true,
            "type" : "number"
          },
          "riskVector" : {
            "description" : "The attack vector calculated by Dynatrace based on the CVSS attack vector.",
            "readOnly" : true,
            "type" : "string"
          },
          "vulnerableFunctionUsage" : {
            "description" : "The state of vulnerable code execution.",
            "enum" : [ "IN_USE", "NOT_AVAILABLE", "NOT_IN_USE" ],
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "RiskAssessmentSnapshot" : {
        "description" : "A snapshot of the risk assessment of a security problem.",
        "properties" : {
          "exposure" : {
            "description" : "The level of exposure of affected entities.",
            "enum" : [ "NOT_AVAILABLE", "NOT_DETECTED", "PUBLIC_NETWORK" ],
            "readOnly" : true,
            "type" : "string"
          },
          "numberOfAffectedEntities" : {
            "description" : "The number of currently affected entities.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "numberOfReachableDataAssets" : {
            "description" : "The number of data assets that are currently reachable by affected entities.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          },
          "publicExploit" : {
            "description" : "The availability status of public exploits.",
            "enum" : [ "AVAILABLE", "NOT_AVAILABLE" ],
            "readOnly" : true,
            "type" : "string"
          },
          "vulnerableFunctionUsage" : {
            "description" : "The state of vulnerable code execution.",
            "enum" : [ "IN_USE", "NOT_AVAILABLE", "NOT_IN_USE" ],
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "Rollup" : {
        "description" : "A way of viewing a series as a single value for the purpose of sorting or series-based filters.",
        "properties" : {
          "parameter" : {
            "format" : "double",
            "type" : "number"
          },
          "type" : {
            "enum" : [ "AUTO", "AVG", "MAX", "MEDIAN", "MIN", "PERCENTILE", "SUM" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SLO" : {
        "description" : "Parameters of a service-level objective (SLO).",
        "properties" : {
          "burnRateMetricKey" : {
            "description" : "The error budget burn rate key for a metric expression.",
            "example" : "func:slo.errorBudgetBurnRate.payment_service_availability",
            "type" : "string"
          },
          "denominatorValue" : {
            "deprecated" : true,
            "description" : "The denominator value used to evaluate the SLO when **useRateMetric** is set to `false`.",
            "example" : 90,
            "format" : "double",
            "type" : "number"
          },
          "description" : {
            "description" : "A short description of the SLO.",
            "example" : "Rate of successful payments per week",
            "type" : "string"
          },
          "enabled" : {
            "description" : "The SLO is enabled (`true`) or disabled (`false`).",
            "example" : true,
            "type" : "boolean"
          },
          "error" : {
            "description" : "The error of the SLO calculation. \n\nIf the value differs from `NONE` there's something wrong with the SLO calculation.",
            "example" : "NONE",
            "type" : "string"
          },
          "errorBudget" : {
            "description" : "The error budget of the calculated SLO. \n\nThe error budget is the difference between the calculated and target values. A positive number means all is good; a negative number means trouble.",
            "example" : 1.25,
            "format" : "double",
            "type" : "number"
          },
          "errorBudgetBurnRate" : {
            "$ref" : "#/components/schemas/SloBurnRate"
          },
          "evaluatedPercentage" : {
            "description" : "The calculated value of the SLO. Has the value of the evaluated SLO or the value of `-1`: \n\n* If there is an error with the SLO calculation; in that case check the value of the **error** property. \n* If the evaluate parameter has not been set to `true`; in that case the **error** property will contain no error.",
            "example" : 96.25,
            "format" : "double",
            "type" : "number"
          },
          "evaluationType" : {
            "description" : "The evaluation type of the SLO.",
            "enum" : [ "AGGREGATE" ],
            "example" : "AGGREGATE",
            "type" : "string"
          },
          "filter" : {
            "description" : "The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector).",
            "example" : "type(\"SERVICE\")",
            "type" : "string"
          },
          "hasAccess" : {
            "description" : "The SLO is accessible through the settings if hasAccess is `true`.",
            "example" : true,
            "type" : "boolean"
          },
          "id" : {
            "description" : "The ID of the SLO",
            "example" : "123e4567-e89b-42d3-a456-556642440000",
            "format" : "uuid",
            "type" : "string"
          },
          "metricDenominator" : {
            "deprecated" : true,
            "description" : "The total count metric (the denominator in rate calculation). \n\nRequired when the **useRateMetric** is set to `false`.",
            "example" : "builtin:service.requestCount.server",
            "type" : "string"
          },
          "metricExpression" : {
            "description" : "The percentage-based metric expression for the calculation of the SLO.",
            "example" : "(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())",
            "type" : "string"
          },
          "metricKey" : {
            "description" : "The key for a metric expression. Once created, metric keys can't be changed",
            "example" : "func:slo.payment_service_availability",
            "type" : "string"
          },
          "metricNumerator" : {
            "deprecated" : true,
            "description" : "The metric for the count of successes (the numerator in rate calculation). \n\nRequired when the **useRateMetric** is set to `false`.",
            "example" : "builtin:service.errors.server.successCount",
            "type" : "string"
          },
          "metricRate" : {
            "deprecated" : true,
            "description" : "The percentage-based metric for the calculation of the SLO. \n\nRequired when the **useRateMetric** is set to `true`.",
            "example" : "builtin:service.successes.server.rate",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the SLO.",
            "example" : "Payment service availability",
            "type" : "string"
          },
          "numeratorValue" : {
            "deprecated" : true,
            "description" : "The numerator value used to evaluate the SLO when **useRateMetric** is set to `false`.",
            "example" : 80,
            "format" : "double",
            "type" : "number"
          },
          "problemFilters" : {
            "deprecated" : true,
            "description" : "The entity filter for fetching the number of problems related to an SLO. Auto-generated in case no filter has been added to the SLO.",
            "example" : "[type(\"SERVICE\")]",
            "items" : {
              "deprecated" : true,
              "description" : "The entity filter for fetching the number of problems related to an SLO. Auto-generated in case no filter has been added to the SLO.",
              "example" : "[type(\"SERVICE\")]",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "relatedOpenProblems" : {
            "description" : "Number of OPEN problems related to the SLO. \n\nHas the value of `-1` if there's an error with fetching SLO related problems.",
            "format" : "int32",
            "type" : "integer"
          },
          "relatedTotalProblems" : {
            "description" : "Total number of problems related to the SLO. \n\nHas the value of `-1` if there's an error with fetching SLO related problems.",
            "format" : "int32",
            "type" : "integer"
          },
          "status" : {
            "description" : "The status of the calculated SLO.",
            "enum" : [ "FAILURE", "SUCCESS", "WARNING" ],
            "example" : "WARNING",
            "type" : "string"
          },
          "target" : {
            "description" : "The target value of the SLO.",
            "example" : 95.0,
            "format" : "double",
            "type" : "number"
          },
          "timeframe" : {
            "description" : "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector.",
            "example" : "-1d",
            "type" : "string"
          },
          "useRateMetric" : {
            "deprecated" : true,
            "description" : "The type of the metric to use for SLO calculation: \n\n* `true`: An existing percentage-based metric. \n* `false`: A ratio of two metrics. \n\nFor a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow) or try the [GET metrics](https://dt-url.net/8e43kxf) API call.",
            "example" : true,
            "type" : "boolean"
          },
          "warning" : {
            "description" : "The warning value of the SLO. \n\n At warning state the SLO is still fulfilled but is getting close to failure.",
            "example" : 97.5,
            "format" : "double",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "SLOs" : {
        "description" : "Contains SLOs and paging information.",
        "properties" : {
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "slo" : {
            "description" : "The list of SLOs.",
            "items" : {
              "$ref" : "#/components/schemas/SLO"
            },
            "type" : "array"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "SchemaDefinitionRestDto" : {
        "properties" : {
          "allowedScopes" : {
            "description" : "A list of scopes where the schema can be used.",
            "example" : [ "host", "application" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "constraints" : {
            "description" : "A list of constrains limiting the values to be accepted by the schema.",
            "items" : {
              "$ref" : "#/components/schemas/ComplexConstraint"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "A short description of the schema.",
            "example" : "Dynatrace disables monitoring of containers that do not run any applications",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name of the schema.",
            "example" : "Built-in container monitoring rules",
            "type" : "string"
          },
          "documentation" : {
            "description" : "An extended description of the schema and/or links to documentation.",
            "type" : "string"
          },
          "dynatrace" : {
            "description" : "The version of the data format.",
            "example" : "1",
            "type" : "string"
          },
          "enums" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EnumType"
            },
            "description" : "A list of definitions of enum properties.",
            "type" : "object"
          },
          "maxObjects" : {
            "description" : "The maximum amount of objects per scope. \n\nOnly applicable when **multiObject** is set to `true`.",
            "example" : 10,
            "format" : "int32",
            "type" : "integer"
          },
          "metadata" : {
            "additionalProperties" : {
              "description" : "Metadata of the setting.",
              "type" : "string"
            },
            "description" : "Metadata of the setting.",
            "type" : "object"
          },
          "multiObject" : {
            "description" : "Multiple (`true`) objects per scope are permitted or a single (`false`) object per scope is permitted.",
            "type" : "boolean"
          },
          "ordered" : {
            "description" : "If `true` the order of objects has semantic significance. \n\nOnly applicable when **multiObject** is set to `true`.",
            "type" : "boolean"
          },
          "properties" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PropertyDefinition"
            },
            "description" : "A list of schema's properties.",
            "type" : "object"
          },
          "schemaGroups" : {
            "description" : "Names of the groups, which the schema belongs to.",
            "example" : [ "group:some.1", "group:some.2" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "schemaId" : {
            "description" : "The ID of the schema.",
            "example" : "builtin:container.built-in-monitoring-rule",
            "type" : "string"
          },
          "types" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SchemaType"
            },
            "description" : "A list of definitions of types. \n\n A type is a complex property that contains its own set of subproperties.",
            "type" : "object"
          },
          "uiCustomization" : {
            "$ref" : "#/components/schemas/UiCustomization"
          },
          "version" : {
            "description" : "The version of the schema.",
            "example" : "1.4.2",
            "type" : "string"
          }
        },
        "required" : [ "allowedScopes", "description", "displayName", "dynatrace", "enums", "maxObjects", "multiObject", "properties", "schemaId", "types", "version" ],
        "type" : "object"
      },
      "SchemaFiles" : {
        "properties" : {
          "files" : {
            "description" : "A list of schema files.",
            "items" : {
              "description" : "A list of schema files.",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SchemaList" : {
        "description" : "The list of available settings schemas.",
        "properties" : {
          "items" : {
            "description" : "A list of settings schemas.",
            "items" : {
              "$ref" : "#/components/schemas/SchemaStub"
            },
            "type" : "array"
          },
          "totalCount" : {
            "description" : "The number of schemas in the list.",
            "example" : 1,
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "items", "totalCount" ],
        "type" : "object"
      },
      "SchemaStub" : {
        "description" : "The short representation of the settings schema.",
        "properties" : {
          "displayName" : {
            "description" : "The name of the schema.",
            "example" : "Built-in container monitoring rules",
            "type" : "string"
          },
          "latestSchemaVersion" : {
            "description" : "The most recent version of the schema.",
            "example" : "1.4.2",
            "type" : "string"
          },
          "schemaId" : {
            "description" : "The ID of the schema.",
            "example" : "builtin:container.built-in-monitoring-rule",
            "type" : "string"
          }
        },
        "required" : [ "displayName", "latestSchemaVersion", "schemaId" ],
        "type" : "object"
      },
      "SchemaType" : {
        "description" : "A list of definitions of types. \n\n A type is a complex property that contains its own set of subproperties.",
        "properties" : {
          "constraints" : {
            "description" : "A list of constraints limiting the values to be accepted.",
            "items" : {
              "$ref" : "#/components/schemas/ComplexConstraint"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "A short description of the property.",
            "example" : "typeDescription",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name of the property.",
            "example" : "typeDisplayName",
            "type" : "string"
          },
          "documentation" : {
            "description" : "An extended description and/or links to documentation.",
            "example" : "typeDocumentation",
            "type" : "string"
          },
          "properties" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PropertyDefinition"
            },
            "description" : "Definition of properties that can be persisted.",
            "type" : "object"
          },
          "searchPattern" : {
            "description" : "The pattern for the summary search(for example, \"Alert after *X* minutes.\") of the configuration in the UI.",
            "example" : "searchPatternOfType",
            "type" : "string"
          },
          "summaryPattern" : {
            "description" : "The pattern for the summary (for example, \"Alert after *X* minutes.\") of the configuration in the UI.",
            "example" : "summaryPatternOfType",
            "type" : "string"
          },
          "version" : {
            "description" : "The version of the type.",
            "example" : "0",
            "type" : "string"
          },
          "versionInfo" : {
            "description" : "A short description of the version.",
            "example" : "Added new property",
            "type" : "string"
          }
        },
        "required" : [ "description", "documentation", "properties", "summaryPattern", "version" ],
        "type" : "object"
      },
      "SchemasList" : {
        "properties" : {
          "versions" : {
            "description" : "A list of schema versions.",
            "items" : {
              "description" : "Extension version",
              "example" : "1.2.3",
              "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SecurityProblem" : {
        "description" : "Parameters of a security problem",
        "properties" : {
          "cveIds" : {
            "description" : "A list of CVE IDs of the security problem.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "displayId" : {
            "description" : "The display ID of the security problem.",
            "readOnly" : true,
            "type" : "string"
          },
          "externalVulnerabilityId" : {
            "description" : "The external vulnerability ID of the security problem.",
            "readOnly" : true,
            "type" : "string"
          },
          "firstSeenTimestamp" : {
            "description" : "The timestamp of the first occurrence of the security problem.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "lastUpdatedTimestamp" : {
            "description" : "The timestamp of the most recent security problem change.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "managementZones" : {
            "description" : "A list of management zones which the affected entities belong to.",
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "muted" : {
            "description" : "The security problem is (`true`) or is not (`false`) muted.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "packageName" : {
            "description" : "The package name of the security problem.",
            "readOnly" : true,
            "type" : "string"
          },
          "riskAssessment" : {
            "$ref" : "#/components/schemas/RiskAssessment"
          },
          "securityProblemId" : {
            "description" : "The ID of the security problem.",
            "readOnly" : true,
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the security problem.",
            "enum" : [ "OPEN", "RESOLVED" ],
            "readOnly" : true,
            "type" : "string"
          },
          "technology" : {
            "description" : "The technology of the security problem.",
            "enum" : [ "DOTNET", "JAVA", "KUBERNETES", "NODE_JS", "PHP" ],
            "readOnly" : true,
            "type" : "string"
          },
          "title" : {
            "description" : "The title of the security problem.",
            "readOnly" : true,
            "type" : "string"
          },
          "url" : {
            "description" : "The URL to the security problem details page.",
            "readOnly" : true,
            "type" : "string"
          },
          "vulnerabilityType" : {
            "description" : "The type of the vulnerability.",
            "enum" : [ "CODE_LEVEL", "RUNTIME", "THIRD_PARTY" ],
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SecurityProblemDetails" : {
        "description" : "Parameters of a security problem",
        "properties" : {
          "affectedEntities" : {
            "description" : "A list of affected entities of the security problem. \n\nAn affected entity is an entity where a vulnerable component runs.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "cveIds" : {
            "description" : "A list of CVE IDs of the security problem.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "description" : {
            "description" : "The description of the security problem.",
            "readOnly" : true,
            "type" : "string"
          },
          "displayId" : {
            "description" : "The display ID of the security problem.",
            "readOnly" : true,
            "type" : "string"
          },
          "events" : {
            "description" : "An ordered (newest first) list of events of the security problem.",
            "items" : {
              "$ref" : "#/components/schemas/SecurityProblemEvent"
            },
            "type" : "array"
          },
          "exposedEntities" : {
            "description" : "A list of exposed entities of the security problem. \n\nAn exposed entity is an affected entity that is exposed to the internet.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "externalVulnerabilityId" : {
            "description" : "The external vulnerability ID of the security problem.",
            "readOnly" : true,
            "type" : "string"
          },
          "firstSeenTimestamp" : {
            "description" : "The timestamp of the first occurrence of the security problem.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "lastUpdatedTimestamp" : {
            "description" : "The timestamp of the most recent security problem change.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "managementZones" : {
            "description" : "A list of management zones which the affected entities belong to.",
            "items" : {
              "$ref" : "#/components/schemas/ManagementZone"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "muteStateChangeInProgress" : {
            "description" : "If `true` a change of the mute state is in progress.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "muted" : {
            "description" : "The security problem is (`true`) or is not (`false`) muted.",
            "readOnly" : true,
            "type" : "boolean"
          },
          "packageName" : {
            "description" : "The package name of the security problem.",
            "readOnly" : true,
            "type" : "string"
          },
          "reachableDataAssets" : {
            "description" : "A list of data assets reachable by affected entities of the security problem. \n\nA data asset is a service that has database access.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "relatedAttacks" : {
            "$ref" : "#/components/schemas/RelatedAttacksList"
          },
          "relatedContainerImages" : {
            "description" : "A list of related container images of the security problem. \n\nA related container image is a container image that contains at least one *affected entity*.",
            "items" : {
              "description" : "A list of related container images.",
              "properties" : {
                "containerImages" : {
                  "description" : "A list of related container images.",
                  "items" : {
                    "$ref" : "#/components/schemas/RelatedContainerImage"
                  },
                  "readOnly" : true,
                  "type" : "array"
                }
              },
              "type" : "object"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "relatedEntities" : {
            "$ref" : "#/components/schemas/RelatedEntitiesList"
          },
          "riskAssessment" : {
            "$ref" : "#/components/schemas/RiskAssessment"
          },
          "securityProblemId" : {
            "description" : "The ID of the security problem.",
            "readOnly" : true,
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the security problem.",
            "enum" : [ "OPEN", "RESOLVED" ],
            "readOnly" : true,
            "type" : "string"
          },
          "technology" : {
            "description" : "The technology of the security problem.",
            "enum" : [ "DOTNET", "JAVA", "KUBERNETES", "NODE_JS", "PHP" ],
            "readOnly" : true,
            "type" : "string"
          },
          "title" : {
            "description" : "The title of the security problem.",
            "readOnly" : true,
            "type" : "string"
          },
          "url" : {
            "description" : "The URL to the security problem details page.",
            "readOnly" : true,
            "type" : "string"
          },
          "vulnerabilityType" : {
            "description" : "The type of the vulnerability.",
            "enum" : [ "CODE_LEVEL", "RUNTIME", "THIRD_PARTY" ],
            "readOnly" : true,
            "type" : "string"
          },
          "vulnerableComponents" : {
            "description" : "A list of vulnerable components of the security problem. \n\nA vulnerable component is what causes the security problem.",
            "items" : {
              "$ref" : "#/components/schemas/VulnerableComponent"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SecurityProblemEvent" : {
        "description" : "The event of a security problem.",
        "properties" : {
          "muteState" : {
            "$ref" : "#/components/schemas/MuteState"
          },
          "reason" : {
            "description" : "The reason of the event creation.",
            "enum" : [ "SECURITY_PROBLEM_CREATED", "SECURITY_PROBLEM_MUTED", "SECURITY_PROBLEM_REOPENED", "SECURITY_PROBLEM_RESOLVED", "SECURITY_PROBLEM_UNMUTED" ],
            "readOnly" : true,
            "type" : "string"
          },
          "riskAssessmentSnapshot" : {
            "$ref" : "#/components/schemas/RiskAssessmentSnapshot"
          },
          "timestamp" : {
            "description" : "The timestamp when the event occurred.",
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SecurityProblemEventsList" : {
        "description" : "A list of events for a security problem.",
        "properties" : {
          "events" : {
            "description" : "A list of events for a security problem.",
            "items" : {
              "$ref" : "#/components/schemas/SecurityProblemEvent"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "SecurityProblemList" : {
        "description" : "A list of security problems.",
        "properties" : {
          "nextPageKey" : {
            "description" : "The cursor for the next page of results. Has the value of `null` on the last page. \n\nUse it in the **nextPageKey** query parameter to obtain subsequent pages of the result.",
            "example" : "AQAAABQBAAAABQ==",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "The number of entries per page.",
            "format" : "int32",
            "type" : "integer"
          },
          "securityProblems" : {
            "description" : "A list of security problems.",
            "items" : {
              "$ref" : "#/components/schemas/SecurityProblem"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "totalCount" : {
            "description" : "The total number of entries in the result.",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "totalCount" ],
        "type" : "object"
      },
      "SecurityProblemMute" : {
        "description" : "Information on muting a security problem.",
        "properties" : {
          "comment" : {
            "description" : "A comment about the muting reason.",
            "type" : "string",
            "writeOnly" : true
          },
          "reason" : {
            "description" : "The reason for muting a security problem.",
            "enum" : [ "CONFIGURATION_NOT_AFFECTED", "FALSE_POSITIVE", "IGNORE", "OTHER", "VULNERABLE_CODE_NOT_IN_USE" ],
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "comment", "reason" ],
        "type" : "object"
      },
      "SecurityProblemUnmute" : {
        "description" : "Information on un-muting a security problem.",
        "properties" : {
          "comment" : {
            "description" : "A comment about the un-muting reason.",
            "type" : "string",
            "writeOnly" : true
          },
          "reason" : {
            "description" : "The reason for un-muting a security problem.",
            "enum" : [ "AFFECTED", "INITIAL_STATE" ],
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "comment", "reason" ],
        "type" : "object"
      },
      "ServiceImpact" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Impact"
        }, {
          "properties" : {
            "numberOfPotentiallyAffectedServiceCalls" : {
              "description" : "The number of potentially impacted services.",
              "format" : "int64",
              "type" : "integer"
            }
          },
          "type" : "object"
        } ],
        "description" : "Analysis of problem impact to a service.",
        "required" : [ "estimatedAffectedUsers", "impactType", "impactedEntity", "numberOfPotentiallyAffectedServiceCalls" ],
        "type" : "object"
      },
      "SettingsObject" : {
        "description" : "A settings object.",
        "properties" : {
          "author" : {
            "description" : "The user (identified by a user ID or a public token ID) who performed that most recent modification.",
            "example" : "john.doe@example.com",
            "type" : "string"
          },
          "created" : {
            "description" : "The timestamp of the creation.",
            "format" : "int64",
            "type" : "integer"
          },
          "externalId" : {
            "description" : "The external identifier of the settings object.",
            "type" : "string"
          },
          "modified" : {
            "description" : "The timestamp of the last modification.",
            "format" : "int64",
            "type" : "integer"
          },
          "objectId" : {
            "description" : "The ID of the settings object.",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=",
            "type" : "string"
          },
          "schemaId" : {
            "description" : "The schema on which the object is based.",
            "example" : "builtin:container.built-in-monitoring-rule",
            "type" : "string"
          },
          "schemaVersion" : {
            "description" : "The version of the schema on which the object is based.",
            "example" : "1.0.0",
            "type" : "string"
          },
          "scope" : {
            "description" : "The scope that the object targets.",
            "example" : "HOST-D3A3C5A146830A79",
            "type" : "string"
          },
          "summary" : {
            "description" : "A short summary of settings.",
            "type" : "string"
          },
          "updateToken" : {
            "description" : "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks.",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/SettingsValue"
          }
        },
        "type" : "object"
      },
      "SettingsObjectCreate" : {
        "description" : "Configuration of a new settings object.",
        "properties" : {
          "externalId" : {
            "description" : "External identifier for the object being created",
            "type" : "string"
          },
          "insertAfter" : {
            "description" : "The position of the new object. The new object will be added after the specified one. \n\nIf `null`, the new object will be placed in the last position. \n\nIf set to empty string, the new object will be placed in the first position. \n\nOnly applicable for objects based on schemas with ordered objects (schema's **ordered** parameter is set to `true`).",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=",
            "type" : "string"
          },
          "schemaId" : {
            "description" : "The schema on which the object is based.",
            "example" : "builtin:container.built-in-monitoring-rule",
            "type" : "string"
          },
          "schemaVersion" : {
            "description" : "The version of the schema on which the object is based.",
            "example" : "1.0.0",
            "type" : "string"
          },
          "scope" : {
            "description" : "The scope that the object targets.\n\nIf omitted on creation of a new object and if the schema supports scope generation, the operation will generate a scope from the provided value.",
            "example" : "HOST-D3A3C5A146830A79",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/SettingsValue"
          }
        },
        "required" : [ "schemaId", "value" ],
        "type" : "object"
      },
      "SettingsObjectResponse" : {
        "description" : "The response to a creation- or update-request.",
        "properties" : {
          "code" : {
            "description" : "The HTTP status code for the object.",
            "format" : "int32",
            "type" : "integer"
          },
          "error" : {
            "$ref" : "#/components/schemas/Error"
          },
          "invalidValue" : {
            "$ref" : "#/components/schemas/SettingsValue"
          },
          "objectId" : {
            "description" : "For a successful request, the ID of the created or modified settings object.",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=",
            "type" : "string"
          }
        },
        "required" : [ "code" ],
        "type" : "object"
      },
      "SettingsObjectUpdate" : {
        "description" : "An update of a settings object.",
        "properties" : {
          "schemaVersion" : {
            "description" : "The version of the schema on which the object is based.",
            "example" : "1.0.0",
            "type" : "string"
          },
          "updateToken" : {
            "description" : "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks.",
            "example" : "Y2ktaGdyb3VwLTEyMythZjhjOThlOS0wN2I0LTMyMGEtOTQzNi02NTEyMmVlNWY4NGQ=",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/SettingsValue"
          }
        },
        "required" : [ "value" ],
        "type" : "object"
      },
      "SettingsValue" : {
        "description" : "The value of the setting. \n\n It defines the actual values of settings' parameters. \n\nThe actual content depends on the object's schema.",
        "example" : {
          "autoMonitoring" : true
        },
        "type" : "object"
      },
      "SloBurnRate" : {
        "description" : "Error budget burn rate evaluation of a service-level objective (SLO).",
        "properties" : {
          "burnRateType" : {
            "description" : "The calculated burn rate type. \n\nHas a value of 'FAST', 'SLOW' or 'NONE'.",
            "enum" : [ "FAST", "NONE", "SLOW" ],
            "example" : "SLOW",
            "type" : "string"
          },
          "burnRateValue" : {
            "description" : "The burn rate of the SLO, calculated for the last hour.",
            "example" : 1.25,
            "format" : "double",
            "type" : "number"
          },
          "burnRateVisualizationEnabled" : {
            "description" : "The error budget burn rate visualization is enabled (`true`) or disabled (`false`). \n\nIn case of `false`, no calculated values will be present here.",
            "example" : true,
            "type" : "boolean"
          },
          "estimatedTimeToConsumeErrorBudget" : {
            "description" : "The estimated time left to consume the error budget in hours.",
            "example" : 24.0,
            "format" : "double",
            "type" : "number"
          },
          "fastBurnThreshold" : {
            "description" : "The threshold between a slow and a fast burn rate.",
            "example" : 1.5,
            "format" : "double",
            "type" : "number"
          },
          "sloValue" : {
            "description" : "The calculated value of the SLO for the timeframe chosen for the burn rate calculation.",
            "example" : 95.0,
            "format" : "double",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "SloBurnRateConfig" : {
        "description" : "Error budget burn rate configuration of a service-level objective (SLO).",
        "properties" : {
          "burnRateVisualizationEnabled" : {
            "description" : "The error budget burn rate visualization is enabled (`true`) or disabled (`false`). \n\nIn case of `false`, no calculated values will be present here.",
            "example" : true,
            "type" : "boolean"
          },
          "fastBurnThreshold" : {
            "description" : "The threshold between a slow and a fast burn rate.",
            "example" : 1.5,
            "format" : "double",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "SloConfigItemDtoImpl" : {
        "properties" : {
          "description" : {
            "description" : "The description of the SLO (optional).",
            "example" : "Rate of successful payments per week",
            "type" : "string"
          },
          "enabled" : {
            "description" : "The SLO is enabled (`true`) or disabled (`false`).",
            "example" : true,
            "type" : "boolean"
          },
          "errorBudgetBurnRate" : {
            "$ref" : "#/components/schemas/SloBurnRateConfig"
          },
          "evaluationType" : {
            "description" : "The evaluation type of the SLO.",
            "enum" : [ "AGGREGATE" ],
            "example" : "AGGREGATE",
            "type" : "string"
          },
          "filter" : {
            "description" : "The entity filter for the SLO evaluation. Use the [syntax of entity selector](https://dt-url.net/entityselector).",
            "example" : "type(\"SERVICE\")",
            "type" : "string"
          },
          "metricDenominator" : {
            "deprecated" : true,
            "description" : "The total count metric (the denominator in rate calculation). \n\nRequired when the **useRateMetric** is set to `false`.",
            "example" : "builtin:service.requestCount.server",
            "type" : "string"
          },
          "metricExpression" : {
            "description" : "The percentage-based metric expression for the calculation of the SLO.",
            "example" : "(100)*(builtin:service.errors.server.successCount:splitBy())/(builtin:service.requestCount.server:splitBy())",
            "type" : "string"
          },
          "metricName" : {
            "description" : "The name for a metric expression",
            "example" : "payment_service_availability",
            "type" : "string"
          },
          "metricNumerator" : {
            "deprecated" : true,
            "description" : "The metric for the count of successes (the numerator in rate calculation). \n\nRequired when the **useRateMetric** is set to `false`.",
            "example" : "builtin:service.errors.server.successCount",
            "type" : "string"
          },
          "metricRate" : {
            "deprecated" : true,
            "description" : "The percentage-based metric for the calculation of the SLO. \n\nRequired when the **useRateMetric** is set to `true`.",
            "example" : "builtin:service.successes.server.rate",
            "type" : "string"
          },
          "name" : {
            "description" : "The name of the SLO.",
            "example" : "Payment service availability",
            "type" : "string"
          },
          "target" : {
            "description" : "The target value of the SLO.",
            "example" : 95.0,
            "format" : "double",
            "type" : "number"
          },
          "timeframe" : {
            "description" : "The timeframe for the SLO evaluation. Use the syntax of the global timeframe selector.",
            "example" : "-1d",
            "type" : "string"
          },
          "useRateMetric" : {
            "deprecated" : true,
            "description" : "The type of the metric to use for SLO calculation: \n\n* `true`: An existing percentage-based metric. \n* `false`: A ratio of two metrics. \n\nFor a list of available metrics, see [Built-in metric page](https://dt-url.net/be03kow) or try the [GET metrics](https://dt-url.net/8e43kxf) API call.",
            "example" : true,
            "nullable" : true,
            "type" : "boolean"
          },
          "warning" : {
            "description" : "The warning value of the SLO. \n\n At warning state the SLO is still fulfilled but is getting close to failure.",
            "example" : 97.5,
            "format" : "double",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "SoftwareTechs" : {
        "description" : "Contains information about the used software technology.",
        "example" : [ {
          "edition" : "OpenJDK",
          "technology" : "JAVA",
          "verbatimType" : "Java",
          "version" : "1.8.0_242"
        } ],
        "properties" : {
          "edition" : {
            "description" : "The edition of the technology.",
            "example" : "OpenJDK",
            "type" : "string"
          },
          "technology" : {
            "description" : "The type of the technology.",
            "example" : "JAVA",
            "type" : "string"
          },
          "verbatimType" : {
            "description" : "The verbatim type of the technology.",
            "example" : "Java",
            "type" : "string"
          },
          "version" : {
            "description" : "The version of the technology.",
            "example" : "11.0.10",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "StatusAlert" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/AbstractSloAlertDto"
        } ],
        "description" : "Parameters of a status alert.",
        "required" : [ "alertName", "alertThreshold", "alertType" ],
        "type" : "object"
      },
      "Success" : {
        "properties" : {
          "code" : {
            "description" : "The HTTP status code",
            "format" : "int32",
            "type" : "integer"
          },
          "message" : {
            "description" : "Detailed message",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SuccessEnvelope" : {
        "properties" : {
          "details" : {
            "$ref" : "#/components/schemas/Success"
          }
        },
        "type" : "object"
      },
      "SyntheticConfigDto" : {
        "description" : "A DTO for synthetic configuration.",
        "properties" : {
          "bmMonitorTimeout" : {
            "description" : "bmMonitorTimeout - browser monitor execution timeout (ms)",
            "format" : "int64",
            "maximum" : 3600000,
            "minimum" : 60000,
            "type" : "integer"
          },
          "bmStepTimeout" : {
            "description" : "bmStepTimeout - browser monitor single step execution timeout (ms)",
            "format" : "int64",
            "maximum" : 300000,
            "minimum" : 10000,
            "type" : "integer"
          }
        },
        "required" : [ "bmMonitorTimeout", "bmStepTimeout" ],
        "type" : "object"
      },
      "SyntheticLocation" : {
        "description" : "Configuration of a synthetic location. \n\n **countryCode**, **regionCode**, **city** parameters are optional as they can be retrieved based on **latitude** and **longitude** of location.\n\n The actual set of fields depends on the type of the location. Find the list of actual objects in the description of the **type** field or see [Synthetic locations API v2 - JSON models](https://dt-url.net/3n43szj).",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "city" : {
            "description" : "The city of the location.",
            "type" : "string"
          },
          "countryCode" : {
            "description" : "The country code of the location. \n\n Use the alpha-2 code of the [ISO 3166-2 standard](https://dt-url.net/iso3166-2), (for example, `AT` for Austria or `PL` for Poland).",
            "type" : "string"
          },
          "entityId" : {
            "description" : "The Dynatrace entity ID of the location.",
            "type" : "string"
          },
          "geoLocationId" : {
            "description" : "The Dynatrace GeoLocation ID of the location.",
            "type" : "string"
          },
          "latitude" : {
            "description" : "The latitude of the location in `DDD.dddd` format.",
            "format" : "double",
            "type" : "number"
          },
          "longitude" : {
            "description" : "The longitude of the location in `DDD.dddd` format.",
            "format" : "double",
            "type" : "number"
          },
          "name" : {
            "description" : "The name of the location.",
            "type" : "string"
          },
          "regionCode" : {
            "description" : "The region code of the location. \n\n For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca) use ISO 3166-2 state codes (without `US-` or `CA-` prefix), for example, `VA` for Virginia or `OR` for Oregon. \n\n For the rest of the world use [FIPS 10-4 codes](https://dt-url.net/fipscodes).",
            "type" : "string"
          },
          "status" : {
            "description" : "The status of the location: \n\n* `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location. \n* `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location. \n* `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it.",
            "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ],
            "type" : "string"
          },
          "type" : {
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `PUBLIC` -> PublicSyntheticLocation \n* `PRIVATE` -> PrivateSyntheticLocation \n* `CLUSTER` -> PrivateSyntheticLocation \n",
            "enum" : [ "CLUSTER", "PRIVATE", "PUBLIC" ],
            "type" : "string"
          }
        },
        "required" : [ "entityId", "latitude", "longitude", "name", "type" ],
        "type" : "object"
      },
      "SyntheticLocationIdsDto" : {
        "description" : "A DTO for synthetic Location IDs.",
        "properties" : {
          "entityId" : {
            "description" : "Entity ID to be transferred",
            "type" : "string"
          },
          "geoLocationId" : {
            "description" : "GeoLocation ID to be transferred",
            "type" : "string"
          }
        },
        "required" : [ "entityId", "geoLocationId" ],
        "type" : "object"
      },
      "SyntheticLocationUpdate" : {
        "description" : "The synthetic location update. This is a base object, the exact type depends on the value of the `type` field.",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "description" : "Defines the actual set of fields depending on the value. See one of the following objects: \n\n* `PUBLIC` -> SyntheticPublicLocationUpdate \n* `PRIVATE` -> SyntheticPrivateLocationUpdate \n",
            "enum" : [ "PRIVATE", "PUBLIC" ],
            "type" : "string"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "SyntheticLocations" : {
        "description" : "A list of synthetic locations.",
        "example" : {
          "locations" : [ {
            "capabilities" : [ "BROWSER", "HTTP" ],
            "cloudPlatform" : "AMAZON_EC2",
            "entityId" : "SYNTHETIC_LOCATION-53F47ECB33907667",
            "geoLocationId" : "GEOLOCATION-95196F3C9A4F4215",
            "ips" : [ "134.189.153.97", "134.189.153.98" ],
            "name" : "Gdansk",
            "stage" : "GA",
            "status" : "ENABLED",
            "type" : "PUBLIC"
          }, {
            "entityId" : "SYNTHETIC_LOCATION-53F47ECB33907667",
            "geoLocationId" : "GEOLOCATION-95196F3C9A4F4215",
            "name" : "My private location",
            "status" : "ENABLED",
            "type" : "PRIVATE"
          } ]
        },
        "properties" : {
          "locations" : {
            "description" : "A list of synthetic locations.",
            "items" : {
              "$ref" : "#/components/schemas/LocationCollectionElement"
            },
            "type" : "array"
          }
        },
        "required" : [ "locations" ],
        "type" : "object"
      },
      "SyntheticOnDemandBatchStatus" : {
        "description" : "Contains information about on-demand executions triggered within the batch.",
        "example" : {
          "batchId" : "22396514015719218",
          "batchStatus" : "7002396514015719218",
          "executedCount" : "1",
          "failedCount" : "1",
          "failedExecutions" : [ {
            "errorCode" : "CONSTRAINT_VIOLATED(3)",
            "executionId" : "1629891693487",
            "executionStage" : "EXECUTED",
            "executionTimestamp" : "1629891695487",
            "failureMessage" : "Validate text match failed",
            "locationId" : "SYNTHETIC_LOCATION-9BB04DAEBA71B8CA",
            "monitorId" : "HTTP_CHECK-6349B98E1CD87352"
          } ],
          "failedToExecute" : [ {
            "executionId" : "478437504",
            "executionStage" : "TIMED_OUT",
            "locationId" : "SYNTHETIC_LOCATION-90380DA8A44C74BD",
            "monitorId" : "SYNTHETIC_TEST-027011D7D27CC892"
          } ],
          "failedToExecuteCount" : "1",
          "triggeredCount" : "3",
          "userId" : "admin"
        },
        "properties" : {
          "batchId" : {
            "description" : "The identifier of the batch.",
            "format" : "int64",
            "type" : "integer"
          },
          "batchStatus" : {
            "description" : "The status of the batch.",
            "enum" : [ "FAILED", "FAILED_TO_EXECUTE", "RUNNING", "SUCCESS" ],
            "type" : "string"
          },
          "executedCount" : {
            "description" : "The number of triggered executions with the result SUCCESS or FAILED.",
            "format" : "int32",
            "type" : "integer"
          },
          "failedCount" : {
            "description" : "The number of triggered executions with the result FAILED.",
            "format" : "int32",
            "type" : "integer"
          },
          "failedExecutions" : {
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandExecutionStatus"
            },
            "type" : "array"
          },
          "failedToExecute" : {
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandExecutionStatus"
            },
            "type" : "array"
          },
          "failedToExecuteCount" : {
            "description" : "The number of executions that were triggered and timed out because of a problem with the Synthetic engine.",
            "format" : "int32",
            "type" : "integer"
          },
          "triggeredCount" : {
            "description" : "The number of triggered executions within the batch.",
            "format" : "int32",
            "type" : "integer"
          },
          "userId" : {
            "description" : "The name of the user who triggered execution of the batch.",
            "type" : "string"
          }
        },
        "required" : [ "batchId", "batchStatus", "executedCount", "failedCount", "failedToExecuteCount", "triggeredCount", "userId" ],
        "type" : "object"
      },
      "SyntheticOnDemandExecution" : {
        "description" : "Describes the status of an on-demand execution.",
        "example" : {
          "batchId" : "22396514015719218",
          "dataDeliveryTimestamp" : "1629891701171",
          "executionId" : "7002396514015719218",
          "executionStage" : "DATA_RETRIEVED",
          "executionTimestamp" : "1629891695487",
          "locationId" : "SYNTHETIC_LOCATION-9BB04DAEBA71B8CA",
          "monitorId" : "HTTP_CHECK-6349B98E1CD87352",
          "schedulingTime" : "1629891686877",
          "simpleResults" : [ {
            "engineId" : "1993198092",
            "executedSteps" : "1",
            "healthStatus" : "HEALTHY",
            "hostNameResolutionTime" : "50",
            "peerCertificateExpiryDate" : "0",
            "publicLocation" : "false",
            "redirectionTime" : "576",
            "responseBodySizeLimitExceeded" : "false",
            "responseSize" : "1530652",
            "responseStatusCode" : "200",
            "startTimestamp" : "1629891693487",
            "tcpConnectTime" : "127",
            "tlsHandshakeTime" : "167",
            "totalTime" : "955"
          } ],
          "userId" : "someUserIdentifier"
        },
        "properties" : {
          "batchId" : {
            "description" : "The identifier of the batch.",
            "type" : "string"
          },
          "dataDeliveryTimestamp" : {
            "description" : "The timestamp when whole data set has been collected on server, in UTC milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "executionId" : {
            "description" : "The identifier of the execution.",
            "type" : "string"
          },
          "executionStage" : {
            "description" : "Execution stage.",
            "enum" : [ "DATA_RETRIEVED", "EXECUTED", "TIMED_OUT", "TRIGGERED" ],
            "type" : "string"
          },
          "executionTimestamp" : {
            "description" : "The timestamp when execution was finished, in UTC milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "fullResults" : {
            "$ref" : "#/components/schemas/ExecutionFullResults"
          },
          "locationId" : {
            "description" : "The identifier of the location from where the monitor is to be executed.",
            "type" : "string"
          },
          "monitorId" : {
            "description" : "The identifier of the monitor.",
            "type" : "string"
          },
          "schedulingTimestamp" : {
            "description" : "The scheduling timestamp, in UTC milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "simpleResults" : {
            "$ref" : "#/components/schemas/ExecutionSimpleResults"
          },
          "userId" : {
            "description" : "The name of the user who triggered the on-demand execution.",
            "type" : "string"
          }
        },
        "required" : [ "batchId", "dataDeliveryTimestamp", "executionId", "executionStage", "executionTimestamp", "locationId", "monitorId", "schedulingTimestamp", "userId" ],
        "type" : "object"
      },
      "SyntheticOnDemandExecutionRequest" : {
        "description" : "Contains parameters for the on-demand execution of monitors identified by tags, applications, or services.",
        "example" : {
          "failOnPerformanceIssue" : "false",
          "group" : {
            "applications" : [ "APPLICATION-CD4BEF05FA9DD044" ],
            "services" : [ "SERVICE-01C6C1282960638B", "SERVICE-B18840B4E3115C1A" ],
            "tags" : [ "tag-production", "another-tag" ]
          },
          "monitors" : [ {
            "locations" : [ "SYNTHETIC_LOCATION-9BB04DAEBA71B8CA", "SYNTHETIC_LOCATION-ACCA399FAA1194DD" ],
            "monitorId" : "HTTP_CHECK-6349B98E1CD87352"
          } ],
          "processingMode" : "EXECUTIONS_DETAILS_ONLY",
          "stopOnProblem" : "true"
        },
        "properties" : {
          "failOnPerformanceIssue" : {
            "default" : true,
            "description" : "If true, the status will be FAILED in case of performance issue.",
            "type" : "boolean"
          },
          "group" : {
            "$ref" : "#/components/schemas/SyntheticOnDemandExecutionRequestGroup"
          },
          "monitors" : {
            "description" : "List of monitors to be triggered.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandExecutionRequestMonitor"
            },
            "type" : "array"
          },
          "processingMode" : {
            "default" : "STANDARD",
            "description" : "The execution's processing mode",
            "enum" : [ "STANDARD", "DISABLE_PROBLEM_DETECTION", "EXECUTIONS_DETAILS_ONLY" ],
            "type" : "string"
          },
          "stopOnProblem" : {
            "default" : false,
            "description" : "If true, no executions will be scheduled if a problem occurs.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "SyntheticOnDemandExecutionRequestGroup" : {
        "description" : "Contains parameters for the on-demand execution of monitors identified by tags, applications, or services.",
        "properties" : {
          "applications" : {
            "description" : "List of application identifiers. Only monitors with all applications assigned will be executed.",
            "items" : {
              "description" : "List of application identifiers. Only monitors with all applications assigned will be executed.",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "locations" : {
            "description" : "The locations from where monitors are to be executed.",
            "items" : {
              "description" : "The locations from where monitors are to be executed.",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "services" : {
            "description" : "List of service identifiers. Only monitors with all services assigned will be executed.",
            "items" : {
              "description" : "List of service identifiers. Only monitors with all services assigned will be executed.",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "tags" : {
            "description" : "List of tags. Only monitors with all tags assigned will be executed.",
            "items" : {
              "description" : "List of tags. Only monitors with all tags assigned will be executed.",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "SyntheticOnDemandExecutionRequestMonitor" : {
        "description" : "Contains monitors to be executed on demand from the locations specified.",
        "properties" : {
          "locations" : {
            "description" : "The locations from where the monitor is to be executed.",
            "items" : {
              "description" : "The locations from where the monitor is to be executed.",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "monitorId" : {
            "description" : "The monitor identifier",
            "type" : "string"
          }
        },
        "required" : [ "monitorId" ],
        "type" : "object"
      },
      "SyntheticOnDemandExecutionResult" : {
        "description" : "The result of on-demand synthetic monitor execution.",
        "example" : {
          "batchId" : "22396514015719218",
          "triggered" : [ {
            "executions" : [ {
              "executionId" : "1069999568093682590",
              "locationId" : "SYNTHETIC_LOCATION-9BB04DAE11123122"
            } ],
            "monitorId" : "HTTP_CHECK-69A9B98E1CD87352"
          } ],
          "triggeredCount" : 1,
          "triggeringProblemsCount" : 4,
          "triggeringProblemsDetails" : [ {
            "cause" : "Location not found",
            "entityId" : "HTTP_CHECK-6349B98E1CD87352",
            "locationId" : "SYNTHETIC_LOCAT-9BB04DAEBA71B8CA"
          }, {
            "cause" : "Monitor not found",
            "entityId" : "HTTP_CHECK-6349B98E1CD85432"
          }, {
            "cause" : "Incorrect monitor identifier format",
            "entityId" : "HTTP_HACK-AAAAAAA"
          }, {
            "cause" : "Incorrect application identifier format",
            "entityId" : "APPLICATION-WRONG"
          } ]
        },
        "properties" : {
          "batchId" : {
            "description" : "The batch identifier of the triggered executions.",
            "type" : "string"
          },
          "triggered" : {
            "description" : "Monitors for which on-demand executions were triggered.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandTriggeredMonitor"
            },
            "type" : "array"
          },
          "triggeredCount" : {
            "description" : "The total number of the triggered executions within the batch.",
            "format" : "int32",
            "type" : "integer"
          },
          "triggeringProblemsCount" : {
            "description" : "The total number of problems within the batch.",
            "format" : "int32",
            "type" : "integer"
          },
          "triggeringProblemsDetails" : {
            "description" : "List with the entities for which triggering problems occurred.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandTriggeringProblemDetails"
            },
            "type" : "array"
          }
        },
        "required" : [ "batchId", "triggeredCount", "triggeringProblemsCount" ],
        "type" : "object"
      },
      "SyntheticOnDemandExecutionStatus" : {
        "description" : "Contains information about on-demand executions that failed or failed to be executed.",
        "example" : {
          "errorCode" : "CONSTRAINT_VIOLATED(3)",
          "executionId" : "7002396514015719218",
          "executionStage" : "DATA_RETRIEVED",
          "executionTimestamp" : "1629891695487",
          "failureMessage" : "Validate text match failed",
          "locationId" : "SYNTHETIC_LOCATION-9BB04DAEBA71B8CA",
          "monitorId" : "HTTP_CHECK-6349B98E1CD87352"
        },
        "properties" : {
          "errorCode" : {
            "type" : "string"
          },
          "executionId" : {
            "description" : "The identifier of the execution.",
            "type" : "string"
          },
          "executionStage" : {
            "description" : "Execution state.",
            "enum" : [ "DATA_RETRIEVED", "EXECUTED", "TIMED_OUT", "TRIGGERED" ],
            "type" : "string"
          },
          "executionTimestamp" : {
            "description" : "The timestamp when execution was finished, in UTC milliseconds.",
            "format" : "int64",
            "type" : "integer"
          },
          "failureMessage" : {
            "type" : "string"
          },
          "locationId" : {
            "description" : "The identifier of the location from where the monitor is to be executed.",
            "type" : "string"
          },
          "monitorId" : {
            "description" : "The identifier of the monitor.",
            "type" : "string"
          }
        },
        "required" : [ "executionId", "executionStage", "executionTimestamp", "locationId", "monitorId" ],
        "type" : "object"
      },
      "SyntheticOnDemandTriggeredExecutionDetails" : {
        "description" : "Contains details of the triggered on-demand execution.",
        "properties" : {
          "executionId" : {
            "description" : "The execution's identifier.",
            "type" : "string"
          },
          "locationId" : {
            "description" : "The identifier of the location from which the monitor is to be executed.",
            "type" : "string"
          }
        },
        "required" : [ "executionId", "locationId" ],
        "type" : "object"
      },
      "SyntheticOnDemandTriggeredMonitor" : {
        "description" : "Contains the list of on-demand executions of the monitor.",
        "properties" : {
          "executions" : {
            "description" : "The list of triggered executions.",
            "items" : {
              "$ref" : "#/components/schemas/SyntheticOnDemandTriggeredExecutionDetails"
            },
            "type" : "array"
          },
          "monitorId" : {
            "description" : "The monitor identifier.",
            "type" : "string"
          }
        },
        "required" : [ "executions", "monitorId" ],
        "type" : "object"
      },
      "SyntheticOnDemandTriggeringProblemDetails" : {
        "description" : "Contains the details of problems encountered while triggering on-demand executions.",
        "properties" : {
          "cause" : {
            "description" : "The cause of not triggering entity.",
            "type" : "string"
          },
          "entityId" : {
            "description" : "The entity identifier.",
            "type" : "string"
          },
          "locationId" : {
            "description" : "The location identifier.",
            "type" : "string"
          }
        },
        "required" : [ "cause", "entityId" ],
        "type" : "object"
      },
      "SyntheticPrivateLocationUpdate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocationUpdate"
        }, {
          "properties" : {
            "autoUpdateChromium" : {
              "description" : "Auto upgrade of Chromium is enabled (`true`) or disabled (`false`).",
              "type" : "boolean"
            },
            "availabilityLocationOutage" : {
              "description" : "The alerting of location outage is enabled (`true`) or disabled (`false`).",
              "type" : "boolean"
            },
            "availabilityNodeOutage" : {
              "description" : "The alerting of node outage is enabled (`true`) or disabled (`false`). \n\n If enabled, the outage of *any* node in the location triggers an alert.",
              "type" : "boolean"
            },
            "availabilityNotificationsEnabled" : {
              "description" : "The notifications of location and node outage is enabled (`true`) or disabled (`false`).",
              "type" : "boolean"
            },
            "city" : {
              "description" : "The city of the location.",
              "type" : "string"
            },
            "countryCode" : {
              "description" : "The country code of the location. \n\n Use the alpha-2 code of the [ISO 3166-2 standard](https://dt-url.net/iso3166-2), (for example, `AT` for Austria or `PL` for Poland).",
              "type" : "string"
            },
            "latitude" : {
              "description" : "The latitude of the location in `DDD.dddd` format.",
              "format" : "double",
              "type" : "number"
            },
            "locationNodeOutageDelayInMinutes" : {
              "description" : "Alert if the location or node outage lasts longer than *X* minutes. \n\n Only applicable when **availabilityLocationOutage** or **availabilityNodeOutage** is set to `true`.",
              "format" : "int32",
              "maximum" : 5,
              "minimum" : 1,
              "type" : "integer"
            },
            "longitude" : {
              "description" : "The longitude of the location in `DDD.dddd` format.",
              "format" : "double",
              "type" : "number"
            },
            "name" : {
              "description" : "The name of the location.",
              "type" : "string"
            },
            "nodes" : {
              "description" : "A list of synthetic nodes belonging to the location. \n\n You can retrieve the list of available nodes with the [GET all nodes](https://dt-url.net/miy3rpl) call.",
              "items" : {
                "type" : "string"
              },
              "type" : "array"
            },
            "regionCode" : {
              "description" : "The region code of the location. \n\n For the [USA](https://dt-url.net/iso3166us) or [Canada](https://dt-url.net/iso3166ca) use ISO 3166-2 state codes (without `US-` or `CA-` prefix), for example, `VA` for Virginia or `OR` for Oregon. \n\n For the rest of the world use [FIPS 10-4 codes](https://dt-url.net/fipscodes).",
              "type" : "string"
            },
            "status" : {
              "description" : "The status of the location: \n\n* `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location. \n* `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location. \n* `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it.",
              "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ],
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "Configuration of a private synthetic location",
        "required" : [ "latitude", "longitude", "name", "nodes", "type" ],
        "type" : "object"
      },
      "SyntheticPublicLocationUpdate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SyntheticLocationUpdate"
        }, {
          "properties" : {
            "status" : {
              "description" : "The status of the location: \n\n* `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location. \n* `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location. \n* `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it.",
              "enum" : [ "DISABLED", "ENABLED", "HIDDEN" ],
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "The update of a public Synthetic location.",
        "required" : [ "status", "type" ],
        "type" : "object"
      },
      "SyntheticPublicLocationsStatus" : {
        "description" : "The status of public synthetic locations.",
        "properties" : {
          "publicLocationsEnabled" : {
            "description" : "Synthetic monitors can (`true`) or can't (`false`) run on public synthetic locations.",
            "type" : "boolean"
          }
        },
        "required" : [ "publicLocationsEnabled" ],
        "type" : "object"
      },
      "TenantToken" : {
        "description" : "Tenant token",
        "properties" : {
          "value" : {
            "description" : "The secret of the tenant token.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TenantTokenConfig" : {
        "description" : "Configuration of a [tenant token](https://dt-url.net/b403ss9).",
        "properties" : {
          "active" : {
            "$ref" : "#/components/schemas/TenantToken"
          },
          "old" : {
            "$ref" : "#/components/schemas/TenantToken"
          }
        },
        "type" : "object"
      },
      "ToPosition" : {
        "description" : "The TO position of a relationship.",
        "properties" : {
          "id" : {
            "description" : "The ID of the relationship.",
            "type" : "string"
          },
          "toTypes" : {
            "description" : "A list of monitored entity types that can occupy the TO position.",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "TokenPosition" : {
        "properties" : {
          "end" : {
            "$ref" : "#/components/schemas/PositionInfo"
          },
          "start" : {
            "$ref" : "#/components/schemas/PositionInfo"
          }
        },
        "type" : "object"
      },
      "TransactionalEvidence" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Evidence"
        }, {
          "properties" : {
            "endTime" : {
              "description" : "The end time of the evidence, in UTC milliseconds",
              "format" : "int64",
              "type" : "integer"
            },
            "unit" : {
              "description" : "The unit of the metric.",
              "type" : "string"
            },
            "valueAfterChangePoint" : {
              "description" : "The metric's value after the problem start.",
              "format" : "float",
              "type" : "number"
            },
            "valueBeforeChangePoint" : {
              "description" : "The metric's value before the problem start.",
              "format" : "float",
              "type" : "number"
            }
          },
          "type" : "object"
        } ],
        "description" : "The transactional evidence of the problem. \n\nA behavior of a metric in an transaction that indicates the problem and/or is its root cause.",
        "required" : [ "displayName", "endTime", "entity", "evidenceType", "rootCauseRelevant", "startTime", "unit", "valueAfterChangePoint", "valueBeforeChangePoint" ],
        "type" : "object"
      },
      "TruncatableListAttackRequestHeader" : {
        "description" : "A list of values that has possibly been truncated.",
        "properties" : {
          "truncationInfo" : {
            "$ref" : "#/components/schemas/TruncationInfo"
          },
          "values" : {
            "description" : "Values of the list.",
            "items" : {
              "$ref" : "#/components/schemas/AttackRequestHeader"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "TruncatableListEntrypointPayload" : {
        "description" : "A list of values that has possibly been truncated.",
        "properties" : {
          "truncationInfo" : {
            "$ref" : "#/components/schemas/TruncationInfo"
          },
          "values" : {
            "description" : "Values of the list.",
            "items" : {
              "$ref" : "#/components/schemas/EntrypointPayload"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "TruncatableListHttpRequestParameter" : {
        "description" : "A list of values that has possibly been truncated.",
        "properties" : {
          "truncationInfo" : {
            "$ref" : "#/components/schemas/TruncationInfo"
          },
          "values" : {
            "description" : "Values of the list.",
            "items" : {
              "$ref" : "#/components/schemas/HttpRequestParameter"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "TruncatableListString" : {
        "description" : "A list of values that has possibly been truncated.",
        "properties" : {
          "truncationInfo" : {
            "$ref" : "#/components/schemas/TruncationInfo"
          },
          "values" : {
            "description" : "Values of the list.",
            "items" : {
              "description" : "Values of the list.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "TruncationInfo" : {
        "description" : "Information on a possible truncation.",
        "properties" : {
          "truncated" : {
            "description" : "If the list/value has been truncated.",
            "readOnly" : true,
            "type" : "boolean"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "UAAvailabilityDefinition" : {
        "description" : "Describe the availability card in a Unified Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "defaultValue" : {
            "description" : "The value that replaces missing values",
            "format" : "int32",
            "type" : "integer"
          },
          "displayName" : {
            "description" : "The optional display name shown in the header of the card",
            "type" : "string"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "entitySelector" : {
            "description" : "The entity selector used as the scope for the metric",
            "type" : "string"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "metricSelector" : {
            "description" : "The metric selector used to gather data",
            "type" : "string"
          },
          "showSummary" : {
            "description" : "The option that determines if availability summary in percent is visible",
            "type" : "boolean"
          },
          "thresholds" : {
            "description" : "A set of thresholds",
            "items" : {
              "$ref" : "#/components/schemas/UAAvailabilityThreshold"
            },
            "type" : "array"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UAAvailabilityThreshold" : {
        "description" : "Availability chart threshold",
        "properties" : {
          "color" : {
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "value" : {
            "format" : "int32",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "UABreadcrumb" : {
        "description" : "Defines a breadcrumbs element.",
        "properties" : {
          "parameters" : {
            "additionalProperties" : {
              "description" : "parameters for breadcrumb render",
              "type" : "object"
            },
            "description" : "parameters for breadcrumb render",
            "type" : "object"
          },
          "type" : {
            "description" : "Breadcrumb type",
            "enum" : [ "ENTITY_LIST_REF", "ENTITY_REF", "NOOP", "STATIC_LINK" ],
            "type" : "string"
          }
        },
        "required" : [ "parameters", "type" ],
        "type" : "object"
      },
      "UABreadcrumbsDefinition" : {
        "description" : "Configuration for the breadcrumbs for a Unified Entity Analysis screen",
        "properties" : {
          "hideDefault" : {
            "description" : "Hide the default breadcrumb",
            "type" : "boolean"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "items" : {
            "description" : "List of breadcrumbs definitions",
            "items" : {
              "$ref" : "#/components/schemas/UABreadcrumb"
            },
            "type" : "array"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "UABreakLine" : {
        "description" : "Break line to manipulate placement of half cards in layout",
        "properties" : {
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "UAChartDefinition" : {
        "description" : "Describe the charts in a Unified Entity Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "aggregations" : {
            "$ref" : "#/components/schemas/UIChartAggregations"
          },
          "axes" : {
            "$ref" : "#/components/schemas/Axes"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "connectGaps" : {
            "description" : "When true, gaps in charts will be connected even if there is truly no data",
            "type" : "boolean"
          },
          "defaultAggregation" : {
            "description" : "Default aggregation",
            "enum" : [ "auto", "avg", "count", "max", "median", "min", "percentile", "sum", "value" ],
            "type" : "string"
          },
          "displayName" : {
            "description" : "Name of chart",
            "type" : "string"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "metricSelectors" : {
            "description" : "List of metric selectors",
            "items" : {
              "description" : "List of metric selectors",
              "type" : "string"
            },
            "type" : "array"
          },
          "predefined" : {
            "description" : "Is the chart predefined",
            "type" : "boolean"
          },
          "showSparkline" : {
            "description" : "Switch to show sparkline option for SingleValue visualization",
            "type" : "boolean"
          },
          "showTrend" : {
            "description" : "Switch to show trend option for SingleValue visualization",
            "type" : "boolean"
          },
          "stacked" : {
            "description" : "Is the chart stacked",
            "type" : "boolean"
          },
          "visualizationGlobalProperties" : {
            "$ref" : "#/components/schemas/VisualizationGlobalProperties"
          },
          "visualizationRules" : {
            "description" : "Rules for Visualization",
            "items" : {
              "$ref" : "#/components/schemas/VisualizationRule"
            },
            "type" : "array"
          },
          "visualizationType" : {
            "description" : "Visualization type of the chart",
            "enum" : [ "GRAPH_CHART", "HEATMAP", "HONEYCOMB", "PIE_CHART", "SINGLE_VALUE", "STACKED_AREA", "STACKED_COLUMN", "TABLE", "TOP_LIST" ],
            "type" : "string"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "displayName", "elementGenerationError", "id", "metricSelectors", "predefined", "showSparkline", "showTrend", "stacked", "visualizationGlobalProperties", "visualizationRules", "visualizationType" ],
        "type" : "object"
      },
      "UAChartGroupDefinition" : {
        "description" : "Describe a collection of charts that belong to a entity type",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "charts" : {
            "description" : "All charts of the chart group",
            "items" : {
              "$ref" : "#/components/schemas/UAChartDefinition"
            },
            "type" : "array"
          },
          "chartsInRow" : {
            "description" : "Optional number of charts in a row",
            "format" : "int32",
            "type" : "integer"
          },
          "chartsToDisplay" : {
            "description" : "Number of charts to display",
            "format" : "int32",
            "type" : "integer"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "displayName" : {
            "description" : "Name of chart group",
            "type" : "string"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "charts", "displayName", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UAColumnChartDefinition" : {
        "description" : "Describe the charts in a Unified Analysis screen list card",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "aggregations" : {
            "$ref" : "#/components/schemas/UIChartAggregations"
          },
          "axes" : {
            "$ref" : "#/components/schemas/Axes"
          },
          "chartAsColumn" : {
            "description" : "When true, metric of that chart will generate table columns",
            "type" : "boolean"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "connectGaps" : {
            "description" : "When true, gaps in charts will be connected even if there is truly no data",
            "type" : "boolean"
          },
          "defaultAggregation" : {
            "description" : "Default aggregation",
            "enum" : [ "auto", "avg", "count", "max", "median", "min", "percentile", "sum", "value" ],
            "type" : "string"
          },
          "detailedChart" : {
            "description" : "When true, chart will be available in the expanded row of the entry in the table",
            "type" : "boolean"
          },
          "displayName" : {
            "description" : "Name of chart",
            "type" : "string"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "metricSelectors" : {
            "description" : "List of metric selectors",
            "items" : {
              "$ref" : "#/components/schemas/UAColumnSelectors"
            },
            "type" : "array"
          },
          "predefined" : {
            "description" : "Is the chart predefined",
            "type" : "boolean"
          },
          "showSparkline" : {
            "description" : "Switch to show sparkline option for SingleValue visualization",
            "type" : "boolean"
          },
          "showTrend" : {
            "description" : "Switch to show trend option for SingleValue visualization",
            "type" : "boolean"
          },
          "stacked" : {
            "description" : "Is the chart stacked",
            "type" : "boolean"
          },
          "visualizationGlobalProperties" : {
            "$ref" : "#/components/schemas/VisualizationGlobalProperties"
          },
          "visualizationRules" : {
            "description" : "Rules for Visualization",
            "items" : {
              "$ref" : "#/components/schemas/VisualizationRule"
            },
            "type" : "array"
          },
          "visualizationType" : {
            "description" : "Visualization type of the chart",
            "enum" : [ "GRAPH_CHART", "HEATMAP", "HONEYCOMB", "PIE_CHART", "SINGLE_VALUE", "STACKED_AREA", "STACKED_COLUMN", "TABLE", "TOP_LIST" ],
            "type" : "string"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "displayName", "elementGenerationError", "id", "metricSelectors", "predefined", "showSparkline", "showTrend", "stacked", "visualizationGlobalProperties", "visualizationRules", "visualizationType" ],
        "type" : "object"
      },
      "UAColumnSelectors" : {
        "description" : "Metric selectors for the entity list columns",
        "properties" : {
          "listMetricSelectorByEntities" : {
            "description" : "The metric selector used to request data for current table page",
            "type" : "string"
          },
          "listMetricSelectorByMetrics" : {
            "description" : "The metric selector used to sort data in the table",
            "type" : "string"
          },
          "mainSelector" : {
            "description" : "The main metric selector. Used to aggregate data from all entities",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UACustomColumnDefinition" : {
        "description" : "Describe a single custom column in the entities list",
        "properties" : {
          "data" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "dataSourceName" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          }
        },
        "required" : [ "data", "dataSourceName" ],
        "type" : "object"
      },
      "UADataTableDescription" : {
        "description" : "Definition of data table description",
        "properties" : {
          "actions" : {
            "description" : "All actions defined in markdown",
            "items" : {
              "$ref" : "#/components/schemas/Action"
            },
            "type" : "array"
          },
          "text" : {
            "description" : "Markdown text of description",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UAElementState" : {
        "description" : "Represent the client side state of a single screen element",
        "properties" : {
          "elementId" : {
            "type" : "string"
          },
          "elementState" : {
            "type" : "string"
          }
        },
        "required" : [ "elementId", "elementState" ],
        "type" : "object"
      },
      "UAEmptyState" : {
        "description" : "Empty state definition",
        "properties" : {
          "actions" : {
            "description" : "All actions defined in empty state definition",
            "items" : {
              "$ref" : "#/components/schemas/Action"
            },
            "type" : "array"
          },
          "body" : {
            "description" : "Empty state message body",
            "type" : "string"
          },
          "header" : {
            "description" : "Empty state message header",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UAEntityFilter" : {
        "description" : "Defines a filter for entity filtering",
        "properties" : {
          "defaultSearch" : {
            "description" : "If free text filter is used as a default search",
            "type" : "boolean"
          },
          "displayName" : {
            "description" : "Display name of the filter",
            "type" : "string"
          },
          "distinct" : {
            "description" : "If filter is distinct - there can be only 1 instance of this filter",
            "type" : "boolean"
          },
          "entityTypes" : {
            "description" : "List of filter entity types",
            "items" : {
              "description" : "List of filter entity types",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "freeText" : {
            "description" : "If true - user can type any text as value of the filter, if false - user can select one of suggestions",
            "type" : "boolean"
          },
          "hidden" : {
            "description" : "If filter is hidden - filter will not be shown",
            "type" : "boolean"
          },
          "isFreeText" : {
            "type" : "boolean",
            "writeOnly" : true
          },
          "modifier" : {
            "description" : "Modifier of free text filter",
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the filter",
            "type" : "string"
          }
        },
        "required" : [ "entityTypes", "type" ],
        "type" : "object"
      },
      "UAEntityFilterGroup" : {
        "description" : "Defines a group of filters for entity filtering",
        "properties" : {
          "displayName" : {
            "description" : "Display name of the group",
            "type" : "string"
          },
          "filters" : {
            "description" : "List of filters in the group",
            "items" : {
              "$ref" : "#/components/schemas/UAEntityFilter"
            },
            "type" : "array"
          }
        },
        "required" : [ "displayName", "filters" ],
        "type" : "object"
      },
      "UAEntityFilteringDefinition" : {
        "description" : "Describe how the entity filtering should work",
        "properties" : {
          "entityFilterGroups" : {
            "description" : "List of entity filter groups",
            "items" : {
              "$ref" : "#/components/schemas/UAEntityFilterGroup"
            },
            "type" : "array"
          },
          "relationships" : {
            "description" : "List of relationships between filters and main entity type",
            "items" : {
              "$ref" : "#/components/schemas/UARelationship"
            },
            "type" : "array"
          }
        },
        "required" : [ "entityFilterGroups", "relationships" ],
        "type" : "object"
      },
      "UAEntityList" : {
        "description" : "Describe the entities list in a Unified Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "charts" : {
            "description" : "The List of charts displayed above the entities list",
            "items" : {
              "$ref" : "#/components/schemas/UAColumnChartDefinition"
            },
            "type" : "array"
          },
          "chartsToDisplay" : {
            "description" : "The number of charts to display",
            "format" : "int32",
            "type" : "integer"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "customColumns" : {
            "description" : "Description of custom columns",
            "items" : {
              "$ref" : "#/components/schemas/UACustomColumnDefinition"
            },
            "type" : "array"
          },
          "description" : {
            "$ref" : "#/components/schemas/UADataTableDescription"
          },
          "dimensionKey" : {
            "description" : "The dimension key of entity type",
            "type" : "string"
          },
          "displayCharts" : {
            "description" : "If true, it displays charts above the list",
            "type" : "boolean"
          },
          "displayIcons" : {
            "description" : "If true, entity icon will be displayed in the name column",
            "type" : "boolean"
          },
          "displayName" : {
            "description" : "The title of the card",
            "type" : "string"
          },
          "displayProblemImpactWidget" : {
            "description" : "If true, problem impact widget will be displayed above the list",
            "type" : "boolean"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "emptyState" : {
            "$ref" : "#/components/schemas/UAEmptyState"
          },
          "enableDetailsExpandability" : {
            "description" : "If true, details section with charts per entity is available",
            "type" : "boolean"
          },
          "entitySelector" : {
            "description" : "The entity selector used to request entities",
            "type" : "string"
          },
          "filtering" : {
            "$ref" : "#/components/schemas/UAFilterBarDefinition"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "initialSorting" : {
            "$ref" : "#/components/schemas/UAInitialSorting"
          },
          "limit" : {
            "description" : "the maximum number of entities to fetch",
            "format" : "int32",
            "type" : "integer"
          },
          "pageSize" : {
            "description" : "The number of entities on one page",
            "format" : "int32",
            "type" : "integer"
          },
          "tableEntryActions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UAEntityProperty" : {
        "description" : "Describe a single property in the properties tile",
        "properties" : {
          "displayAmount" : {
            "type" : "boolean"
          },
          "displayName" : {
            "type" : "string"
          },
          "entitySelector" : {
            "type" : "string"
          },
          "fallbackMessage" : {
            "type" : "string"
          },
          "groupName" : {
            "type" : "string"
          },
          "hidden" : {
            "type" : "boolean"
          },
          "propertyName" : {
            "type" : "string"
          },
          "propertyType" : {
            "enum" : [ "ATTRIBUTE", "RELATION" ],
            "type" : "string"
          },
          "relationMeType" : {
            "type" : "string"
          },
          "unit" : {
            "type" : "string"
          }
        },
        "required" : [ "propertyType" ],
        "type" : "object"
      },
      "UAEntityScreenDefinition" : {
        "description" : "Definitions needed to render a Unified Entity Analysis screen for a given me type",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "availabilityCards" : {
            "description" : "List of definitions how render availabilityCard on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UAAvailabilityDefinition"
            },
            "type" : "array"
          },
          "breadcrumbs" : {
            "$ref" : "#/components/schemas/UABreadcrumbsDefinition"
          },
          "breakLines" : {
            "description" : "List of break lines",
            "items" : {
              "$ref" : "#/components/schemas/UABreakLine"
            },
            "type" : "array"
          },
          "chartGroups" : {
            "description" : "List of definitions how render charts on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UAChartGroupDefinition"
            },
            "type" : "array"
          },
          "dimensionKey" : {
            "description" : "Dimension key of entity type",
            "type" : "string"
          },
          "entitiesLists" : {
            "description" : "List of definitions how render entities lists on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UAEntityList"
            },
            "type" : "array"
          },
          "eventsCard" : {
            "description" : "List of definitions how render eventsCard on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UAEventsCard"
            },
            "type" : "array"
          },
          "filter" : {
            "$ref" : "#/components/schemas/UAFilterBarDefinition"
          },
          "genericMeType" : {
            "description" : "The generic ME Type of this screen",
            "type" : "string"
          },
          "globalMessages" : {
            "description" : "List of global messages",
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "header" : {
            "$ref" : "#/components/schemas/UAHeader"
          },
          "logsCard" : {
            "description" : "List of definitions how render logsCard on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UALogsCard"
            },
            "type" : "array"
          },
          "markerContextList" : {
            "description" : "List of marker context instances",
            "items" : {
              "$ref" : "#/components/schemas/UAMarkerContext"
            },
            "type" : "array"
          },
          "meSubType" : {
            "description" : "The me subtype of this screen",
            "type" : "string"
          },
          "messageCard" : {
            "description" : "List of message cards on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UAMessageCard"
            },
            "type" : "array"
          },
          "metricTables" : {
            "description" : "List of definitions how render metric tables on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UAMetricTable"
            },
            "type" : "array"
          },
          "metricsMetadata" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetricDescriptor"
            },
            "description" : "Definitions of all metrics used on screen",
            "type" : "object"
          },
          "optOut" : {
            "$ref" : "#/components/schemas/UAOptOutDefinition"
          },
          "problems" : {
            "$ref" : "#/components/schemas/UAProblemDefinition"
          },
          "properties" : {
            "$ref" : "#/components/schemas/UAPropertiesDefinition"
          },
          "screenElementsOrder" : {
            "description" : "Defines the order of all non static screen elements",
            "items" : {
              "description" : "Defines the order of all non static screen elements",
              "type" : "string"
            },
            "type" : "array"
          },
          "screenState" : {
            "$ref" : "#/components/schemas/UAScreenState"
          },
          "tags" : {
            "$ref" : "#/components/schemas/UATagsDefinition"
          },
          "traces" : {
            "description" : "List of definitions how to render distributed traces cards on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UATracesDefinition"
            },
            "type" : "array"
          },
          "vulnerabilities" : {
            "$ref" : "#/components/schemas/UAVulnerabilitiesDefinition"
          }
        },
        "required" : [ "actions", "availabilityCards", "breakLines", "chartGroups", "dimensionKey", "entitiesLists", "eventsCard", "genericMeType", "globalMessages", "logsCard", "markerContextList", "messageCard", "metricTables", "metricsMetadata", "screenElementsOrder", "traces" ],
        "type" : "object"
      },
      "UAEventsCard" : {
        "description" : "Describe the events card in a Unified Entity Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "displayName" : {
            "description" : "The optional display name shown in the header of the card",
            "type" : "string"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "entitySelectors" : {
            "description" : "The entity selectors used to request entities",
            "items" : {
              "description" : "The entity selectors used to request entities",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "eventSelector" : {
            "description" : "The event selector used to request entities",
            "type" : "string"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "Page size",
            "format" : "int32",
            "type" : "integer"
          },
          "showFiltering" : {
            "description" : "enable/disable filter field",
            "type" : "boolean"
          },
          "showPagination" : {
            "description" : "enable/disable pagination bar",
            "type" : "boolean"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UAFilterBarDefinition" : {
        "description" : "Describe the filtering for a Unified Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "entityFilter" : {
            "$ref" : "#/components/schemas/UAEntityFilteringDefinition"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UAHeader" : {
        "description" : "Describe list screen header",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "UAInitialSorting" : {
        "description" : "Initial sorting definition",
        "properties" : {
          "columnId" : {
            "description" : "Initial sorting column ID",
            "type" : "string"
          },
          "order" : {
            "description" : "Initial sorting order",
            "enum" : [ "ASCENDING", "DESCENDING" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UAListScreenDefinition" : {
        "description" : "Definitions needed to render a Unified Analysis list screen for a given me type",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "breadcrumbs" : {
            "$ref" : "#/components/schemas/UABreadcrumbsDefinition"
          },
          "breakLines" : {
            "description" : "List of break lines",
            "items" : {
              "$ref" : "#/components/schemas/UABreakLine"
            },
            "type" : "array"
          },
          "chartGroups" : {
            "description" : "List of definitions how render charts on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UAChartGroupDefinition"
            },
            "type" : "array"
          },
          "entitiesLists" : {
            "description" : "List of definitions how render entities lists on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UAEntityList"
            },
            "type" : "array"
          },
          "eventsCard" : {
            "description" : "List of definitions how render eventsCard on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UAEventsCard"
            },
            "type" : "array"
          },
          "filter" : {
            "$ref" : "#/components/schemas/UAFilterBarDefinition"
          },
          "globalMessages" : {
            "description" : "List of global messages",
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "header" : {
            "$ref" : "#/components/schemas/UAHeader"
          },
          "logsCard" : {
            "description" : "List of definitions how render logsCard on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UALogsCard"
            },
            "type" : "array"
          },
          "messageCard" : {
            "description" : "List of message cards on the screen",
            "items" : {
              "$ref" : "#/components/schemas/UAMessageCard"
            },
            "type" : "array"
          },
          "metricsMetadata" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetricDescriptor"
            },
            "description" : "Definitions of all metrics used on screen",
            "type" : "object"
          },
          "optOut" : {
            "$ref" : "#/components/schemas/UAOptOutDefinition"
          },
          "screenElementsOrder" : {
            "description" : "Defines the order of all non static screen elements",
            "items" : {
              "description" : "Defines the order of all non static screen elements",
              "type" : "string"
            },
            "type" : "array"
          },
          "screenState" : {
            "$ref" : "#/components/schemas/UAScreenState"
          }
        },
        "required" : [ "actions", "breakLines", "chartGroups", "entitiesLists", "eventsCard", "globalMessages", "logsCard", "messageCard", "metricsMetadata", "screenElementsOrder" ],
        "type" : "object"
      },
      "UALogsCard" : {
        "description" : "Describe the logs card in a Unified Entity Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "displayName" : {
            "description" : "The optional display name shown in the header of the card",
            "type" : "string"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "entitySelectors" : {
            "description" : "The entity selectors used to request entities",
            "items" : {
              "description" : "The entity selectors used to request entities",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "filterQuery" : {
            "description" : "The filter used to prefilter log data using Dynatrace search query language",
            "type" : "string"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "pageSize" : {
            "description" : "Page size",
            "format" : "int32",
            "type" : "integer"
          },
          "showFiltering" : {
            "description" : "enable/disable filter field",
            "type" : "boolean"
          },
          "showPagination" : {
            "description" : "enable/disable pagination bar",
            "type" : "boolean"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UAMarkerContext" : {
        "description" : "Provides all markers for a given marker context",
        "properties" : {
          "contextParameter" : {
            "description" : "The marker context parameter that was used for this object",
            "type" : "string"
          },
          "entityMarkers" : {
            "additionalProperties" : {
              "description" : "All EntityMarker objects for this context",
              "items" : {
                "$ref" : "#/components/schemas/EntityMarker"
              },
              "type" : "array"
            },
            "description" : "All EntityMarker objects for this context",
            "type" : "object"
          },
          "eventMarkers" : {
            "additionalProperties" : {
              "description" : "All EventMarker objects for this context",
              "items" : {
                "$ref" : "#/components/schemas/EventMarker"
              },
              "type" : "array"
            },
            "description" : "All EventMarker objects for this context",
            "type" : "object"
          },
          "metricMarkers" : {
            "additionalProperties" : {
              "description" : "All MetricMarker objects for this context",
              "items" : {
                "$ref" : "#/components/schemas/MetricMarker"
              },
              "type" : "array"
            },
            "description" : "All MetricMarker objects for this context",
            "type" : "object"
          },
          "name" : {
            "type" : "string"
          },
          "screenMarkerContextOverview" : {
            "$ref" : "#/components/schemas/UAScreenMarkerContextOverview"
          },
          "serviceName" : {
            "description" : "The name of the MarkerContextService that create this object",
            "type" : "string"
          }
        },
        "required" : [ "contextParameter", "entityMarkers", "eventMarkers", "metricMarkers", "serviceName" ],
        "type" : "object"
      },
      "UAMessage" : {
        "description" : "Represent the erros, warning, info messages",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "messageType" : {
            "enum" : [ "ERROR", "INFO", "WARNING" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UAMessageBannerOptions" : {
        "description" : "Message card - message visualization type",
        "properties" : {
          "color" : {
            "enum" : [ "ERROR", "INFO", "WARNING" ],
            "type" : "string"
          },
          "markdownActions" : {
            "items" : {
              "$ref" : "#/components/schemas/Action"
            },
            "type" : "array"
          },
          "text" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UAMessageButton" : {
        "description" : "A message card button",
        "properties" : {
          "actionId" : {
            "type" : "string"
          },
          "color" : {
            "enum" : [ "PRIMARY", "SECONDARY" ],
            "type" : "string"
          },
          "text" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UAMessageCard" : {
        "description" : "Describe the message card in a Unified Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "card" : {
            "$ref" : "#/components/schemas/UAMessageCardOptions"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "message" : {
            "$ref" : "#/components/schemas/UAMessageBannerOptions"
          },
          "showOnTop" : {
            "type" : "boolean"
          },
          "type" : {
            "enum" : [ "CARD", "MESSAGE" ],
            "type" : "string"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UAMessageCardOptions" : {
        "description" : "Message card - card visualization type",
        "properties" : {
          "buttonActions" : {
            "items" : {
              "$ref" : "#/components/schemas/Action"
            },
            "type" : "array"
          },
          "buttons" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessageButton"
            },
            "type" : "array"
          },
          "icon" : {
            "type" : "string"
          },
          "markdownActions" : {
            "items" : {
              "$ref" : "#/components/schemas/Action"
            },
            "type" : "array"
          },
          "text" : {
            "type" : "string"
          },
          "theme" : {
            "enum" : [ "CTA", "MAIN", "WARNING" ],
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UAMetricTable" : {
        "description" : "Describe the entities list in a Unified Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "charts" : {
            "description" : "The List of charts displayed above the table and define the table columns",
            "items" : {
              "$ref" : "#/components/schemas/UAColumnChartDefinition"
            },
            "type" : "array"
          },
          "chartsToDisplay" : {
            "description" : "The number of charts to display",
            "format" : "int32",
            "type" : "integer"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "description" : {
            "$ref" : "#/components/schemas/UADataTableDescription"
          },
          "dimensionKey" : {
            "description" : "The dimension key to attach entity selector",
            "type" : "string"
          },
          "displayCharts" : {
            "description" : "If true, it displays charts above the list",
            "type" : "boolean"
          },
          "displayName" : {
            "description" : "The title of the card",
            "type" : "string"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "emptyState" : {
            "$ref" : "#/components/schemas/UAEmptyState"
          },
          "enableDetailsExpandability" : {
            "description" : "If true, details section with charts per row is available",
            "type" : "boolean"
          },
          "entitySelector" : {
            "description" : "The entity selector used to filter metric data",
            "type" : "string"
          },
          "filtering" : {
            "$ref" : "#/components/schemas/UAFilterBarDefinition"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "initialSorting" : {
            "$ref" : "#/components/schemas/UAInitialSorting"
          },
          "pageSize" : {
            "description" : "The number of entities on one page",
            "format" : "int32",
            "type" : "integer"
          },
          "tableEntryActions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UAOptOutDefinition" : {
        "description" : "Describe the opt-out banner for a Unified Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "feedbackUrl" : {
            "description" : "The URL to feedback form",
            "type" : "string"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "optOutUserVariable" : {
            "description" : "The user variable key to persist opt-out choice. If null, switch is not displayed",
            "type" : "string"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UAProblemDefinition" : {
        "description" : "Describe the properties elements for a Unified Entity Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "entitySelectors" : {
            "description" : "The entity selectors used to request entities",
            "items" : {
              "description" : "The entity selectors used to request entities",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UAPropertiesDefinition" : {
        "description" : "Describe the properties elements for the Unified Entity Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "displayOnlyConfigured" : {
            "description" : "Enable/disable displaying only configured properties",
            "type" : "boolean"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "properties" : {
            "description" : "List of configured properties",
            "items" : {
              "$ref" : "#/components/schemas/UAEntityProperty"
            },
            "type" : "array"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "id", "properties" ],
        "type" : "object"
      },
      "UARelationship" : {
        "description" : "Defines a relationship for entity filtering",
        "properties" : {
          "destinationEntityType" : {
            "description" : "Destination entity type of relationship",
            "type" : "string"
          },
          "relationshipType" : {
            "description" : "Relationship type",
            "type" : "string"
          },
          "sourceEntityType" : {
            "description" : "Source entity type of relationship",
            "type" : "string"
          }
        },
        "required" : [ "destinationEntityType", "relationshipType", "sourceEntityType" ],
        "type" : "object"
      },
      "UAReleasedEntity" : {
        "description" : "Provides an information if Unified Analysis screen for given entity is released",
        "properties" : {
          "entityReleased" : {
            "description" : "Is the entity released",
            "type" : "boolean"
          }
        },
        "required" : [ "entityReleased" ],
        "type" : "object"
      },
      "UAReleasedEntityTypes" : {
        "description" : "Provides a list of released Unified Analysis screens by entity type",
        "properties" : {
          "releasedEntityTypes" : {
            "description" : "List of released entity types",
            "items" : {
              "description" : "List of released entity types",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "releasedEntityTypesPerSubType" : {
            "description" : "List of released entity types per sub-type",
            "items" : {
              "description" : "List of released entity types per sub-type",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "releasedListEntityTypes" : {
            "description" : "List of entity types with released tenant-wide list",
            "items" : {
              "description" : "List of entity types with released tenant-wide list",
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "releasedEntityTypes", "releasedEntityTypesPerSubType", "releasedListEntityTypes" ],
        "type" : "object"
      },
      "UAScreenMarkerContextOverview" : {
        "description" : "Defines a screen marker context overview card",
        "properties" : {
          "buttonActions" : {
            "description" : "List of action actions visible in card header.",
            "items" : {
              "$ref" : "#/components/schemas/Action"
            },
            "type" : "array"
          },
          "description" : {
            "description" : "Markdown description capable of displaying links and icons. Uses UA markdown syntax",
            "type" : "string"
          },
          "iconName" : {
            "description" : "Barista name of the icon displayed in top left corner of the overview card",
            "type" : "string"
          },
          "iconType" : {
            "description" : "Icon type. Determines severity of marker context.",
            "enum" : [ "CRITICAL", "INFO" ],
            "type" : "string"
          },
          "markdownActions" : {
            "description" : "List of action actions visible in markdown text.",
            "items" : {
              "$ref" : "#/components/schemas/Action"
            },
            "type" : "array"
          },
          "summary" : {
            "description" : "Summary text displayed in the title of the card",
            "type" : "string"
          }
        },
        "required" : [ "buttonActions", "iconName", "iconType", "markdownActions", "summary" ],
        "type" : "object"
      },
      "UAScreenState" : {
        "description" : "Represent the client side state of a UA Screen",
        "properties" : {
          "elementStates" : {
            "items" : {
              "$ref" : "#/components/schemas/UAElementState"
            },
            "type" : "array"
          }
        },
        "required" : [ "elementStates" ],
        "type" : "object"
      },
      "UATagsDefinition" : {
        "description" : "Describe the tags element for a Unified Entity Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "entitySelectors" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "showAddTag" : {
            "description" : "Show/hide button to add new tag",
            "type" : "boolean"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "entitySelectors", "id" ],
        "type" : "object"
      },
      "UATracesDefinition" : {
        "description" : "Traces that belong to an entity type",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "displayName" : {
            "description" : "Name of trace card",
            "type" : "string"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "emptyStateMessage" : {
            "description" : "Empty state message",
            "type" : "string"
          },
          "entitySelector" : {
            "description" : "The entity selector used to request traces",
            "type" : "string"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "displayName", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UAVulnerabilitiesDefinition" : {
        "description" : "Describes the vulnerabilities element for a Unified Analysis screen",
        "properties" : {
          "actions" : {
            "$ref" : "#/components/schemas/ActionDefinition"
          },
          "collapsed" : {
            "description" : "An option that defines if card is collapsed by default",
            "type" : "boolean"
          },
          "elementGenerationError" : {
            "items" : {
              "$ref" : "#/components/schemas/UAMessage"
            },
            "type" : "array"
          },
          "id" : {
            "description" : "A unique id for the element. This id is constant between execution",
            "type" : "string"
          },
          "width" : {
            "description" : "An optional card width of this element",
            "enum" : [ "FULL_SIZE", "HALF_SIZE" ],
            "type" : "string"
          }
        },
        "required" : [ "actions", "elementGenerationError", "id" ],
        "type" : "object"
      },
      "UIChartAggregations" : {
        "description" : "Describe all possible aggregations a chart can have",
        "properties" : {
          "defaultAggregation" : {
            "description" : "Default aggregation",
            "enum" : [ "auto", "avg", "count", "max", "median", "min", "percentile", "sum", "value" ],
            "type" : "string"
          },
          "defaultPercentile" : {
            "description" : "Default percentile",
            "format" : "int32",
            "type" : "integer"
          },
          "possibleAggregations" : {
            "description" : "All possible aggregations for the chart",
            "items" : {
              "description" : "All possible aggregations for the chart",
              "enum" : [ "auto", "avg", "count", "max", "median", "min", "percentile", "sum", "value" ],
              "type" : "string"
            },
            "type" : "array"
          },
          "possiblePercentile" : {
            "format" : "int32",
            "type" : "integer",
            "writeOnly" : true
          },
          "possiblePercentiles" : {
            "description" : "All possible percentile aggregation for the chart",
            "items" : {
              "description" : "All possible percentile aggregation for the chart",
              "format" : "int32",
              "type" : "integer"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UiCustomization" : {
        "description" : "Customization for UI elements",
        "properties" : {
          "expandable" : {
            "$ref" : "#/components/schemas/UiExpandableCustomization"
          },
          "table" : {
            "$ref" : "#/components/schemas/UiTableCustomization"
          }
        },
        "type" : "object"
      },
      "UiExpandableCustomization" : {
        "description" : "UI customization for expandable section",
        "properties" : {
          "displayName" : {
            "description" : "The display name",
            "type" : "string"
          },
          "sections" : {
            "description" : "A list of sections",
            "items" : {
              "$ref" : "#/components/schemas/UiExpandableSectionCustomization"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UiExpandableSectionCustomization" : {
        "description" : "Expandable section customization for UI",
        "properties" : {
          "description" : {
            "description" : "The description",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name",
            "type" : "string"
          },
          "properties" : {
            "description" : "A list of properties",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "displayName", "properties" ],
        "type" : "object"
      },
      "UiTableColumnCustomization" : {
        "description" : "Customization for UI table columns",
        "properties" : {
          "builtinColumnRef" : {
            "description" : "The ui specific builtin column-implementation for this column.",
            "example" : "summary",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name for this column.",
            "example" : "Color",
            "type" : "string"
          },
          "propertyRef" : {
            "description" : "The referenced property for this column.",
            "example" : "apiColor",
            "type" : "string"
          },
          "type" : {
            "description" : "The ui specific type for this column.",
            "example" : "cell-color-picker",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UiTableCustomization" : {
        "description" : "Customization for UI tables",
        "properties" : {
          "columns" : {
            "description" : "A list of columns for the UI table",
            "items" : {
              "$ref" : "#/components/schemas/UiTableColumnCustomization"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Unit" : {
        "description" : "The metadata of a unit.",
        "example" : {
          "description" : "The second is the base unit of time and defined as 1/86400 of a day.",
          "displayName" : "second",
          "displayNamePlural" : "seconds",
          "symbol" : "s",
          "unitId" : "Second"
        },
        "properties" : {
          "description" : {
            "description" : "A short description of the unit.",
            "type" : "string"
          },
          "displayName" : {
            "description" : "The display name of the unit.",
            "type" : "string"
          },
          "displayNamePlural" : {
            "description" : "The plural display name of the unit.",
            "type" : "string"
          },
          "symbol" : {
            "description" : "The symbol of the unit.",
            "type" : "string"
          },
          "unitId" : {
            "description" : "The ID of the unit.",
            "type" : "string"
          }
        },
        "required" : [ "unitId" ],
        "type" : "object"
      },
      "UnitConversionResult" : {
        "description" : "The result of a unit conversion.",
        "properties" : {
          "resultValue" : {
            "description" : "The result of the unit conversion.",
            "format" : "double",
            "type" : "number"
          },
          "unitId" : {
            "description" : "The ID of the unit of this conversion result.",
            "type" : "string"
          }
        },
        "required" : [ "resultValue", "unitId" ],
        "type" : "object"
      },
      "UnitList" : {
        "description" : "A list of units along with their properties.",
        "example" : {
          "totalCount" : 2,
          "units" : [ {
            "description" : "byte per second",
            "displayName" : "byte per second",
            "displayNamePlural" : "bytes per second",
            "symbol" : "B/s",
            "unitId" : "BytePerSecond"
          }, {
            "description" : "byte per minute",
            "displayName" : "byte per minute",
            "displayNamePlural" : "bytes per minute",
            "symbol" : "B/min",
            "unitId" : "BytePerMinute"
          } ]
        },
        "properties" : {
          "totalCount" : {
            "description" : "The total number of units in the result.",
            "format" : "int64",
            "type" : "integer"
          },
          "units" : {
            "description" : "A list of units.",
            "items" : {
              "$ref" : "#/components/schemas/Unit"
            },
            "type" : "array"
          }
        },
        "required" : [ "totalCount", "units" ],
        "type" : "object"
      },
      "UpdateJob" : {
        "description" : "Configuration of the ActiveGate update job.",
        "properties" : {
          "agType" : {
            "description" : "The type of the ActiveGate.",
            "enum" : [ "CLUSTER", "ENVIRONMENT", "ENVIRONMENT_MULTI" ],
            "example" : "ENVIRONMENT",
            "readOnly" : true,
            "type" : "string"
          },
          "cancelable" : {
            "description" : "The job can (`true`) or can't (`false`) be cancelled at the moment.",
            "example" : false,
            "readOnly" : true,
            "type" : "boolean"
          },
          "duration" : {
            "description" : "The duration of the update, in milliseconds.",
            "example" : 3608000,
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "environments" : {
            "description" : "A list of environments (specified by IDs) the ActiveGate can connect to.",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "error" : {
            "description" : "The information about update error.",
            "readOnly" : true,
            "type" : "string"
          },
          "jobId" : {
            "description" : "The ID of the update job.",
            "example" : "-3524498778810258605",
            "readOnly" : true,
            "type" : "string"
          },
          "jobState" : {
            "description" : "The status of the update job.",
            "enum" : [ "FAILED", "IN_PROGRESS", "PENDING", "ROLLBACK", "SCHEDULED", "SKIPPED", "SUCCEED" ],
            "example" : "SUCCEED",
            "readOnly" : true,
            "type" : "string"
          },
          "startVersion" : {
            "description" : "The initial version of the ActiveGate.",
            "example" : "1.185.0.20200201-120000",
            "readOnly" : true,
            "type" : "string"
          },
          "targetVersion" : {
            "description" : "The target version of the update. \n\nSpecify the version in the `<major>.<minor>.<revision>.<timestamp>` format. \n\nTo update to the latest available version, use the `latest` value.",
            "example" : "1.190.0.20200301-130000",
            "type" : "string"
          },
          "timestamp" : {
            "description" : "The timestamp of the update job completion. \n\n The `null` value means the job is still running.",
            "example" : 1582031917814,
            "format" : "int64",
            "readOnly" : true,
            "type" : "integer"
          },
          "updateMethod" : {
            "description" : "The method of updating the ActiveGate or its component.",
            "enum" : [ "AUTOMATIC", "MANUAL_INSTALLATION", "ON_DEMAND" ],
            "example" : "AUTOMATIC",
            "readOnly" : true,
            "type" : "string"
          },
          "updateType" : {
            "description" : "The component to be updated.",
            "enum" : [ "ACTIVE_GATE", "REMOTE_PLUGIN_AGENT", "SYNTHETIC", "Z_REMOTE" ],
            "example" : "ACTIVE_GATE",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "targetVersion" ],
        "type" : "object"
      },
      "UpdateJobList" : {
        "description" : "A list of update jobs of the ActiveGate.",
        "properties" : {
          "agId" : {
            "description" : "The ID of the ActiveGate.",
            "example" : "0x3efdd092",
            "readOnly" : true,
            "type" : "string"
          },
          "updateJobs" : {
            "description" : "A list of update jobs of the ActiveGate.",
            "items" : {
              "$ref" : "#/components/schemas/UpdateJob"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "UpdateJobsAll" : {
        "description" : "A list of ActiveGates with update jobs.",
        "properties" : {
          "allUpdateJobs" : {
            "description" : "A list of ActiveGates with update jobs.",
            "items" : {
              "$ref" : "#/components/schemas/UpdateJobList"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "VisualizationGlobalProperties" : {
        "description" : "Visualization global configuration",
        "properties" : {
          "hasTrendline" : {
            "type" : "boolean"
          },
          "hideLegend" : {
            "type" : "boolean"
          },
          "seriesType" : {
            "enum" : [ "AREA", "COLUMN", "LINE", "STACKED_AREA", "STACKED_COLUMN" ],
            "type" : "string"
          },
          "theme" : {
            "enum" : [ "BLUE", "DEFAULT", "GREEN", "ORANGE", "PURPLE", "RED", "ROYALBLUE", "TURQUOISE", "YELLOW" ],
            "type" : "string"
          },
          "threshold" : {
            "$ref" : "#/components/schemas/VisualizationThreshold"
          }
        },
        "type" : "object"
      },
      "VisualizationProperties" : {
        "properties" : {
          "alias" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "seriesType" : {
            "enum" : [ "AREA", "COLUMN", "LINE", "STACKED_AREA", "STACKED_COLUMN" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VisualizationRule" : {
        "description" : "Rules for Visualization",
        "properties" : {
          "matcher" : {
            "type" : "string"
          },
          "properties" : {
            "$ref" : "#/components/schemas/VisualizationProperties"
          },
          "seriesOverrides" : {
            "items" : {
              "$ref" : "#/components/schemas/VisualizationSerieOverride"
            },
            "type" : "array"
          },
          "unitTransform" : {
            "type" : "string"
          },
          "valueFormat" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VisualizationSerieOverride" : {
        "properties" : {
          "color" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VisualizationThreshold" : {
        "properties" : {
          "axisTarget" : {
            "enum" : [ "LEFT", "RIGHT" ],
            "type" : "string"
          },
          "columnId" : {
            "type" : "string"
          },
          "queryId" : {
            "type" : "string"
          },
          "rules" : {
            "items" : {
              "$ref" : "#/components/schemas/VisualizationThresholdRule"
            },
            "type" : "array"
          },
          "visible" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "VisualizationThresholdRule" : {
        "properties" : {
          "color" : {
            "type" : "string"
          },
          "value" : {
            "format" : "double",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "Vulnerability" : {
        "description" : "Describes the exploited vulnerability.",
        "properties" : {
          "codeLocation" : {
            "$ref" : "#/components/schemas/CodeLocation"
          },
          "displayName" : {
            "description" : "The display name of the vulnerability.",
            "readOnly" : true,
            "type" : "string"
          },
          "vulnerabilityId" : {
            "description" : "The id of the vulnerability.",
            "readOnly" : true,
            "type" : "string"
          },
          "vulnerableFunction" : {
            "$ref" : "#/components/schemas/FunctionDefinition"
          },
          "vulnerableFunctionInput" : {
            "$ref" : "#/components/schemas/VulnerableFunctionInput"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "VulnerableComponent" : {
        "description" : "Vulnerable component of a security problem.",
        "properties" : {
          "affectedEntities" : {
            "description" : "A list of affected entities.",
            "items" : {
              "description" : "A list of affected entities.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "displayName" : {
            "description" : "The display name of the vulnerable component.",
            "readOnly" : true,
            "type" : "string"
          },
          "fileName" : {
            "description" : "The file name of the vulnerable component.",
            "readOnly" : true,
            "type" : "string"
          },
          "id" : {
            "description" : "The Dynatrace entity ID of the vulnerable component.",
            "readOnly" : true,
            "type" : "string"
          },
          "numberOfAffectedEntities" : {
            "description" : "The number of affected entities.",
            "format" : "int32",
            "readOnly" : true,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "VulnerableFunction" : {
        "description" : "Defines an vulnerable function.",
        "properties" : {
          "className" : {
            "description" : "The class name of the vulnerable function.",
            "readOnly" : true,
            "type" : "string"
          },
          "filePath" : {
            "description" : "The file path of the vulnerable function.",
            "readOnly" : true,
            "type" : "string"
          },
          "functionName" : {
            "description" : "The function name of the vulnerable function.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "VulnerableFunctionInput" : {
        "description" : "Describes what got passed into the code level vulnerability.",
        "properties" : {
          "inputSegments" : {
            "description" : "A list of input segments.",
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunctionInputSegment"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "type" : {
            "description" : "The type of the input.",
            "enum" : [ "COMMAND", "JNDI", "SQL_STATEMENT" ],
            "readOnly" : true,
            "type" : "string"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "VulnerableFunctionInputSegment" : {
        "description" : "Describes one segment that was passed into a vulnerable function.",
        "properties" : {
          "type" : {
            "description" : "The type of the input segment.",
            "enum" : [ "MALICIOUS_INPUT", "REGULAR_INPUT", "TAINTED_INPUT" ],
            "readOnly" : true,
            "type" : "string"
          },
          "value" : {
            "description" : "The value of the input segment.",
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VulnerableFunctionProcessGroups" : {
        "description" : "A vulnerable function including its usage by specific process groups in context of the security problem.",
        "properties" : {
          "function" : {
            "$ref" : "#/components/schemas/VulnerableFunction"
          },
          "processGroupsInUse" : {
            "description" : "The process group identifiers, where this vulnerable function is in use.",
            "items" : {
              "description" : "The process group identifiers, where this vulnerable function is in use.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "processGroupsNotAvailable" : {
            "description" : "The process group identifiers, where information about the usage of this function not available.",
            "items" : {
              "description" : "The process group identifiers, where information about the usage of this function not available.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "processGroupsNotInUse" : {
            "description" : "The process group identifiers, where this vulnerable function is not in use.",
            "items" : {
              "description" : "The process group identifiers, where this vulnerable function is not in use.",
              "readOnly" : true,
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array",
            "uniqueItems" : true
          },
          "usage" : {
            "description" : "The vulnerable function usage based on the given process groups:\n* IN_USE if at least one process group calls this vulnerable function.\n* NOT_IN_USE if all process groups do not call this vulnerable function.\n* NOT_AVAILABLE if vulnerable function usage could not be calculated for at least one process group and no process group calls this vulnerable function.",
            "enum" : [ "IN_USE", "NOT_AVAILABLE", "NOT_IN_USE" ],
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VulnerableFunctionsContainer" : {
        "description" : "A list of vulnerable functions, their security problem wide usages and their usages per process group.\nOptional: A list of vulnerable function usages per process group for a security problem.",
        "properties" : {
          "vulnerableFunctions" : {
            "description" : "A list of vulnerable functions, their security problem wide usages and their usages per process group.",
            "items" : {
              "$ref" : "#/components/schemas/VulnerableFunctionProcessGroups"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "vulnerableFunctionsByProcessGroup" : {
            "description" : "A list of vulnerable function usages per process group for a security problem.\nThe result is sorted based on the following criteria: \n* the number of vulnerable functions in use (descending).\n* the number of vulnerable functions not in use (descending).\n* the number of vulnerable functions not available (descending).\n* the process group identifier (ascending)",
            "items" : {
              "$ref" : "#/components/schemas/ProcessGroupVulnerableFunctions"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "YAxis" : {
        "description" : "y Axes configuration",
        "properties" : {
          "defaultAxis" : {
            "type" : "boolean"
          },
          "displayName" : {
            "type" : "string"
          },
          "max" : {
            "type" : "string"
          },
          "min" : {
            "type" : "string"
          },
          "position" : {
            "enum" : [ "LEFT", "RIGHT" ],
            "type" : "string"
          },
          "queryIds" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "visible" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "Api-Token" : {
        "description" : "Dynatrace API Token\n\n The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.",
        "in" : "header",
        "name" : "Authorization",
        "type" : "apiKey"
      },
      "OAuth" : {
        "description" : "Dynatrace OAuth\n\n A Bearer token is passed in the **Authorization** header in the following format: `Authorization: Bearer abcdefjhij1234567890`.",
        "flows" : {
          "clientCredentials" : {
            "scopes" : {
              "environment-api" : "Environment API",
              "environment-api:activegate-tokens:create" : "Create ActiveGate tokens",
              "environment-api:activegate-tokens:read" : "Read ActiveGate tokens",
              "environment-api:activegate-tokens:write" : "Write ActiveGate tokens",
              "environment-api:api-tokens:read" : "Read API tokens",
              "environment-api:api-tokens:write" : "Write API tokens",
              "environment-api:audit-logs:read" : "Read audit logs",
              "environment-api:network-zones:read" : "Read network zones",
              "environment-api:network-zones:write" : "Write network zones",
              "environment-api:problems:read" : "Read problems",
              "environment-api:problems:write" : "Write problems",
              "environment-api:releases:read" : "Read releases",
              "environment-api:slo:read" : "Read SLOs",
              "environment-api:slo:write" : "Write SLOs",
              "environment-api:tenant-token-rotation:write" : "Rotate Tenant token",
              "storage:events:write" : "Write events",
              "storage:logs:write" : "Write logs",
              "storage:metrics:write" : "Write metrics"
            }
          }
        },
        "type" : "oauth2"
      }
    }
  },
  "info" : {
    "description" : "\nDocumentation of the Dynatrace Environment API v2. Resources here generally supersede those in v1. Migration of resources from v1 is in progress. \n\nIf you miss a resource, consider using the Dynatrace Environment API v1. To read about use cases and examples, see [Dynatrace Documentation](https://dt-url.net/2u23k1k) .\n\nNotes about compatibility:\n* Operations marked as early adopter or preview may be changed in non-compatible ways, although we try to avoid this.\n* We may add new enum constants without incrementing the API version; thus, clients need to handle unknown enum constants gracefully.",
    "title" : "Dynatrace Environment API",
    "version" : "2.0"
  },
  "openapi" : "3.0.1",
  "paths" : {
    "/activeGateTokens" : {
      "get" : {
        "description" : "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "listTokens",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of ActiveGate tokens in a single response payload. \n\nThe maximal allowed page size is 3000 and the minimal size is 100. \n\nIf not set, 100 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateTokenList"
                }
              }
            },
            "description" : "Success. The response contains the list of ActiveGate tokens."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:activegate-tokens:read" ]
        } ],
        "summary" : "Lists all available ActiveGate tokens",
        "tags" : [ "Access Tokens - ActiveGate tokens" ],
        "x-feature-flag" : "AG_TOKEN_MANAGEMENT_API",
        "x-internal-owner" : "bahram.parsapour, stefan.smiljkovic",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`activeGateTokenManagement.read` (Read ActiveGate tokens)" ]
      },
      "post" : {
        "description" : "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
        "operationId" : "createToken",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActiveGateTokenCreate"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new ActiveGate token.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateTokenCreated"
                }
              }
            },
            "description" : "Success. The token has been created. The body of the response contains the token secret."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:activegate-tokens:create", "environment-api:activegate-tokens:write" ]
        } ],
        "summary" : "Creates a new ActiveGate token",
        "tags" : [ "Access Tokens - ActiveGate tokens" ],
        "x-feature-flag" : "AG_TOKEN_MANAGEMENT_API",
        "x-internal-owner" : "bahram.parsapour, stefan.smiljkovic",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`activeGateTokenManagement.create` (Create ActiveGate tokens)", "`activeGateTokenManagement.write` (Write ActiveGate tokens)" ]
      }
    },
    "/activeGateTokens/{activeGateTokenIdentifier}" : {
      "delete" : {
        "operationId" : "revokeToken",
        "parameters" : [ {
          "description" : "The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token to be deleted.",
          "in" : "path",
          "name" : "activeGateTokenIdentifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:activegate-tokens:write" ]
        } ],
        "summary" : "Deletes an ActiveGate token",
        "tags" : [ "Access Tokens - ActiveGate tokens" ],
        "x-feature-flag" : "AG_TOKEN_MANAGEMENT_API",
        "x-internal-owner" : "bahram.parsapour, stefan.smiljkovic",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`activeGateTokenManagement.write` (Write ActiveGate tokens)" ]
      },
      "get" : {
        "description" : "The token secret is **not** exposed.",
        "operationId" : "getToken",
        "parameters" : [ {
          "description" : "The ActiveGate token identifier, consisting of [prefix and public part](https://dt-url.net/2903ss4) of the token.",
          "in" : "path",
          "name" : "activeGateTokenIdentifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateToken"
                }
              }
            },
            "description" : "Success. The response contains the metadata of the tokens."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:activegate-tokens:read" ]
        } ],
        "summary" : "Gets metadata of an ActiveGate token",
        "tags" : [ "Access Tokens - ActiveGate tokens" ],
        "x-feature-flag" : "AG_TOKEN_MANAGEMENT_API",
        "x-internal-owner" : "bahram.parsapour, stefan.smiljkovic",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`activeGateTokenManagement.read` (Read ActiveGate tokens)" ]
      }
    },
    "/activeGates" : {
      "get" : {
        "description" : "The response includes all ActiveGates that are currently connected to the environment or have been connected during last 2 hours.",
        "operationId" : "getAllActiveGates",
        "parameters" : [ {
          "description" : "Filters the resulting set of ActiveGates by the name of the host it's running on. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used.",
          "in" : "query",
          "name" : "hostname",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the OS type of the host it's running on.",
          "in" : "query",
          "name" : "osType",
          "schema" : {
            "enum" : [ "LINUX", "WINDOWS" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the network address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used.",
          "in" : "query",
          "name" : "networkAddress",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the Load Balancer address. \n\n You can specify a partial address. In that case, the `CONTAINS` operator is used.",
          "in" : "query",
          "name" : "loadBalancerAddress",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the ActiveGate type.",
          "in" : "query",
          "name" : "type",
          "schema" : {
            "enum" : [ "ENVIRONMENT", "ENVIRONMENT_MULTI" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the network zone. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used.",
          "in" : "query",
          "name" : "networkZone",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the auto-update status.",
          "in" : "query",
          "name" : "updateStatus",
          "schema" : {
            "enum" : [ "INCOMPATIBLE", "OUTDATED", "SCHEDULED", "SUPPRESSED", "UNKNOWN", "UP2DATE", "UPDATE_IN_PROGRESS", "UPDATE_PENDING", "UPDATE_PROBLEM" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the comparison operator here.",
          "in" : "query",
          "name" : "versionCompareType",
          "schema" : {
            "default" : "EQUAL",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the specified version. \n\n Specify the version in `<major>.<minor>.<revision>` format (for example, `1.195.0`) here.",
          "in" : "query",
          "name" : "version",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the actual state of auto-update.",
          "in" : "query",
          "name" : "autoUpdate",
          "schema" : {
            "enum" : [ "DISABLED", "ENABLED" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the group. \n\n You can specify a partial name. In that case, the `CONTAINS` operator is used.",
          "in" : "query",
          "name" : "group",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the communication status.",
          "in" : "query",
          "name" : "online",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the enabled modules.",
          "in" : "query",
          "name" : "enabledModule",
          "schema" : {
            "items" : {
              "enum" : [ "AWS", "AZURE", "BEACON_FORWARDER", "CLOUD_FOUNDRY", "DB_INSIGHT", "EXTENSIONS_V1", "EXTENSIONS_V2", "KUBERNETES", "LOGS", "MEMORY_DUMPS", "METRIC_API", "ONE_AGENT_ROUTING", "OTLP_INGEST", "REST_API", "SYNTHETIC", "VMWARE", "Z_OS" ],
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates by the disabled modules.",
          "in" : "query",
          "name" : "disabledModule",
          "schema" : {
            "items" : {
              "enum" : [ "AWS", "AZURE", "BEACON_FORWARDER", "CLOUD_FOUNDRY", "DB_INSIGHT", "EXTENSIONS_V1", "EXTENSIONS_V2", "KUBERNETES", "LOGS", "MEMORY_DUMPS", "METRIC_API", "ONE_AGENT_ROUTING", "OTLP_INGEST", "REST_API", "SYNTHETIC", "VMWARE", "Z_OS" ],
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Filters the resulting set of ActiveGates to those which are running in container (`true`) or not (`false`).",
          "in" : "query",
          "name" : "containerized",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateList"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Lists all available ActiveGates",
        "tags" : [ "ActiveGates" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.read` (Read ActiveGates)" ]
      }
    },
    "/activeGates/autoUpdate" : {
      "get" : {
        "operationId" : "getGlobalAutoUpdateConfigForTenant",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateGlobalAutoUpdateConfig"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the global auto-update configuration of environment ActiveGates.",
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.read` (Read ActiveGates)" ]
      },
      "put" : {
        "operationId" : "putGlobalAutoUpdateConfigForTenant",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActiveGateGlobalAutoUpdateConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing global auto update parameters.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The global auto-update configuration have been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Puts the global auto-update configuration of environment ActiveGates.",
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.write` (Write ActiveGates)" ]
      }
    },
    "/activeGates/autoUpdate/validator" : {
      "post" : {
        "operationId" : "validateGlobalAutoUpdateConfigForTenant",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActiveGateGlobalAutoUpdateConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing global auto update parameters.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /activeGates/autoUpdate` request.",
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.write` (Write ActiveGates)" ]
      }
    },
    "/activeGates/tokenEnforcement" : {
      "get" : {
        "operationId" : "getTokenEnforcement",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateTokenEnforcement"
                }
              }
            },
            "description" : "Success. The response contains the status of ActiveGate tokens enforcement"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the status of ActiveGate tokens enforcement",
        "tags" : [ "ActiveGates - ActiveGate tokens enforcement" ],
        "x-feature-flag" : "AG_TOKEN_MANAGEMENT_API",
        "x-internal-owner" : "bahram.parsapour, stefan.smiljkovic",
        "x-maturity" : "EARLY_ADOPTER",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.read` (Read ActiveGates)" ]
      }
    },
    "/activeGates/updateJobs" : {
      "get" : {
        "description" : "The response includes ActiveGates that have both completed (successful and failed) jobs and jobs in progress.",
        "operationId" : "getAllUpdateJobList",
        "parameters" : [ {
          "description" : "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one day is used (`now-1d`). \n\nMaximum timeframe is 31 days.",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here.",
          "in" : "query",
          "name" : "startVersionCompareType",
          "schema" : {
            "default" : "EQUAL",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`).",
          "in" : "query",
          "name" : "startVersion",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of update-jobs by the update type.",
          "example" : "ACTIVE_GATE",
          "in" : "query",
          "name" : "updateType",
          "schema" : {
            "enum" : [ "ACTIVE_GATE", "REMOTE_PLUGIN_AGENT", "SYNTHETIC", "Z_REMOTE" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here.",
          "in" : "query",
          "name" : "targetVersionCompareType",
          "schema" : {
            "default" : "EQUAL",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`).",
          "in" : "query",
          "name" : "targetVersion",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If `true`, filters the resulting set of update jobs to the most recent update of each type.",
          "in" : "query",
          "name" : "lastUpdates",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateJobsAll"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "List ActiveGates with update jobs",
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.read` (Read ActiveGates)" ]
      }
    },
    "/activeGates/{agId}" : {
      "get" : {
        "operationId" : "getOneActiveGateById",
        "parameters" : [ {
          "description" : "The ID of the required ActiveGate.",
          "in" : "path",
          "name" : "agId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGate"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found. See response body for details."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets the details of the specified ActiveGate",
        "tags" : [ "ActiveGates" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.read` (Read ActiveGates)" ]
      }
    },
    "/activeGates/{agId}/autoUpdate" : {
      "get" : {
        "operationId" : "getAutoUpdateConfigById",
        "parameters" : [ {
          "description" : "The ID of the required ActiveGate.",
          "in" : "path",
          "name" : "agId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActiveGateAutoUpdateConfig"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found. See response body for details."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration of auto-update for the specified ActiveGate",
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.read` (Read ActiveGates)" ]
      },
      "put" : {
        "operationId" : "putAutoUpdateConfigById",
        "parameters" : [ {
          "description" : "The ID of the required ActiveGate.",
          "in" : "path",
          "name" : "agId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActiveGateAutoUpdateConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing auto update parameters.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The auto-update configuration have been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the configuration of auto-update for the specified ActiveGate",
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.write` (Write ActiveGates)" ]
      }
    },
    "/activeGates/{agId}/autoUpdate/validator" : {
      "post" : {
        "operationId" : "validateAutoUpdateConfigById",
        "parameters" : [ {
          "description" : "The ID of the required ActiveGate.",
          "in" : "path",
          "name" : "agId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ActiveGateAutoUpdateConfig"
              }
            }
          },
          "description" : "JSON body of the request, containing auto update parameters.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted auto-update configuration is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /activeGates/{agId}/autoUpdate` request.",
        "tags" : [ "ActiveGates - Auto-update configuration" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.write` (Write ActiveGates)" ]
      }
    },
    "/activeGates/{agId}/updateJobs" : {
      "get" : {
        "description" : "The job can update the ActiveGate to the specified version or the latest available one.",
        "operationId" : "getUpdateJobListByAgId",
        "parameters" : [ {
          "description" : "The ID of the required ActiveGate.",
          "in" : "path",
          "name" : "agId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of one week is used (`now-1w`). \n\nMaximum timeframe is 31 days.",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe for update jobs. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of update jobs by the specified initial version. \n\n Specify the comparison operator here.",
          "in" : "query",
          "name" : "startVersionCompareType",
          "schema" : {
            "default" : "EQUAL",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of update-jobs by the initial version (required format `<major>.<minor>.<revision>`).",
          "in" : "query",
          "name" : "startVersion",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of update-jobs by the update type.",
          "example" : "ACTIVE_GATE",
          "in" : "query",
          "name" : "updateType",
          "schema" : {
            "enum" : [ "ACTIVE_GATE", "REMOTE_PLUGIN_AGENT", "SYNTHETIC", "Z_REMOTE" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of update jobs by the specified target version. \n\n Specify the comparison operator here.",
          "in" : "query",
          "name" : "targetVersionCompareType",
          "schema" : {
            "default" : "EQUAL",
            "enum" : [ "EQUAL", "GREATER", "GREATER_EQUAL", "LOWER", "LOWER_EQUAL" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of update-jobs by the target version (required format `<major>.<minor>.<revision>`).",
          "in" : "query",
          "name" : "targetVersion",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If `true`, filters the resulting set of update jobs to the most recent update of each type.",
          "in" : "query",
          "name" : "lastUpdates",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateJobList"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found. See response body for details."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists update jobs for the specified ActiveGate",
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.read` (Read ActiveGates)" ]
      },
      "post" : {
        "operationId" : "createUpdateJobForAg",
        "parameters" : [ {
          "description" : "The ID of the required ActiveGate.",
          "in" : "path",
          "name" : "agId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateJob"
              }
            }
          },
          "description" : "JSON body of the request, containing update-job parameters.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateJob"
                }
              }
            },
            "description" : "Success. The update-job have been created."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new update job for the specified ActiveGate",
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.write` (Write ActiveGates)" ]
      }
    },
    "/activeGates/{agId}/updateJobs/validator" : {
      "post" : {
        "operationId" : "validateUpdateJobForAg",
        "parameters" : [ {
          "description" : "The ID of the required ActiveGate.",
          "in" : "path",
          "name" : "agId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateJob"
              }
            }
          },
          "description" : "JSON body of the request, containing update-job parameters.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Validated. The submitted update-job is valid. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Validates the payload for the `POST /activeGates/{agId}/updateJobs` request.",
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.write` (Write ActiveGates)" ]
      }
    },
    "/activeGates/{agId}/updateJobs/{jobId}" : {
      "delete" : {
        "operationId" : "deleteUpdateJobByJobIdForAg",
        "parameters" : [ {
          "description" : "The ID of the required ActiveGate.",
          "in" : "path",
          "name" : "agId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A unique identifier for a update-job of ActiveGate.",
          "in" : "path",
          "name" : "jobId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The update-job have been deleted. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found. See response body for details."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified update job",
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.write` (Write ActiveGates)" ]
      },
      "get" : {
        "operationId" : "getUpdateJobByJobIdForAg",
        "parameters" : [ {
          "description" : "The ID of the required ActiveGate.",
          "in" : "path",
          "name" : "agId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A unique identifier for a update-job of ActiveGate.",
          "in" : "path",
          "name" : "jobId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UpdateJob"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found. See response body for details."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the parameters of the specified update job",
        "tags" : [ "ActiveGates - Auto-update jobs" ],
        "x-internal-owner" : "blazej.wohs",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`activeGates.read` (Read ActiveGates)" ]
      }
    },
    "/analyzers" : {
      "get" : {
        "operationId" : "listAnalyzers",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Lists all analyzers currently known by the engine",
        "tags" : [ "Analyzers" ],
        "x-feature-flag" : "ANALYZER_REST_API_DEVELOPMENT_FEATURES",
        "x-internal-owner" : "hans.kohlreiter",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`analyzers.read` (Read analyzers)" ]
      }
    },
    "/analyzers/{analyzerName}" : {
      "get" : {
        "operationId" : "describeAnalyzer",
        "parameters" : [ {
          "description" : "The name of the analyzer to retrieve.",
          "in" : "path",
          "name" : "analyzerName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Retrieves the whole definition for the given analyzer name",
        "tags" : [ "Analyzers" ],
        "x-feature-flag" : "ANALYZER_REST_API_DEVELOPMENT_FEATURES",
        "x-internal-owner" : "hans.kohlreiter",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`analyzers.read` (Read analyzers)" ]
      }
    },
    "/analyzers/{analyzerName}/async-executions" : {
      "get" : {
        "operationId" : "getAsyncResults",
        "parameters" : [ {
          "description" : "The name of the analyzer to retrieve.",
          "in" : "path",
          "name" : "analyzerName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=utf-8" : { }
            },
            "description" : "default response"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Get all currently running async requests for the analyzer.",
        "tags" : [ "Analyzers" ],
        "x-feature-flag" : "ANALYZER_REST_API_DEVELOPMENT_FEATURES",
        "x-internal-owner" : "hans.kohlreiter",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`analyzers.read` (Read analyzers)" ]
      },
      "post" : {
        "operationId" : "executeAnalyzerAsync",
        "parameters" : [ {
          "description" : "The name of the analyzer to execute.",
          "in" : "path",
          "name" : "analyzerName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "waitTimeInSeconds",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnalyzerInputDto"
              }
            }
          },
          "description" : "The JSON body of the request."
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=utf-8" : { }
            },
            "description" : "default response"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Runs a specified analyzer with given data in async mode",
        "tags" : [ "Analyzers" ],
        "x-feature-flag" : "ANALYZER_REST_API_DEVELOPMENT_FEATURES",
        "x-internal-owner" : "hans.kohlreiter",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`analyzers.read` (Read analyzers)" ]
      }
    },
    "/analyzers/{analyzerName}/async-executions/{resultId}" : {
      "get" : {
        "operationId" : "getAsyncResult",
        "parameters" : [ {
          "description" : "The name of the analyzer to retrieve.",
          "in" : "path",
          "name" : "analyzerName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The async request identifier.",
          "in" : "path",
          "name" : "resultId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "waitTimeInSeconds",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=utf-8" : { }
            },
            "description" : "default response"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Request an already start async response instance by id",
        "tags" : [ "Analyzers" ],
        "x-feature-flag" : "ANALYZER_REST_API_DEVELOPMENT_FEATURES",
        "x-internal-owner" : "hans.kohlreiter",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`analyzers.read` (Read analyzers)" ]
      }
    },
    "/analyzers/{analyzerName}/async-executions/{resultId}/cancel" : {
      "post" : {
        "operationId" : "cancelAsyncResult",
        "parameters" : [ {
          "description" : "The name of the analyzer to cancel.",
          "in" : "path",
          "name" : "analyzerName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The async request identifier.",
          "in" : "path",
          "name" : "resultId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "query",
          "name" : "waitTimeInSeconds",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=utf-8" : { }
            },
            "description" : "default response"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Request an already start async response.",
        "tags" : [ "Analyzers" ],
        "x-feature-flag" : "ANALYZER_REST_API_DEVELOPMENT_FEATURES",
        "x-internal-owner" : "hans.kohlreiter",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`analyzers.read` (Read analyzers)" ]
      }
    },
    "/analyzers/{analyzerName}/execute" : {
      "post" : {
        "operationId" : "executeAnalyzer",
        "parameters" : [ {
          "description" : "The name of the analyzer to execute.",
          "in" : "path",
          "name" : "analyzerName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnalyzerInputDto"
              }
            }
          },
          "description" : "The JSON body of the request."
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=utf-8" : { }
            },
            "description" : "default response"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Runs a specified analyzer with given data",
        "tags" : [ "Analyzers" ],
        "x-feature-flag" : "ANALYZER_REST_API_DEVELOPMENT_FEATURES",
        "x-internal-owner" : "hans.kohlreiter",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`analyzers.read` (Read analyzers)" ]
      }
    },
    "/analyzers/{analyzerName}/validate" : {
      "post" : {
        "operationId" : "validateAnalyzerExecution",
        "parameters" : [ {
          "description" : "The name of the analyzer to validate.",
          "in" : "path",
          "name" : "analyzerName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnalyzerInputDto"
              }
            }
          },
          "description" : "The JSON body of the request."
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json; charset=utf-8" : { }
            },
            "description" : "default response"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Do not run a specified analyzer but check if the input and the analyzer itself is valid",
        "tags" : [ "Analyzers" ],
        "x-feature-flag" : "ANALYZER_REST_API_DEVELOPMENT_FEATURES",
        "x-internal-owner" : "hans.kohlreiter",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`analyzers.read` (Read analyzers)" ]
      }
    },
    "/apiTokens" : {
      "get" : {
        "description" : "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "listApiTokens",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of API tokens in a single response payload. \n\nThe maximal allowed page size is 10000 and the minimal allowed page size is 100. \n\nIf not set, 200 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "maximum" : 10000,
            "type" : "integer"
          }
        }, {
          "description" : "Filters the resulting sets of tokens. Only tokens matching the specified criteria are included into response. \n\nYou can set one or more of the following criteria: \n\n* Owner: `owner(\"value\")`. The user that owns the token. Case-sensitive.\n* Personal access token: `personalAccessToken(false)`. Set to `true` to include only personal access tokens or to `false` to include only API tokens.\n* Token scope: `scope(\"scope1\",\"scope2\")`. If several values are specified, the **OR** logic applies. \n\nTo set multiple criteria, separate them with commas (`,`). Only results matching **all** criteria are included into response.",
          "in" : "query",
          "name" : "apiTokenSelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Specifies the fields to be included in the response.\n\nThe following fields are included by default: \n\n* `id` \n* `name` \n* `enabled` \n* `owner` \n* `creationDate` \n\nTo remove fields from the response, specify them with the minus (`-`) operator as a comma-separated list (for example, `-creationDate,-owner`). \n\nYou can include additional fields: \n\n* `personalAccessToken` \n* `expirationDate` \n* `lastUsedDate` \n* `lastUsedIpAddress` \n* `modifiedDate` \n* `scopes` \n\n* `additionalMetadata` \n\nTo add fields to the response, specify them with the plus (`+`) operator as a comma-separated list (for example, `+expirationDate,+scopes`). You can combine adding and removing of fields (for example, `+scopes,-creationDate`). \n\nAlternatively, you can define the desired set of fields in the response. Specify the required fields as a comma-separated list, without operators (for example, `creationDate,expirationDate,owner`). The ID is always included in the response. \n\nThe **fields** string must be URL-encoded.",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters tokens based on the last usage time. \nThe start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters tokens based on the last usage time. \nThe end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The sort order of the token list. \n\nYou can sort by the following properties with a sign prefix for the sort order: \n\n * `name`: token name (`+` a...z or `-` z...a) \n * `lastUsedDate` last used (`+` never used tokens first `-` most recently used tokens first) \n * `creationDate` (`+` oldest tokens first `-` newest tokens first) \n * `expirationDate` (`+` tokens that expire soon first `-` unlimited tokens first) \n * `modifiedDate` last modified (`+` never modified tokens first `-` most recently modified tokens first) \n\nIf no prefix is set, + is used. \n\nIf not set, tokens are sorted by creation date with newest first.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "default" : "-creationDate",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiTokenList"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:api-tokens:read" ]
        } ],
        "summary" : "Lists all available API tokens",
        "tags" : [ "Access Tokens - API tokens" ],
        "x-internal-owner" : "michael.gehmayr",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`apiTokens.read` (Read API tokens)" ]
      },
      "post" : {
        "description" : "The newly created token will be owned by the same user who owns the token used for authentication of the call.",
        "operationId" : "createApiToken",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiTokenCreate"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new API token.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiTokenCreated"
                }
              }
            },
            "description" : "Success. The token has been created. The body of the response contains the token secret."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:api-tokens:write" ]
        } ],
        "summary" : "Creates a new API token",
        "tags" : [ "Access Tokens - API tokens" ],
        "x-internal-owner" : "michael.gehmayr",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`apiTokens.write` (Write API tokens)" ]
      }
    },
    "/apiTokens/lookup" : {
      "post" : {
        "operationId" : "lookupApiToken",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiTokenSecret"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the required token.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiToken"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:api-tokens:read" ]
        } ],
        "summary" : "Gets API token metadata by token secret",
        "tags" : [ "Access Tokens - API tokens" ],
        "x-internal-owner" : "michael.gehmayr",
        "x-token-scopes" : [ "Any Api-Token scope" ]
      }
    },
    "/apiTokens/{id}" : {
      "delete" : {
        "operationId" : "deleteApiToken",
        "parameters" : [ {
          "description" : "The ID of the token to be deleted. \n\nYou can specify either the ID or the secret of the token. \n\nYou can't delete the token you're using for authentication of the request.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. You can't delete the token you're using for authentication of the request."
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:api-tokens:write" ]
        } ],
        "summary" : "Deletes an API token",
        "tags" : [ "Access Tokens - API tokens" ],
        "x-internal-owner" : "michael.gehmayr",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`apiTokens.write` (Write API tokens)" ]
      },
      "get" : {
        "description" : "The token secret is **not** exposed.",
        "operationId" : "getApiToken",
        "parameters" : [ {
          "description" : "The ID of the token.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApiToken"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:api-tokens:read" ]
        } ],
        "summary" : "Gets API token metadata by token ID",
        "tags" : [ "Access Tokens - API tokens" ],
        "x-internal-owner" : "michael.gehmayr",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`apiTokens.read` (Read API tokens)" ]
      },
      "put" : {
        "operationId" : "updateApiToken",
        "parameters" : [ {
          "description" : "The ID of the token to be updated. \n\n You can't disable the token you're using for authentication of the request.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApiTokenUpdate"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the API token.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:api-tokens:write" ]
        } ],
        "summary" : "Updates an API token",
        "tags" : [ "Access Tokens - API tokens" ],
        "x-internal-owner" : "michael.gehmayr",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`apiTokens.write` (Write API tokens)" ]
      }
    },
    "/attacks" : {
      "get" : {
        "operationId" : "getAttacks",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of attacks in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Defines the scope of the query. Only attacks matching the specified criteria are included in the response. You can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* State: `state(\"value\")`. The state of the attack. Possible values are `EXPLOITED`, `BLOCKED`, and `ALLOWLISTED`.\n* Attack Type: `attackType(\"value\")`. The type of the attack. Find the possible values in the description of the **attackType** field of the response.\n* Country Code: `countryCode(\"value\")`. The country code of the attacker. Supported values include all ISO-3166-1 alpha-2 country codes (2-letter).\n* Request path contains: `requestPathContains(\"value\")`. Filters for a substring in the request path. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Process group name contains: `processGroupNameContains(\"value\")`. Filters for a substring in the targeted process group's name. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Vulnerability ID: `vulnerabilityId(\"123456789\")`. The exact ID of the vulnerability.\n* Source IPs: `sourceIps(\"93.184.216.34\",\"63.124.6.12\")`. The exact IPv4/IPv6 addresses of the attacker.\n* Management zone ID: `managementZoneIds(\"mzId-1\",\"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\",\"name-2\")`. Values are case sensitive.\nTo set several criteria, separate them with a comma (`,`). Only results matching (**all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`",
          "in" : "query",
          "name" : "attackSelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Specifies one or more fields for sorting the attack list. Multiple fields can be concatenated using a comma (`,`) as a separator (e.g. `+state,-timestamp`).\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n* `displayId`: The attack's display ID.\n* `displayName`: The attack's display name.\n* `attackType`: The type of the attack (e.g. SQL_INJECTION, JNDI_INJECTION, etc.).\n* `state`: The state of the attack. (`+` low severity state first `-` high severity state first)\n* `sourceIp`: The IP address of the attacker. Sorts by the numerical IP value.\n* `requestPath`: The request path where the attack was started.\n* `timestamp`: When the attack was executed. (`+` old attacks first or `-` new attacks first)\nIf no prefix is set, `+` is used.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of additional attack properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `attackTarget`: The targeted host/database of an attack.\n* `request`: The request that was sent from the attacker.\n* `entrypoint`: The entry point used by an attacker to start a specific attack.\n* `vulnerability`: The vulnerability utilized by the attack.\n* `securityProblem`: The related security problem.\n* `attacker`: The attacker of an attack.\n* `managementZones`: The related management zones.\n* `affectedEntities`: The affected entities of an attack.\n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+attackTarget,+securityProblem`).\n",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttackList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all attacks",
        "tags" : [ "Attacks" ],
        "x-feature-flag" : "CASP_ATTACKS_REST_API_V2",
        "x-internal-owner" : "_team-netsky",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`attacks.read` (Read attacks)" ]
      }
    },
    "/attacks/aggregate" : {
      "get" : {
        "operationId" : "getAttacksAggregation",
        "parameters" : [ {
          "description" : "Defines the attack property to be used for the aggregation.\n\n* `countryCode`: The country where the attack originated from.\n* `requestPath`: The request path where the attack was started.\n* `processGroupId`: The process group affected by the attack.\n* `state`: The state of the attack.\n* `sourceIp`: The IP address of the attacker.\n",
          "in" : "query",
          "name" : "groupBy",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The number of time slots in the result.\n\nThe query timeframe is divided equally into the specified number of slots.\n\nThe minimum length of a slot is 1 ms.\n\nIf not set, 1 is used.",
          "in" : "query",
          "name" : "timeBuckets",
          "schema" : {
            "default" : 1,
            "format" : "int32",
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Defines the scope of the query. Only attacks matching the specified criteria are included in the response. You can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* State: `state(\"value\")`. The state of the attack. Possible values are `EXPLOITED`, `BLOCKED`, and `ALLOWLISTED`.\n* Attack Type: `attackType(\"value\")`. The type of the attack. Find the possible values in the description of the **attackType** field of the response.\n* Country Code: `countryCode(\"value\")`. The country code of the attacker. Supported values include all ISO-3166-1 alpha-2 country codes (2-letter).\n* Request path contains: `requestPathContains(\"value\")`. Filters for a substring in the request path. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Process group name contains: `processGroupNameContains(\"value\")`. Filters for a substring in the targeted process group's name. The `CONTAINS` operator is used. A maximum of 48 characters are allowed.\n* Vulnerability ID: `vulnerabilityId(\"123456789\")`. The exact ID of the vulnerability.\n* Source IPs: `sourceIps(\"93.184.216.34\",\"63.124.6.12\")`. The exact IPv4/IPv6 addresses of the attacker.\n* Management zone ID: `managementZoneIds(\"mzId-1\",\"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\",\"name-2\")`. Values are case sensitive.\nTo set several criteria, separate them with a comma (`,`). Only results matching (**all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`",
          "in" : "query",
          "name" : "attackSelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Aggregations"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Get attack aggregations.",
        "tags" : [ "Attacks" ],
        "x-feature-flag" : "ENABLE_CASP_ATTACK_API_AGGREGATE",
        "x-internal-owner" : "_team-netsky",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`attacks.read` (Read attacks)" ]
      }
    },
    "/attacks/{id}" : {
      "get" : {
        "operationId" : "getAttack",
        "parameters" : [ {
          "description" : "The ID of the attack.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of additional attack properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `attackTarget`: The targeted host/database of an attack.\n* `request`: The request that was sent from the attacker.\n* `entrypoint`: The entry point used by an attacker to start a specific attack.\n* `vulnerability`: The vulnerability utilized by the attack.\n* `securityProblem`: The related security problem.\n* `attacker`: The attacker of an attack.\n* `managementZones`: The related management zones.\n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+attackTarget,+securityProblem`).\n",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Attack"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the specified attack",
        "tags" : [ "Attacks" ],
        "x-feature-flag" : "CASP_ATTACKS_REST_API_V2",
        "x-internal-owner" : "_team-netsky",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`attacks.read` (Read attacks)" ]
      }
    },
    "/auditlogs" : {
      "get" : {
        "description" : "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "getLogs",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of log entries in a single response payload. \n\nThe maximal allowed page size is 5000. \n\nIf not set, 1000 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Filters the audit log. You can use the following criteria: \n* User: `user(\"userIdentification\")`. The `EQUALS` operator applies. \n* Event type: `eventType(\"value\")`. The `EQUALS` operator applies. \n* Category of a logged operation: `category(\"value\")`. The `EQUALS` operator applies. \n* Entity ID: `entityId(\"id\")`. The `CONTAINS` operator applies. \n\nFor each criterion, you can specify multiple alternatives with comma-separated values. In this case, the OR logic applies. For example, `eventType(\"CREATE\",\"UPDATE\")` means eventType can be \"CREATE\" or \"UPDATE\". \n\nYou can specify multiple comma-separated criteria, such as `eventType(\"CREATE\",\"UPDATE\"),category(\"CONFIG\")`. Only results matching **all** criteria are included in response. \n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes: \n* Tilde `~` \n* Quote `\"`",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The sorting of audit log entries: \n* `timestamp`: Oldest first. \n* `-timestamp`: Newest first. \n\nIf not set, the newest first sorting is applied.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "default" : "-timestamp",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuditLog"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:audit-logs:read" ]
        } ],
        "summary" : "Gets the audit log of your Dynatrace environment",
        "tags" : [ "Audit Logs" ],
        "x-feature-flag" : "AUDIT_LOG_REST_API_V2",
        "x-internal-owner" : "wolfgang.groiss",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`auditLogs.read` (Read audit logs)" ]
      }
    },
    "/auditlogs/{id}" : {
      "get" : {
        "operationId" : "getLog",
        "parameters" : [ {
          "description" : "The ID of the required log entry.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuditLogEntry"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Invalid ID format."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:audit-logs:read" ]
        } ],
        "summary" : "Gets the specified entry of the audit log",
        "tags" : [ "Audit Logs" ],
        "x-feature-flag" : "AUDIT_LOG_REST_API_V2",
        "x-internal-owner" : "wolfgang.groiss",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`auditLogs.read` (Read audit logs)" ]
      }
    },
    "/bizevents/ingest" : {
      "post" : {
        "description" : "The ingestion of business events consumes [Davis Data Units](https://dt-url.net/ddu) (DDUs) from the business events pool.",
        "operationId" : "ingest_1",
        "requestBody" : {
          "content" : {
            "application/cloudevent+json" : {
              "example" : {
                "data" : {
                  "id" : "OR-838475",
                  "paymentType" : "paypal",
                  "plannedDeliveryDate" : "01.01.2021",
                  "total" : 234.0
                },
                "dataschema" : "http://dynatrace.com/schema/bizevents/generic/1.0",
                "dtcontext" : "dt.session_id=\"234234234324235345345\",dt.entity.rum_application=\"APPLICATION-53453458340758\",host.name=\"123.123.123.123\"",
                "id" : "1",
                "source" : "custom.source",
                "specversion" : "1.0",
                "traceparent" : "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-00",
                "type" : "com.mycompany.shop.checkout"
              },
              "schema" : {
                "items" : {
                  "format" : "byte",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "application/cloudevent-batch+json" : {
              "example" : [ {
                "data" : "just a string",
                "id" : "1",
                "source" : "custom.provider",
                "specversion" : "1.0",
                "type" : "com.easytravel.funnel.product-view"
              }, {
                "data_base64" : "SGkgdGhlcmUsIEkgYW0geW91ciBteXN0aWNhbCwgdW5rbm93biBjb250ZW50",
                "id" : "2",
                "source" : "custom.provider",
                "specversion" : "1.0",
                "type" : "com.easytravel.frontend.booking-process-triggered"
              } ],
              "schema" : {
                "items" : {
                  "format" : "byte",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "application/json; charset=utf-8" : {
              "example" : {
                "customer" : {
                  "firstName" : "John",
                  "lastName" : "Doe"
                },
                "event.provider" : "custom.provider",
                "id" : "1",
                "orderItemsProductIDs" : [ "PR-102002002", "QZ-123232" ],
                "paymentType" : "paypal",
                "plannedDeliveryDate" : "01.01.2021",
                "total" : 234.0
              },
              "schema" : {
                "items" : {
                  "format" : "byte",
                  "type" : "string"
                },
                "type" : "array"
              }
            }
          },
          "description" : "The Business Event",
          "required" : true
        },
        "responses" : {
          "202" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "example" : { }
              }
            },
            "description" : "The provided business events are all accepted and will be processed."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BizEventIngestResult"
                }
              }
            },
            "description" : "Some business events are invalid. Valid business events are accepted and will be processed."
          }
        },
        "security" : [ {
          "OAuth" : [ "storage:events:write" ]
        } ],
        "summary" : "Ingests a business event",
        "tags" : [ "Business Events" ],
        "x-feature-flag" : "BIZ_EVENTS_INGEST_REST_API_V2",
        "x-internal-owner" : "filip.rafajec",
        "x-maturity" : "IN_DEVELOPMENT"
      }
    },
    "/davis/securityAdvices" : {
      "get" : {
        "description" : "You can narrow down the output by providing the management zone and pagination. If you specify a management zone, only problems originating from that zone are included to the request.",
        "operationId" : "getAdviceForSecurityProblems",
        "parameters" : [ {
          "description" : "To specify management zones, use one of the options listed below. For each option you can specify multiple comma-separated values. If several values are specified, the **OR** logic applies. All values are case-sensitive and must be quoted. \n\n* Management zone ID: ids(\"mzId-1\", \"mzId-2\"). \n* Management zone names: names(\"mz-1\", \"mz-2\"). \n\nYou can specify several comma-separated criteria (for example, `names(\"myMz\"),ids(\"9130632296508575249\")`).",
          "in" : "query",
          "name" : "managementZoneFilter",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of security advices in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 5 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DavisSecurityAdviceList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Provides advice for security problems.",
        "tags" : [ "Davis security advisor" ],
        "x-feature-flag" : "ENABLE_CASP_DAVIS_SECURITY_ADVISOR_REST_API",
        "x-internal-owner" : "_team-meltdown",
        "x-maturity" : "EARLY_ADOPTER",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`securityProblems.read` (Read security problems)" ]
      }
    },
    "/dql/query" : {
      "get" : {
        "operationId" : "executeQuery",
        "parameters" : [ {
          "description" : "The DQL query.",
          "in" : "query",
          "name" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Start of the default timeframe. If this is specified, the end also needs to be specified",
          "in" : "query",
          "name" : "default-timeframe-start",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "End of the default timeframe. If this is specified, the start also needs to be specified",
          "in" : "query",
          "name" : "default-timeframe-end",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Timezone that the query should be executed in. See the Persistence service end point for more information",
          "in" : "query",
          "name" : "timezone",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Locale that the query should be executed in. See the Persistence service end point for more information",
          "in" : "query",
          "name" : "locale",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryResponse"
                }
              }
            },
            "description" : "Successful query execution"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Invalid query request"
          },
          "401" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unauthorized"
          },
          "403" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Forbidden"
          },
          "default" : {
            "content" : {
              "application/json; charset=utf-8" : { }
            }
          }
        },
        "security" : [ {
          "OAuth" : [ ]
        } ],
        "summary" : "Executes the given DQL query and returns the result",
        "tags" : [ "Dynatrace Query Language" ],
        "x-feature-flag" : "DQL_QUERY_REST_API_V2",
        "x-internal-owner" : "oscar.ablinger",
        "x-maturity" : "IN_DEVELOPMENT"
      }
    },
    "/entities" : {
      "get" : {
        "description" : "Lists entities observed within the specified timeframe along with their properties. \n\nWhen you query entities of the `SERVICE_METHOD` type, only the following requests are returned: \n\n* [Key requests](https://dt-url.net/a903u9s) \n* Top X requests that are used for [baselining](https://dt-url.net/0j23uqb) \n* Requests that have caused a [problem](https://dt-url.net/pf43uqg) \n\nYou can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "getEntities",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of entities. \n\nIf not set, 50 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Defines the scope of the query. Only entities matching the specified criteria are included into response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\nThe field is **required** when you're querying the first page of results.",
          "in" : "query",
          "name" : "entitySelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`).",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Defines the ordering of the entities returned. \n\nThis field is **optional**, each field has a sign prefix (+/-), which corresponds to sorting order ( + for ascending and - for descending). If no sign prefix is set, then default ascending sorting order will be applied. \n\nCurrently ordering is only available for the display name (for example `sort=name or sort =+name for ascending, sort=-name for descending`)",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntitiesList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets the information about monitored entities",
        "tags" : [ "Monitored entities" ],
        "x-internal-owner" : "stefan.gradl",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`entities.read` (Read entities)" ]
      }
    },
    "/entities/custom" : {
      "post" : {
        "operationId" : "pushCustomDevice",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CustomDeviceCreation"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of a custom device.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomDeviceCreationResult"
                }
              }
            },
            "description" : "Success"
          },
          "204" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Creates or updates a custom device",
        "tags" : [ "Monitored entities" ],
        "x-internal-owner" : "stefan.gradl",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`entities.write` (Write entities)" ]
      }
    },
    "/entities/{entityId}" : {
      "get" : {
        "operationId" : "getEntity",
        "parameters" : [ {
          "description" : "The ID of the required entity.",
          "in" : "path",
          "name" : "entityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Defines the list of entity properties included in the response. The ID and the name of an entity are **always** included to the response. \n\nTo add properties, list them with leading plus `+`. You can specify several properties, separated by a comma (for example `fields=+lastSeenTms,+properties.BITNESS`). \n\nUse the [GET entity type](https://dt-url.net/2ka3ivt) request to fetch the list of properties available for your entity type. Fields from the **properties** object must be specified in the `properties.FIELD` format (for example, `properties.BITNESS`).",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Entity"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets the properties of the specified monitored entity",
        "tags" : [ "Monitored entities" ],
        "x-internal-owner" : "stefan.gradl",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`entities.read` (Read entities)" ]
      }
    },
    "/entityTypes" : {
      "get" : {
        "description" : "You can limit the output by using pagination: \n1. Specify the number of results per page in the **pageSize** query parameter. \n2. Use the cursor from the **nextPageKey** field of the previous response in the **nextPageKey** query parameter to obtain subsequent pages.",
        "operationId" : "getEntityTypes",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of entity types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityTypeList"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "description" : "Failed. There are no more entity types to export."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets a list of properties for all entity types",
        "tags" : [ "Monitored entities" ],
        "x-internal-owner" : "stefan.gradl",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`entities.read` (Read entities)" ]
      }
    },
    "/entityTypes/{type}" : {
      "get" : {
        "operationId" : "getEntityType",
        "parameters" : [ {
          "description" : "The required entity type.",
          "in" : "path",
          "name" : "type",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityType"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "description" : "Failed. The requested monitored entity type is not exportable or doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets a list of properties for the specified entity type",
        "tags" : [ "Monitored entities" ],
        "x-internal-owner" : "stefan.gradl",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`entities.read` (Read entities)" ]
      }
    },
    "/eventProperties" : {
      "get" : {
        "operationId" : "getEventProperties",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of event properties in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventPropertyDetails"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Lists all event properties",
        "tags" : [ "Events" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`events.read` (Read events)" ]
      }
    },
    "/eventProperties/{propertyKey}" : {
      "get" : {
        "operationId" : "getEventProperty",
        "parameters" : [ {
          "description" : "The event property key you're inquiring.",
          "in" : "path",
          "name" : "propertyKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventPropertyDetail"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets the details of an event property",
        "tags" : [ "Events" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`events.read` (Read events)" ]
      }
    },
    "/eventTypes" : {
      "get" : {
        "operationId" : "getEventTypes",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of event types in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventTypeList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Lists all event types",
        "tags" : [ "Events" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`events.read` (Read events)" ]
      }
    },
    "/eventTypes/{eventType}" : {
      "get" : {
        "operationId" : "getEventType",
        "parameters" : [ {
          "description" : "The event type you're inquiring.",
          "in" : "path",
          "name" : "eventType",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventType"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets the properties of an event type",
        "tags" : [ "Events" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`events.read` (Read events)" ]
      }
    },
    "/events" : {
      "get" : {
        "operationId" : "getEvents",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of events in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Defines the scope of the query. Only events matching the specified criteria are included in the response.\n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies.\n* Event ID: `eventId(\"id-1\", \"id-2\")`.\n* ID of related entity: `entityId(\"id-1\", \"id-2\")`.\n* Event status: `status(\"OPEN\")` or `status(\"CLOSED\")`. You can specify only one status.\n* Management zone ID: `managementZoneId(\"123\", \"321\")`.\n* Event type: `eventType(\"event-type\")`. You can specify only one event type. You can fetch the list of possible event types with the [GET event types](https://dt-url.net/qc03u6w) call. \n* Correlation ID: `correlationId(\"id-1\", \"id-2\")`.\n* Happened during maintenance (true, false): `underMaintenance(true)`. \n* Notifications are suppressed (true, false): `suppressAlert(true)`. \n* Problem creation is suppressed (true, false): `suppressProblem(true)`. \n* Frequent event (true, false): `frequentEvent(true)`. \n* Event property: `property.<key>(\"value-1\", \"value-2\")`.\n\nTo set several criteria, separate them with commas (`,`). Only results matching **all** criteria are included in the response. \n\n",
          "in" : "query",
          "name" : "eventSelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\nThe number of entities that can be selected is limited to 10000.",
          "in" : "query",
          "name" : "entitySelector",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventList"
                }
              }
            },
            "description" : "Success. The response contains the list of events."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Lists events within the specified timeframe",
        "tags" : [ "Events" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`events.read` (Read events)" ]
      }
    },
    "/events/ingest" : {
      "post" : {
        "description" : "The ingestion of custom events consumes [Davis Data Units](https://dt-url.net/ddu) (DDUs) from the events pool.",
        "operationId" : "createEvent",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventIngest"
              }
            }
          },
          "description" : "The JSON body of the request. Contains properties of the new event."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EventIngestResults"
                }
              }
            },
            "description" : "The event ingest request was received by the server. The response body indicates for each event whether its creation was successful."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "storage:events:write" ]
        } ],
        "summary" : "Ingests a custom event",
        "tags" : [ "Events" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`events.ingest` (Ingest events)" ]
      }
    },
    "/events/{eventId}" : {
      "get" : {
        "operationId" : "getEvent",
        "parameters" : [ {
          "description" : "The ID of the required event.",
          "in" : "path",
          "name" : "eventId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event"
                }
              }
            },
            "description" : "Success. The response contains the configuration of the event."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets the properties of an event",
        "tags" : [ "Events" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`events.read` (Read events)" ]
      }
    },
    "/extensions" : {
      "get" : {
        "operationId" : "listExtensions",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Filters the resulting set of extensions 2.0 by name. You can specify a partial name. In that case, the CONTAINS operator is used.",
          "in" : "query",
          "name" : "name",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the extensions 2.0 available in your environment",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensions.read` (Read extensions)" ]
      },
      "post" : {
        "operationId" : "uploadExtension",
        "parameters" : [ {
          "description" : "Only run validation but do not persist the extension even if validation was successful.",
          "in" : "query",
          "name" : "validateOnly",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "properties" : {
                  "file" : {
                    "description" : "Extension 2.0 zip file to upload.",
                    "format" : "binary",
                    "type" : "string"
                  }
                },
                "required" : [ "file" ],
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            },
            "description" : "The extension is valid"
          },
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            },
            "description" : "Success. The extension 2.0 has been uploaded."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input file is invalid."
          },
          "409" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Upload not possible yet, please try again in a few seconds."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Uploads or verifies a new extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensions.write` (Write extensions)" ]
      }
    },
    "/extensions/schemas" : {
      "get" : {
        "operationId" : "listSchemas",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemasList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the extension 2.0 schemas versions available in your environment",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensions.read` (Read extensions)" ]
      }
    },
    "/extensions/schemas/{schemaVersion}" : {
      "get" : {
        "operationId" : "listSchemaFiles",
        "parameters" : [ {
          "description" : "The version of the schema.",
          "in" : "path",
          "name" : "schemaVersion",
          "required" : true,
          "schema" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        }, {
          "description" : "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
          "in" : "header",
          "name" : "Accept",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemaFiles"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemaFiles"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          },
          "406" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not acceptable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the files available for the specified extension 2.0 schema version",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensions.read` (Read extensions)" ]
      }
    },
    "/extensions/schemas/{schemaVersion}/{fileName}" : {
      "get" : {
        "operationId" : "getSchemaFile",
        "parameters" : [ {
          "description" : "The version of the schema.",
          "in" : "path",
          "name" : "schemaVersion",
          "required" : true,
          "schema" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        }, {
          "description" : "The name of the schema file.",
          "in" : "path",
          "name" : "fileName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonNode"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the extension 2.0 schema file in the specified version",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensions.read` (Read extensions)" ]
      }
    },
    "/extensions/{extensionName}" : {
      "get" : {
        "operationId" : "listExtensionVersions",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionList"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all versions of the extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensions.read` (Read extensions)" ]
      }
    },
    "/extensions/{extensionName}/environmentConfiguration" : {
      "delete" : {
        "operationId" : "deleteEnvironmentConfiguration",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
                }
              }
            },
            "description" : "Success. Environment configuration deactivated."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deactivates the environment configuration of the specified extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionEnvironment.write` (Write extension environment configurations)", "`extensions.write` (Write extensions)" ]
      },
      "get" : {
        "operationId" : "getActiveEnvironmentConfiguration",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the active environment configuration version of the specified extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionEnvironment.read` (Read extension environment configurations)", "`extensions.read` (Read extensions)" ]
      },
      "post" : {
        "operationId" : "activateExtensionEnvironmentConfiguration",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
              }
            }
          },
          "description" : "The version of the requested environment configuration.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
                }
              }
            },
            "description" : "Success. Environment configuration created."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Activates the environment configuration from the specified version of the extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionEnvironment.write` (Write extension environment configurations)", "`extensions.write` (Write extensions)" ]
      },
      "put" : {
        "operationId" : "updateExtensionEnvironmentConfiguration",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
              }
            }
          },
          "description" : "The version of the requested environment configuration.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEnvironmentConfigurationVersion"
                }
              }
            },
            "description" : "Success. Environment configuration updated."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the active environment configuration version of the extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionEnvironment.write` (Write extension environment configurations)", "`extensions.write` (Write extensions)" ]
      }
    },
    "/extensions/{extensionName}/environmentConfiguration/assets" : {
      "get" : {
        "operationId" : "getEnvironmentConfigurationAssetsInfo",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionAssetsDto"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the information about assets in an active extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-feature-flag" : "EXTENSION_ASSETS_ENDPOINT_ENABLED",
        "x-internal-owner" : "jacek.jackowiak",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionEnvironment.read` (Read extension environment configurations)", "`extensions.read` (Read extensions)" ]
      }
    },
    "/extensions/{extensionName}/environmentConfiguration/events" : {
      "get" : {
        "operationId" : "getEnvironmentConfigurationEvents",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Content of the event",
          "in" : "query",
          "name" : "content",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Status of the event",
          "in" : "query",
          "name" : "status",
          "schema" : {
            "enum" : [ "ERROR", "INFO", "NONE", "WARN" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEventsList"
                }
              }
            },
            "description" : "List of the latest extension environment configuration events"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "List of the latest extension environment configuration events",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionEnvironment.read` (Read extension environment configurations)", "`extensions.read` (Read extensions)" ]
      }
    },
    "/extensions/{extensionName}/monitoringConfigurations" : {
      "get" : {
        "operationId" : "extensionMonitoringConfigurations",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of extensions in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of configurations by extension 2.0 version.",
          "in" : "query",
          "name" : "version",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of configurations by the active state.",
          "in" : "query",
          "name" : "active",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionMonitoringConfigurationsList"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the monitoring configurations of the specified extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionConfigurations.read` (Read extension monitoring configurations)" ]
      },
      "post" : {
        "operationId" : "createMonitoringConfiguration",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/MonitoringConfigurationDto"
                },
                "type" : "array"
              }
            }
          },
          "description" : "JSON body of the request, containing monitoring configuration parameters.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/MonitoringConfigurationResponse"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          },
          "207" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "items" : {
                    "anyOf" : [ {
                      "$ref" : "#/components/schemas/MonitoringConfigurationResponse"
                    }, {
                      "$ref" : "#/components/schemas/ErrorEnvelope"
                    } ],
                    "type" : "string"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Multi-Status, if not all requests resulted in the same status"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates new monitoring configuration for the specified extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionConfigurations.write` (Write extension monitoring configurations)" ]
      }
    },
    "/extensions/{extensionName}/monitoringConfigurations/status" : {
      "get" : {
        "operationId" : "getExtensionStatus",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionStatusDto"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the most recent status of the execution of monitoring configurations of given extension",
        "tags" : [ "Extensions 2.0" ],
        "x-feature-flag" : "EXTENSION_STATUS_ENDPOINT_ENABLED",
        "x-internal-owner" : "jacek.jackowiak",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionConfigurations.read` (Read extension monitoring configurations)" ]
      }
    },
    "/extensions/{extensionName}/monitoringConfigurations/{configurationId}" : {
      "delete" : {
        "operationId" : "removeMonitoringConfiguration",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the requested monitoring configuration.",
          "in" : "path",
          "name" : "configurationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified monitoring configuration",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionConfigurations.write` (Write extension monitoring configurations)" ]
      },
      "get" : {
        "operationId" : "monitoringConfigurationDetails",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the requested monitoring configuration.",
          "in" : "path",
          "name" : "configurationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionMonitoringConfiguration"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the details of the specified monitoring configuration",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionConfigurations.read` (Read extension monitoring configurations)" ]
      },
      "put" : {
        "operationId" : "updateMonitoringConfiguration",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the requested monitoring configuration.",
          "in" : "path",
          "name" : "configurationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/MonitoringConfigurationUpdateDto"
              }
            }
          },
          "description" : "JSON body of the request, containing monitoring configuration parameters.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonitoringConfigurationResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified monitoring configuration",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionConfigurations.write` (Write extension monitoring configurations)" ]
      }
    },
    "/extensions/{extensionName}/monitoringConfigurations/{configurationId}/events" : {
      "get" : {
        "operationId" : "getExtensionMonitoringConfigurationEvents",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the requested monitoring configuration.",
          "in" : "path",
          "name" : "configurationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Host that uses this monitoring configuration.\n\nExample: `HOST-ABCDEF0123456789`",
          "in" : "query",
          "name" : "dt.entity.host",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Hexadecimal ID of Active Gate that uses this monitoring configuration.\n\nExample: `0x1a2b3c4d`",
          "in" : "query",
          "name" : "dt.active_gate.id",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Data source that uses this monitoring configuration.\n\nExample: `snmp`",
          "in" : "query",
          "name" : "dt.extension.ds",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Content of the event",
          "in" : "query",
          "name" : "content",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Status of the event",
          "in" : "query",
          "name" : "status",
          "schema" : {
            "enum" : [ "ERROR", "INFO", "NONE", "WARN" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionEventsList"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the list of the events linked to specific monitoring configuration",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionConfigurations.read` (Read extension monitoring configurations)" ]
      }
    },
    "/extensions/{extensionName}/monitoringConfigurations/{configurationId}/status" : {
      "get" : {
        "operationId" : "getExtensionMonitoringConfigurationStatus",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the requested monitoring configuration.",
          "in" : "path",
          "name" : "configurationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExtensionStatusDto"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the most recent status of the execution of given monitoring configuration",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionConfigurations.read` (Read extension monitoring configurations)" ]
      }
    },
    "/extensions/{extensionName}/{extensionVersion}" : {
      "delete" : {
        "operationId" : "removeExtension",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The version of the requested extension 2.0",
          "in" : "path",
          "name" : "extensionVersion",
          "required" : true,
          "schema" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            },
            "description" : "Success. The extension 2.0 version has been deleted."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified version of the extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensions.write` (Write extensions)" ]
      },
      "get" : {
        "operationId" : "extensionDetails",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The version of the requested extension 2.0",
          "in" : "path",
          "name" : "extensionVersion",
          "required" : true,
          "schema" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        }, {
          "description" : "Accept header. Specifies part of the extension 2.0 that will be returned: \n* application/json; charset=utf-8 - returns extension 2.0 metadata in JSON \n* application/octet-stream - returns extension 2.0 zip package stored on the server.",
          "in" : "header",
          "name" : "Accept",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Extension"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          },
          "406" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not acceptable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets details of the specified version of the extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensions.read` (Read extensions)" ]
      }
    },
    "/extensions/{extensionName}/{extensionVersion}/schema" : {
      "get" : {
        "operationId" : "extensionConfigurationSchema",
        "parameters" : [ {
          "description" : "The name of the requested extension 2.0.",
          "in" : "path",
          "name" : "extensionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The version of the requested extension 2.0",
          "in" : "path",
          "name" : "extensionVersion",
          "required" : true,
          "schema" : {
            "pattern" : "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*))?(\\.(0|[1-9]\\d*))?",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemaDefinitionRestDto"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the configuration schema of the specified version of the extension 2.0",
        "tags" : [ "Extensions 2.0" ],
        "x-internal-owner" : "jacek.jackowiak",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensionConfigurations.read` (Read extension monitoring configurations)" ]
      }
    },
    "/hub/capabilities" : {
      "get" : {
        "operationId" : "listCapabilities",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of hub capabilities in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The sort order. Possible sort orders are:\n * 'name' (without quotes): Sort by name ascending.\n * '-name' (without quotes): Sort by name descending.\n",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filter the results for items matching the query string within id, name, author, description or any tag.\n- Case insensitive\n- Checks if text is contained in any of the text fields:\n- - id, name, author, description, tags",
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If provided, will skip the desired number of results, allowing for pagination in combination with page size",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityListDto"
                }
              }
            },
            "description" : "OK"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the available capabilities in your environment",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/capabilities/{capabilityId}" : {
      "get" : {
        "operationId" : "getDetails",
        "parameters" : [ {
          "description" : "CapabilityId of the resource to be fetched",
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityDetailsDto"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The details of the given capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/capabilities/{capabilityId}/author/logo" : {
      "get" : {
        "operationId" : "getAuthorLogo",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of an author of the resource",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/capabilities/{capabilityId}/description-blocks/{blockIndex}/images/{imageIndex}" : {
      "get" : {
        "operationId" : "getBlockImage",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "blockIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "imageIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Get the image that that is provided in the block",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/capabilities/{capabilityId}/logo" : {
      "get" : {
        "operationId" : "getLogo",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of the capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/categories" : {
      "get" : {
        "operationId" : "listCategories",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryListDto"
                }
              }
            },
            "description" : "OK"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the available category groupings of capabilities",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-internal-owner" : "_team-hub",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/categories/{categoryId}/capabilities" : {
      "get" : {
        "operationId" : "listCategoryCapabilities",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of hub capabilities in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The sort order. Possible sort orders are:\n * 'name' (without quotes): Sort by name ascending.\n * '-name' (without quotes): Sort by name descending.\n",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filter the results for items matching the query string within id, name, author, description or any tag.\n- Case insensitive\n- Checks if text is contained in any of the text fields:\n- - id, name, author, description, tags",
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If provided, will skip the desired number of results, allowing for pagination in combination with page size",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "categoryId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityListDto"
                }
              }
            },
            "description" : "OK"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the available capabilities of a category",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-internal-owner" : "_team-hub",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/distributed" : {
      "get" : {
        "operationId" : "listCapabilities_1",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of hub capabilities in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The sort order. Possible sort orders are:\n * 'name' (without quotes): Sort by name ascending.\n * '-name' (without quotes): Sort by name descending.\n",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filter the results for items matching the query string within id, name, author, description or any tag.\n- Case insensitive\n- Checks if text is contained in any of the text fields:\n- - id, name, author, description, tags",
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If provided, will skip the desired number of results, allowing for pagination in combination with page size",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityListDto"
                }
              }
            },
            "description" : "OK"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the available capabilities in your environment",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/distributed/{capabilityId}" : {
      "get" : {
        "operationId" : "getDetails_1",
        "parameters" : [ {
          "description" : "CapabilityId of the resource to be fetched",
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityDetailsDto"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The details of the given capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/distributed/{capabilityId}/author/logo" : {
      "get" : {
        "operationId" : "getAuthorLogo_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of an author of the resource",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/distributed/{capabilityId}/description-blocks/{blockIndex}/images/{imageIndex}" : {
      "get" : {
        "operationId" : "getBlockImage_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "blockIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "imageIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Get the image that that is provided in the block",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/distributed/{capabilityId}/logo" : {
      "get" : {
        "operationId" : "getLogo_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of the capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/extensions" : {
      "get" : {
        "operationId" : "listCapabilities_2",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of hub capabilities in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The sort order. Possible sort orders are:\n * 'name' (without quotes): Sort by name ascending.\n * '-name' (without quotes): Sort by name descending.\n",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filter the results for items matching the query string within id, name, author, description or any tag.\n- Case insensitive\n- Checks if text is contained in any of the text fields:\n- - id, name, author, description, tags",
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If provided, will skip the desired number of results, allowing for pagination in combination with page size",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityListDto"
                }
              }
            },
            "description" : "OK"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the available capabilities in your environment",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/extensions/{capabilityId}" : {
      "get" : {
        "operationId" : "getDetails_2",
        "parameters" : [ {
          "description" : "CapabilityId of the resource to be fetched",
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityDetailsDto"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The details of the given capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/extensions/{capabilityId}/addToEnvironment" : {
      "post" : {
        "operationId" : "addToEnvironment",
        "parameters" : [ {
          "description" : "CapabilityId of the Extension",
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisteredExtensionResultDto"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Bad request"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Registers the given extension version in the environment",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-internal-owner" : "_team-hub",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensions.write` (Write extensions)", "`hub.read` (Read HUB)", "`extensionEnvironment.write` (Write extension environment configurations)", "`extensionEnvironment.read` (Read extension environment configurations)" ]
      }
    },
    "/hub/extensions/{capabilityId}/author/logo" : {
      "get" : {
        "operationId" : "getAuthorLogo_2",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of an author of the resource",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/extensions/{capabilityId}/description-blocks/{blockIndex}/images/{imageIndex}" : {
      "get" : {
        "operationId" : "getBlockImage_2",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "blockIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "imageIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Get the image that that is provided in the block",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/extensions/{capabilityId}/logo" : {
      "get" : {
        "operationId" : "getLogo_2",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of the capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/extensions/{capabilityId}/releases/{version}/artifact" : {
      "get" : {
        "operationId" : "getArtifact",
        "parameters" : [ {
          "description" : "CapabilityId of the Extension",
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Extension version",
          "in" : "path",
          "name" : "version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/zip" : { }
            },
            "description" : "Ok - download file"
          },
          "404" : {
            "content" : {
              "application/zip" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found"
          },
          "503" : {
            "content" : {
              "application/zip" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Artifact of the given version of an extension",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-internal-owner" : "_team-hub",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/extensions/{capabilityId}/updateToLatestVersion" : {
      "post" : {
        "operationId" : "updateToLatestVersion",
        "parameters" : [ {
          "description" : "CapabilityId of the Extension",
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegisteredExtensionResultDto"
                }
              }
            },
            "description" : "OK"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Bad request"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the given extension to the latest available version in the environment",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-internal-owner" : "_team-hub",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`extensions.write` (Write extensions)", "`hub.read` (Read HUB)", "`extensionEnvironment.write` (Write extension environment configurations)", "`extensionEnvironment.read` (Read extension environment configurations)", "`extensionConfigurations.read` (Read extension monitoring configurations)", "`extensionConfigurations.write` (Write extension monitoring configurations)" ]
      }
    },
    "/hub/plugins" : {
      "get" : {
        "operationId" : "listCapabilities_3",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of hub capabilities in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The sort order. Possible sort orders are:\n * 'name' (without quotes): Sort by name ascending.\n * '-name' (without quotes): Sort by name descending.\n",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filter the results for items matching the query string within id, name, author, description or any tag.\n- Case insensitive\n- Checks if text is contained in any of the text fields:\n- - id, name, author, description, tags",
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If provided, will skip the desired number of results, allowing for pagination in combination with page size",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityListDto"
                }
              }
            },
            "description" : "OK"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the available capabilities in your environment",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/plugins/{capabilityId}" : {
      "get" : {
        "operationId" : "getDetails_3",
        "parameters" : [ {
          "description" : "CapabilityId of the resource to be fetched",
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityDetailsDto"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The details of the given capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/plugins/{capabilityId}/author/logo" : {
      "get" : {
        "operationId" : "getAuthorLogo_3",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of an author of the resource",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/plugins/{capabilityId}/description-blocks/{blockIndex}/images/{imageIndex}" : {
      "get" : {
        "operationId" : "getBlockImage_3",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "blockIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "imageIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Get the image that that is provided in the block",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/plugins/{capabilityId}/logo" : {
      "get" : {
        "operationId" : "getLogo_3",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of the capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/plugins/{capabilityId}/releases/{version}/artifact" : {
      "get" : {
        "operationId" : "getArtifact_1",
        "parameters" : [ {
          "description" : "CapabilityId of the Plugin",
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Plugin version",
          "in" : "path",
          "name" : "version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/zip" : { }
            },
            "description" : "Ok - download file"
          },
          "404" : {
            "content" : {
              "application/zip" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found"
          },
          "503" : {
            "content" : {
              "application/zip" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Artifact of the given version of a plugin",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-internal-owner" : "_team-hub",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/registered" : {
      "get" : {
        "operationId" : "listCapabilities_4",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of hub capabilities in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The sort order. Possible sort orders are:\n * 'name' (without quotes): Sort by name ascending.\n * '-name' (without quotes): Sort by name descending.\n",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filter the results for items matching the query string within id, name, author, description or any tag.\n- Case insensitive\n- Checks if text is contained in any of the text fields:\n- - id, name, author, description, tags",
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If provided, will skip the desired number of results, allowing for pagination in combination with page size",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityListDto"
                }
              }
            },
            "description" : "OK"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the available capabilities in your environment",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/registered/{capabilityId}" : {
      "get" : {
        "operationId" : "getDetails_4",
        "parameters" : [ {
          "description" : "CapabilityId of the resource to be fetched",
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityDetailsDto"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The details of the given capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/registered/{capabilityId}/author/logo" : {
      "get" : {
        "operationId" : "getAuthorLogo_4",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of an author of the resource",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/registered/{capabilityId}/description-blocks/{blockIndex}/images/{imageIndex}" : {
      "get" : {
        "operationId" : "getBlockImage_4",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "blockIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "imageIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Get the image that that is provided in the block",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/registered/{capabilityId}/logo" : {
      "get" : {
        "operationId" : "getLogo_4",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of the capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/technologies" : {
      "get" : {
        "operationId" : "listCapabilities_5",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of hub capabilities in a single response payload. \n\nThe maximal allowed page size is 100. \n\nIf not set, 20 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The sort order. Possible sort orders are:\n * 'name' (without quotes): Sort by name ascending.\n * '-name' (without quotes): Sort by name descending.\n",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filter the results for items matching the query string within id, name, author, description or any tag.\n- Case insensitive\n- Checks if text is contained in any of the text fields:\n- - id, name, author, description, tags",
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If provided, will skip the desired number of results, allowing for pagination in combination with page size",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityListDto"
                }
              }
            },
            "description" : "OK"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the available capabilities in your environment",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/technologies/{capabilityId}" : {
      "get" : {
        "operationId" : "getDetails_5",
        "parameters" : [ {
          "description" : "CapabilityId of the resource to be fetched",
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CapabilityDetailsDto"
                }
              }
            },
            "description" : "OK"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Not found"
          },
          "503" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Unavailable"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The details of the given capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/technologies/{capabilityId}/author/logo" : {
      "get" : {
        "operationId" : "getAuthorLogo_5",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of an author of the resource",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/technologies/{capabilityId}/description-blocks/{blockIndex}/images/{imageIndex}" : {
      "get" : {
        "operationId" : "getBlockImage_5",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "blockIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "in" : "path",
          "name" : "imageIndex",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Get the image that that is provided in the block",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/hub/technologies/{capabilityId}/logo" : {
      "get" : {
        "operationId" : "getLogo_5",
        "parameters" : [ {
          "in" : "path",
          "name" : "capabilityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Not found"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "The logo icon of the capability",
        "tags" : [ "Hub Capabilities" ],
        "x-feature-flag" : "HUB_REST_API_V2",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`hub.read` (Read HUB)" ]
      }
    },
    "/licensing/entitlement" : {
      "get" : {
        "operationId" : "getEntitlement",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntitlementState"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Returns current entitlement state of the environment.",
        "tags" : [ "Licensing" ],
        "x-feature-flag" : "ENABLE_LICENSING_REST_API",
        "x-internal-owner" : "stefan.stani",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-token-scopes" : [ "`licensing.read` (Read licensing information)" ]
      }
    },
    "/logs/aggregate" : {
      "get" : {
        "description" : "Returns the aggregated number of occurrences of log values divided into time slots. \n\nIt is possible that the timeframe covered by results exceeds the specified timeframe. In that case the request returns fewer time slots than specified in the **timeBuckets** query parameter.",
        "operationId" : "getLogHistogramData",
        "parameters" : [ {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions).",
          "in" : "query",
          "name" : "query",
          "schema" : {
            "default" : "",
            "type" : "string"
          }
        }, {
          "description" : "The number of time slots in the result. \n\nThe query timeframe is divided equally into the specified number of slots. \n\nThe minimum length of a slot is 1 ms. \n\nIf not set, 1 is used.",
          "in" : "query",
          "name" : "timeBuckets",
          "schema" : {
            "default" : 1,
            "format" : "int32",
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "The maximum number of values in each group. \n\nYou can get up to 100 values per group. \n\nIf not set, 10 is used.",
          "in" : "query",
          "name" : "maxGroupValues",
          "schema" : {
            "default" : 10,
            "format" : "int32",
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "The groupings to be included in the response. \n\nYou can specify several groups in the following format: `groupBy=status&groupBy=log.source`. \n\nIf not set, all possible groups are returned. You can use this option to check for possible grouping values. \n\nUnique log data attributes (high-cardinality attributes) for example, `span_id` or `trace_id` cannot be used for grouping.",
          "in" : "query",
          "name" : "groupBy",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AggregatedLog"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets aggregated log records",
        "tags" : [ "Logs" ],
        "x-feature-flag" : "LOGS_REST_API_V2",
        "x-internal-owner" : "kasper.kulikowski",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`logs.read` (Read logs)" ]
      }
    },
    "/logs/export" : {
      "get" : {
        "description" : "Returns the first *X* records (specified in the **pageSize** query parameter).\n\n Unlike the **search** API, this API does not split the result into slices and has no limit for the total number of records. Log records are sorted by the criteria specified in the **sort** query parameter.\n\n In order to fetch large amount of records (exceeding the **pageSize** value), one should repeat the **export** call with **nextPageKey** param.\n\n",
        "operationId" : "exportLogRecords",
        "parameters" : [ {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The number of results per result page.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "default" : 1000,
            "format" : "int64",
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions).",
          "in" : "query",
          "name" : "query",
          "schema" : {
            "default" : "",
            "type" : "string"
          }
        }, {
          "description" : "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first). \n\nWhen millisecond resolution provided by the timestamp is not enough, log records are sorted based on the order in which they appear in the log source (remote process writing to REST API endpoint or remote process from which logs are collected).",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "default" : "-timestamp",
            "pattern" : "^[+-]?[a-z]+$",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportedLogRecordList"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Exports log records",
        "tags" : [ "Logs" ],
        "x-feature-flag" : "LOGS_REST_API_EXPORT_ENDPOINT",
        "x-internal-owner" : "kasper.kulikowski",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`logs.read` (Read logs)" ]
      }
    },
    "/logs/ingest" : {
      "post" : {
        "description" : "Ingested logs are stored in the indexed log storage. \n\nThis endpoint requires an ActiveGate with the **Log Analytics Collector** module enabled. \n\nThe maximum payload size of a single request is **5 MB**. Requests with a greater payload are rejected, and the API returns a 413 response code.\n\nIf the ingested payload is a JSON array, the maximum array size is **5000**. Requests with a greater payload are rejected, and the API returns a 413 response code.\n\n<br />**Log events per minute (SaaS)**: \n\nTrial tenants: 10k, paid one: 100k per minute by default. \n\nIf your log data stream within your cluster exceeds the limit, all log events above the limit are ignored. \n\n<br />**Log events per minute (Managed)**: \n\n10k/minute per cluster by default. \n\nIf your log data stream within your cluster exceeds the limit, all log events above the limit are ignored. \n\nIf you increase resources (RAM) in your nodes, you can increase the limit based on the cluster resources size using an API call or Cluster Management Console (CMC). \n\n<br />Refresh cluster limit using the API call \n\nSee [Update log events per cluster for Log Monitoring](https://dt-url.net/f123yeu). \n\n<br />Refresh cluster limit using Cluster Management Console (CMC) \n\n1. In the CMC, select **Environments** and the environment for which you wish to update the total log events per cluster. \n\n2. On the environment details page, in the **Cluster overload prevention settings** section, select the **Refresh cluster limit**. \n\n**High-cardinality attributes:** \n\nUnique log data attributes (high-cardinality attributes) such as `span_id` and `trace_id` generate unnecessarily excessive facet lists that may impact log viewer performance. Because of this, they aren't listed in log viewer facets. You can still use them in a log viewer advanced search query. \n\n",
        "operationId" : "storeLog",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "examples" : {
                "JSON array representing two events." : {
                  "description" : "JSON array representing two events.",
                  "summary" : "JSON format",
                  "value" : [ {
                    "content" : "Exception: Custom error log sent via Generic Log Ingest",
                    "custom.attribute" : "attribute value",
                    "log.source" : "/var/log/syslog",
                    "severity" : "error",
                    "timestamp" : "2022-01-17T22:12:31.0000"
                  }, {
                    "content" : "Exception: Custom error log sent via Generic Log Ingest",
                    "log.source" : "/var/log/syslog",
                    "timestamp" : "2022-01-17T22:12:35.0000"
                  }, {
                    "content" : "Exception: Custom error log sent via Generic Log Ingest",
                    "log.source" : "/var/log/syslog"
                  }, {
                    "content" : "Exception: Custom error log sent via Generic Log Ingest"
                  } ]
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/LogMessageJson"
              }
            },
            "text/plain; charset=utf-8" : {
              "examples" : {
                "Plain text message representing a single log event" : {
                  "description" : "Plain text message representing a single log event",
                  "summary" : "Plain text format",
                  "value" : "example log content"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/LogMessagePlain"
              }
            }
          },
          "description" : "The body of the request. Contains one or more log events to be ingested. \n\nThe endpoint accepts one of the following payload types, defined by the **Accept** header: \n\n* `text/plain`: supports only one log event. \n* `application/json`: supports multiple log events in a single payload."
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessEnvelope"
                }
              }
            },
            "description" : "Only a part of input events were ingested due to event size limits or JSON parsing issues."
          },
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "402" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. You can't add more logs to the storage, because you are out of [Davis Data Units](https://dt-url.net/dduLog) (DDU). Purchase additional DDUs."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist. This may happen when no ActiveGate is available with the Log Analytics Collector module enabled."
          },
          "413" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Request payload size is too big. This may happen when the payload byte size exceeds the limit or when the ingested payload is a JSON array with the size exceeding the limit."
          },
          "429" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Too Many Requests. This happens when log ingest is disabled."
          },
          "501" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The server either does not recognize the request method, or it lacks the ability to fulfil the request. May happen when indexed log storage is not enabled."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "storage:logs:write" ]
        } ],
        "summary" : "Pushes log records to Dynatrace",
        "tags" : [ "Logs" ],
        "x-active-gate-module" : "LOG_ANALYTICS_COLLECTOR",
        "x-internal-owner" : "tomasz.jasinski",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`logs.ingest` (Ingest logs)" ]
      }
    },
    "/logs/monitoring/agents" : {
      "get" : {
        "description" : "Global switch determines whether Log Monitoring should be enabled \nfor all existing agents as well as newly connected ones. When it's enabled, internal agent config is ignored.",
        "operationId" : "getGlobalMonitoringStatus",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Global_Log_Monitoring_Agents_State"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Get status of global Log Monitoring switch",
        "tags" : [ "Log Monitoring - Agents" ],
        "x-feature-flag" : "LOG_MONITORING_AGENTS_REST_API",
        "x-internal-owner" : "michal.gawin",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.read` (Read settings)" ]
      },
      "patch" : {
        "description" : "Setting the switch to true will cause all the connected agents to have Log Monitoringenabled, this will override the value on internal agent config, setting it to false, will require enabling of Log Monitoring per agent.",
        "operationId" : "setGlobalMonitoringStatus",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Global_Log_Monitoring_Agents_State"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Global_Log_Monitoring_Agents_State"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Set whether global Log Monitoring switch should be enabled.",
        "tags" : [ "Log Monitoring - Agents" ],
        "x-feature-flag" : "LOG_MONITORING_AGENTS_REST_API",
        "x-internal-owner" : "michal.gawin",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.write` (Write settings)" ]
      }
    },
    "/logs/monitoring/agents/hosts" : {
      "get" : {
        "description" : "Returns a list with all hosts along with information whether monitoring is enabled per local host agent config.",
        "operationId" : "getHosts",
        "parameters" : [ {
          "in" : "query",
          "name" : "enabled",
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hosts"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Get the status of monitoring on all hosts.",
        "tags" : [ "Log Monitoring - Agents" ],
        "x-feature-flag" : "LOG_MONITORING_AGENTS_REST_API",
        "x-internal-owner" : "michal.gawin",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.read` (Read settings)" ]
      },
      "patch" : {
        "description" : "Sets whether monitoring should be enabled in hosts agent config specified in a list.",
        "operationId" : "setHosts",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hosts"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hosts"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Set monitoring on specified hosts.",
        "tags" : [ "Log Monitoring - Agents" ],
        "x-feature-flag" : "LOG_MONITORING_AGENTS_REST_API",
        "x-internal-owner" : "michal.gawin",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.write` (Write settings)" ]
      }
    },
    "/logs/monitoring/agents/hosts/{hostId}" : {
      "get" : {
        "description" : "Returns whether monitoring is enabled for local host agent.",
        "operationId" : "getByHostId",
        "parameters" : [ {
          "in" : "path",
          "name" : "hostId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Host"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Get the status of monitoring on specified host.",
        "tags" : [ "Log Monitoring - Agents" ],
        "x-feature-flag" : "LOG_MONITORING_AGENTS_REST_API",
        "x-internal-owner" : "michal.gawin",
        "x-maturity" : "IN_DEVELOPMENT",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.read` (Read settings)" ]
      }
    },
    "/logs/search" : {
      "get" : {
        "description" : "Returns the first *X* records (specified in the **limit** query parameter). Log records are sorted by the criteria specified in the **sort** query parameter. \n\nIf the query is too large to be processed in a single request, it is divided into slices. In that case the first response contains the **nextSliceKey** cursor for the second slice. Use it in the **nextSliceKey** query parameter to obtain the second slice, which contains **nextSliceKey** cursor for the third slice, and so on. \n\nResults can be distributed unevenly between slices and some slices might be empty.",
        "operationId" : "getLogRecords",
        "parameters" : [ {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The desired amount of log records. \n\nThe maximal allowed limit is 1000. \n\nIf not set, 1000 is used.",
          "in" : "query",
          "name" : "limit",
          "schema" : {
            "default" : 1000,
            "format" : "int32",
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "The log search query. \n\nThe query must use the [Dynatrace search query language](https://dt-url.net/pe03s6f). \n\nThe query has a limit of 20 relations (logical operators between simple expressions (`AND`, `OR`) or comparison operators (`=`, `!=`, `<`, `<=`, `>`, `>=`) in simple expressions).",
          "in" : "query",
          "name" : "query",
          "schema" : {
            "default" : "",
            "type" : "string"
          }
        }, {
          "description" : "Defines the ordering of the log records.\n\nEach field has a sign prefix (+/-) for sorting order. If no sign prefix is set, then the `+` option will be applied. \n\nCurrently, ordering is available only for the timestamp (+timestamp for the oldest records first, or -timestamp for the newest records first). \n\nWhen millisecond resolution provided by the timestamp is not enough, log records are sorted based on the order in which they appear in the log source (remote process writing to REST API endpoint or remote process from which logs are collected).",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "default" : "-timestamp",
            "pattern" : "^[+-]?[a-z]+$",
            "type" : "string"
          }
        }, {
          "description" : "The cursor for the next slice of results. You can find it in the **nextSliceKey** field of the previous response. \n\nThe first slice is always returned if you don't specify this parameter. \n\nIf this parameter is set, all other query parameters are ignored.",
          "in" : "query",
          "name" : "nextSliceKey",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LogRecordsList"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Reads log records",
        "tags" : [ "Logs" ],
        "x-feature-flag" : "LOGS_REST_API_V2",
        "x-internal-owner" : "kasper.kulikowski",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`logs.read` (Read logs)" ]
      }
    },
    "/metrics" : {
      "get" : {
        "description" : "You can narrow down the output by selecting metrics in the **metricSelector** field. \n\nYou can additionally limit the output by using pagination: \n\n1. Specify the number of results per page in the **pageSize** query parameter. \n\n2. Then use the cursor from the **nextPageKey** field of the response in the **nextPageKey** query parameter to obtain subsequent pages. All other query parameters must be omitted.",
        "operationId" : "allMetrics",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of metric schemata in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.\n\n If a value higher than 500 is used, only 500 results per page are returned.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Selects metrics for the query by their keys.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\nYou can select a full set of related metrics by using a trailing asterisk (`*`) wildcard. For example, `builtin:host.*` selects all host-based metrics and `builtin:*` selects all Dynatrace-provided metrics. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax.\n\n Only `aggregation`, `merge`, `parents`, and `splitBy` transformations are supported by this endpoint.\n\n If the metric key contains any symbols you must quote (`\"`) the key. The following characters inside of a quoted metric key must be escaped with a tilde (`~`):\n\n* Quotes (`\"`)\n* Tildes (`~`) \n\nFor example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents: Type \"APACHE\"** you must specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents: Type ~\"APACHE~\"\"` \n\n\n\n To find metrics based on a search term, rather than metricId, use the **text** query parameter instead of this one.",
          "in" : "query",
          "name" : "metricSelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Metric registry search term. Only show metrics that contain the term in their key, display name, or description. Use the `metricSelector` parameter instead of this one to select a complete metric hierarchy instead of doing a text-based search.",
          "in" : "query",
          "name" : "text",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Defines the list of metric properties included in the response. \n\n`metricId` is **always** included in the result. The following additional properties are available: \n\n* `displayName`: The name of the metric in the user interface. Enabled by default. \n* `description`: A short description of the metric. Enabled by default. \n* `unit`: The unit of the metric. Enabled by default. \n* `tags`: The tags of the metric. \n+ `dduBillable`:  An indicator whether the usage of metric consumes [Davis data units](https://dt-url.net/ddu). \n* `created`:  The timestamp (UTC milliseconds) when the metrics has been created. \n* `lastWritten`:  The timestamp (UTC milliseconds) when metric data points have been written for the last time. \n* `aggregationTypes`: The list of allowed aggregations for the metric. Note that it may be different after a [transformation](https://dt-url.net/metricSelector) is applied. \n* `defaultAggregation`: The default aggregation of the metric. It is used when no aggregation is specified or the `:auto` transformation is set. \n* `dimensionDefinitions`: The fine metric division (for example, process group and process ID for some process-related metric). \n* `transformations`: A list of [transformations](https://dt-url.net/metricSelector) that can be applied to the metric.\n* `entityType`: A list of entity types supported by the metric.\n* `minimumValue`: The minimum allowed value of the metric.\n* `maximumValue`: The maximum allowed value of the metric.\n* `rootCauseRelevant`: Whether (true or false) the metric is related to a root cause of a problem. A root-cause relevant metric represents a strong indicator for a faulty component.\n* `impactRelevant`: Whether (true or false) the metric is relevant to a problem's impact. An impact-relevant metric is highly dependent on other metrics and changes because an underlying root-cause metric has changed.\n* `metricValueType`: The type of the metric's value. You have these options:\n\t * `score`: A score metric is a metric where high values indicate a good situation, while low values indicate trouble. An example of such a metric is a success rate.\n\t * `error`: An error metric is a metric where high values indicate trouble, while low values indicate a good situation. An example of such a metric is an error count.\n* `latency`: The latency of the metric, in minutes. The latency is the expected reporting delay (for example, caused by constraints of cloud vendors or other third-party data sources) between the observation of a metric data point and its availability in Dynatrace. The allowed value range is from `1` to `60` minutes.\n* `metricSelector`: The underlying metric selector used by a func: metric.\n* `scalar`: Indicates whether the metric expression resolves to a scalar (`true`) or to a series (`false`). \nA scalar result always contains one data point. The amount of data points in a series result depends on the resolution you're using. \n* `resolutionInfSupported`: If `true`, resolution=Inf can be applied to the metric query. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+aggregationTypes,-description`).\n\nIf you specify just one property, the response contains the metric key and the specified property. To return metric keys only, specify `metricId` here.",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulted set of metrics to those that have data points within the specified timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\n",
          "in" : "query",
          "name" : "writtenSince",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The metadata scope of the query. Only metrics with specified properties are included to the response. \n\nYou can set one or more of the following criteria. Values are case-sensitive and the `EQUALS` operator is used. If several values are specified, the **OR** logic applies. \n\n* `unit(\"unit-1\",\"unit-2\")` \n* `tags(\"tag-1\",\"tag-2\")` \n* `dimensionKey(\"dimkey\")` You can specify only one value. The filtering applies only to dimensions that were written within the last 14 days.\n\nTo set several criteria, separate them with a comma (`,`). For example, `tags(\"feature\",\"cloud\"),unit(\"Percent\"),dimensionKey(\"location\")`. Only results matching **all** criteria are included in response. \n\nFor example, to list metrics that have the tags **feature** AND **cloud** with a unit of **Percent** OR **MegaByte** AND a dimension with a dimension key **location**, use this **metadataSelector**: `tags(\"feature\"),unit(\"Percent\",\"MegaByte\"),tags(\"cloud\"),dimensionKey(\"location\")`.",
          "in" : "query",
          "name" : "metadataSelector",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptorCollection"
                }
              },
              "text/csv; header=absent; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptorCollection"
                }
              },
              "text/csv; header=present; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptorCollection"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "description" : "Syntax or validation error. **metricSelector** or **fields** have syntactic or semantic errors."
          },
          "404" : {
            "description" : "A metric has not been found."
          },
          "406" : {
            "description" : "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Lists all available metrics",
        "tags" : [ "Metrics" ],
        "x-internal-owner" : "stefan.moschinski",
        "x-token-scopes" : [ "`metrics.read` (Read metrics)" ]
      }
    },
    "/metrics/ingest" : {
      "post" : {
        "operationId" : "ingest",
        "requestBody" : {
          "content" : {
            "text/plain; charset=utf-8" : {
              "example" : "server.cpu.temperature,cpu.id=0 42",
              "schema" : {
                "type" : "string"
              }
            }
          },
          "description" : "Data points, provided in the [line protocol](https://dt-url.net/5d63ic1). Each line represents a single data point.",
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "The provided metric data points are accepted and will be processed in the background."
          },
          "400" : {
            "description" : "Some data points are invalid. Valid data points are accepted and will be processed in the background."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "storage:metrics:write" ]
        } ],
        "summary" : "Pushes metric data points to Dynatrace",
        "tags" : [ "Metrics" ],
        "x-active-gate-module" : "METRICS_INGEST",
        "x-internal-owner" : "stefan.moschinski",
        "x-token-scopes" : [ "`metrics.ingest` (Ingest metrics)" ]
      }
    },
    "/metrics/query" : {
      "get" : {
        "description" : "The following limits apply: \n* The amount of aggregated data points in the response is limited to 1,000 \n* The amount of series in the response is limited to 1,000 \n   * The amount of data points per series is limited to 10,080 (minutes of one week) \n   * The overall amount of data points is limited to 100,000 \n\nThe **dataPointCountRatio** specifies the ratio of queried data points divided by the maximum number of data points per metric that are allowed in a single query.\nThe **dimensionCountRatio** specifies the ratio of queried dimension tuples divided by the maximum number of dimension tuples allowed in a single query.",
        "operationId" : "query",
        "parameters" : [ {
          "description" : "Selects metrics for the query by their keys. You can select up to 10 metrics for one query.\n\n You can specify multiple metric keys separated by commas (for example, `metrickey1,metrickey2`). To select multiple metrics belonging to the same parent, list the last part of the required metric keys in parentheses, separated by commas, while keeping the common part untouched. For example, to list the `builtin:host.cpu.idle` and `builtin:host.cpu.user` metric, write: `builtin:host.cpu.(idle,user)`. \n\n\n\n If the metric key contains any symbols you must quote (`\"`) the key. The following characters inside of a quoted metric key must be escaped with a tilde (`~`):\n\n* Quotes (`\"`)\n* Tildes (`~`) \n\nFor example, to query the metric with the key of **ext:selfmonitoring.jmx.Agents: Type \"APACHE\"** you must specify this selector: \n\n `\"ext:selfmonitoring.jmx.Agents: Type ~\"APACHE~\"\"` \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax.",
          "in" : "query",
          "name" : "metricSelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The desired resolution of data points. \n\nYou can use one of the following options: \n* The desired amount of data points. This is the default option. This is a reference number of points, which is not necessarily equal to the number of the returned data points. \n* The desired timespan between data points. This is a reference timespan, which is not necessarily equal to the returned timespan. To use this option, specify the unit of the timespan. \n\nValid units for the timespan are: \n* `m`: minutes \n* `h`: hours \n* `d`: days \n* `w`: weeks \n* `M`: months \n* `y`: years \n\nIf not set, the default is **120 data points**.\n\nFor example: \n\n* Get data points which are 10 minutes apart: `resolution=10m` \n* Get data points which are 3 weeks apart: `resolution=3w`",
          "in" : "query",
          "name" : "resolution",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Specifies the entity scope of the query. Only data points delivered by matched entities are included in response. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\nUse the [`GET /metrics/{metricId}`](https://dt-url.net/6z23ifk) call to fetch the list of possible entity types for your metric. \n\nTo set a universal scope matching all entities, omit this parameter.",
          "in" : "query",
          "name" : "entitySelector",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricData"
                }
              },
              "text/csv; header=absent; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricData"
                }
              },
              "text/csv; header=present; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricData"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "description" : "Syntax or validation error. From and to parameters, entitySelector or resolution are incorrect individually or in their combined meaning."
          },
          "404" : {
            "description" : "A metric has not been found."
          },
          "406" : {
            "description" : "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets data points of the specified metrics",
        "tags" : [ "Metrics" ],
        "x-internal-owner" : "stefan.moschinski",
        "x-token-scopes" : [ "`metrics.read` (Read metrics)" ]
      }
    },
    "/metrics/{metricKey}" : {
      "delete" : {
        "description" : "Deletion cannot be undone! You can't delete a metric if it has data points ingested within the last two hours.",
        "operationId" : "delete",
        "parameters" : [ {
          "description" : "The key of the required metric. \n\n",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Success. The deletion of the metric has been triggered."
          },
          "400" : {
            "description" : "Failed. The metric has been written within the last two hours."
          },
          "404" : {
            "description" : "Failed. The metric cannot be found or the key cannot be parsed."
          },
          "500" : {
            "description" : "Failed. The deletion of metric dimensions failed."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Deletes the specified metric",
        "tags" : [ "Metrics" ],
        "x-internal-owner" : "stefan.moschinski",
        "x-token-scopes" : [ "`metrics.write` (Write metrics)" ]
      },
      "get" : {
        "operationId" : "metric",
        "parameters" : [ {
          "description" : "The key of the required metric. \n\nYou can set additional transformation operators, separated by a colon (`:`). See [Metrics selector transformations](https://dt-url.net/metricSelector) in Dynatrace Documentation for additional information on available result transformations and syntax.",
          "in" : "path",
          "name" : "metricKey",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptor"
                }
              },
              "text/csv; header=absent; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptor"
                }
              },
              "text/csv; header=present; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MetricDescriptor"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "description" : "A metric has not been found."
          },
          "406" : {
            "description" : "Not acceptable. The requested media type is not supported. Check the **Accept** header of your request."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets the descriptor of the specified metric",
        "tags" : [ "Metrics" ],
        "x-internal-owner" : "stefan.moschinski",
        "x-token-scopes" : [ "`metrics.read` (Read metrics)" ]
      }
    },
    "/networkZoneSettings" : {
      "get" : {
        "operationId" : "getNetworkZoneSettings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkZoneSettings"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:network-zones:read" ]
        } ],
        "summary" : "Gets the global configuration of network zones",
        "tags" : [ "Network zones" ],
        "x-internal-owner" : "florian.aistleithner",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`networkZones.read` (Read network zones)" ]
      },
      "put" : {
        "operationId" : "updateNetworkZoneSettings",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkZoneSettings"
              }
            }
          },
          "description" : "The JSON body of the request. Contains global configuration of network zones.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Success. The global network zones configuration has been updated. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:network-zones:write" ]
        } ],
        "summary" : "Updates the global configuration of network zones",
        "tags" : [ "Network zones" ],
        "x-internal-owner" : "florian.aistleithner",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`networkZones.write` (Write network zones)" ]
      }
    },
    "/networkZones" : {
      "get" : {
        "operationId" : "getAllNetworkZones",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkZoneList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:network-zones:read" ]
        } ],
        "summary" : "Lists all existing network zones",
        "tags" : [ "Network zones" ],
        "x-internal-owner" : "florian.aistleithner",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`networkZones.read` (Read network zones)" ]
      }
    },
    "/networkZones/{id}" : {
      "delete" : {
        "description" : "You can only delete an empty network zone (a zone that no ActiveGate or OneAgent is using). \n\n If the network zone is used as an alternative zone for any OneAgent, it will be automatically removed from the list of possible alternatives.",
        "operationId" : "deleteNetworkZone",
        "parameters" : [ {
          "description" : "The ID of the network zone to be deleted.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. See error message in the response body for details."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:network-zones:write" ]
        } ],
        "summary" : "Deletes the specified network zone",
        "tags" : [ "Network zones" ],
        "x-internal-owner" : "florian.aistleithner",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`networkZones.write` (Write network zones)" ]
      },
      "get" : {
        "operationId" : "getSingleNetworkZone",
        "parameters" : [ {
          "description" : "The ID of the required network zone.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkZone"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:network-zones:read" ]
        } ],
        "summary" : "Gets parameters of the specified network zone",
        "tags" : [ "Network zones" ],
        "x-internal-owner" : "florian.aistleithner",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`networkZones.read` (Read network zones)" ]
      },
      "put" : {
        "description" : "If the network zone with the specified ID does not exist, a new network zone is created. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase.",
        "operationId" : "createOrUpdateNetworkZone",
        "parameters" : [ {
          "description" : "The ID of the network zone to be updated. \n\n If you set the ID in the body as well, it must match this ID. \n\n The ID is not case sensitive. Dynatrace stores the ID in lowercase.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/NetworkZone"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the network zone.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityShortRepresentation"
                }
              }
            },
            "description" : "Success. The new network zone has been created. The response body contains the ID of the new network zone."
          },
          "204" : {
            "description" : "Success. The network zone has been updated. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:network-zones:write" ]
        } ],
        "summary" : "Updates an existing network zone or creates a new one",
        "tags" : [ "Network zones" ],
        "x-internal-owner" : "florian.aistleithner",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`networkZones.write` (Write network zones)" ]
      }
    },
    "/networkZones/{id}/hostConnectionStatistics" : {
      "get" : {
        "operationId" : "getHostStats",
        "parameters" : [ {
          "description" : "The ID of the required network zone.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of hosts: \n\n* `all`: All hosts using the zone. \n* `configuredButNotConnectedOnly`: Hosts from the network zone that use other zones. \n* `connectedAsAlternativeOnly`: Hosts that use the network zone as an alternative. \n* `connectedAsFailoverOnly`: Hosts from other zones that use the zone (not configured as an alternative) even though ActiveGates of higher priority are available. \n* `connectedAsFailoverWithoutOwnActiveGatesOnly`: Hosts from other zones that use the zone (not configured as an alternative) and **no** ActiveGates of higher priority are available. \n\nIf not set, `all` is used.",
          "in" : "query",
          "name" : "filter",
          "schema" : {
            "default" : "all",
            "enum" : [ "all", "configuredButNotConnectedOnly", "connectedAsAlternativeOnly", "connectedAsFailoverOnly", "connectedAsFailoverWithoutOwnActiveGatesOnly" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NetworkZoneConnectionStatistics"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:network-zones:read" ]
        } ],
        "summary" : "Gets the statistics about hosts using the network zone",
        "tags" : [ "Network zones" ],
        "x-internal-owner" : "florian.aistleithner",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`networkZones.read` (Read network zones)" ]
      }
    },
    "/otlp/v1/traces" : {
      "post" : {
        "description" : "This endpoint can be targeted by OpenTelemetry exporters. Ingested traces are forwarded to the server.",
        "operationId" : "ingestTrace",
        "requestBody" : {
          "content" : {
            "application/x-protobuf" : {
              "schema" : {
                "items" : {
                  "format" : "byte",
                  "type" : "string"
                },
                "type" : "array"
              }
            }
          },
          "description" : "An ExportTraceServiceRequest message in binary protobuf format.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has been received and will be processed."
          },
          "400" : {
            "description" : "The request could not be processed. This may happen if the message is malformed."
          },
          "500" : {
            "description" : "The request could not be processed due to an internal server error."
          },
          "503" : {
            "description" : "The service is currently unavailable. This may happen if the module is paused."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Implementation of the OTLP/HTTP protocol for trace ingest.",
        "tags" : [ "OpenTelemetry Protocol (OTLP) Trace Ingest" ],
        "x-active-gate-module" : "OTLP_INGEST",
        "x-internal-owner" : "wolfgang.ziegler",
        "x-token-scopes" : [ "`openTelemetryTrace.ingest` (Ingest OpenTelemetry traces)" ]
      }
    },
    "/problems" : {
      "get" : {
        "operationId" : "getProblems",
        "parameters" : [ {
          "description" : "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).\n\n The field is valid only for the current page of results. You must set it for each page you're requesting.",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 50 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two hours is used (`now-2h`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Defines the scope of the query. Only problems matching the specified criteria are included into response. \n\nYou can add one or several of the criteria listed below. For each criterion you can specify multiple comma-separated values, unless stated otherwise. If several values are specified, the **OR** logic applies. All values must be quoted. \n* Status: `status(\"open\")` or `status(\"closed\")`. You can specify only one status. \n* Severity level: `severityLevel(\"level-1\",\"level-2\")`. Find the possible values in the description of the **severityLevel** field of the response.\n* Impact level: `impactLevel(\"level-11\",\"level-2\")` Find the possible values in the description of the **impactLevel** field of the response.\n* Root cause entity: `rootCauseEntity(\"id-1\", \"id-2\")`. \n* Management zone ID: `managementZoneIds(\"mZId-1\", \"mzId-2\")`. \n* Management zone name: `managementZones(\"value-1\",\"value-2\")`. \n* Impacted entities: `impactedEntities(\"id-1\", \"id-2\")`. \n* Affected entities: `affectedEntities(\"id-1\", \"id-2\")`. \n* Type of affected entities: `affectedEntityTypes(\"value-1\",\"value-2\")`. \n* Problem ID: `problemId(\"id-1\", \"id-2\")`. \n* Alerting profile ID: `problemFilterIds(\"id-1\", \"id-2\")`. \n* Alerting profile name (contains, case-insensitive): `problemFilterNames(\"value-1\",\"value-2\")`. \n* Alerting profile name (exact match, case-insensitive): `problemFilterNames.equals(\"value-1\",\"value-2\")`. \n* Entity tags: `entityTags(\"[context]key:value\",\"key:value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. If a value-only tag has a colon (`:`) in it, you must escape the colon with a backslash(`\\`). Otherwise, the tag will be parsed as a `key:value tag`. All tag values are case-sensitive.\n* Display ID of the problem: `displayId(\"id-1\", \"id-2\")`. \n* Under maintenance: `underMaintenance(true|false)`. Shows (true) or hides (false) all problems created during maintenance mode.\n* Text search: `text(\"value\")`. Text search on the following fields: problem title, event titles, displayId and the id of affected and impacted entities. The text search is case insensitive, partial matching and based on a relevance score. Therefore the `relevance` sort option should be used to get the most relevant problems first. The special characters `~` and `\"` need to be escaped using a `~` (e.g. double quote search `text(\"~\"\")`). The search value is limited to 30 characters.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response. \n\n",
          "in" : "query",
          "name" : "problemSelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The entity scope of the query. You must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\nThe maximum number of entities that may be selected is limited to 10000.\n\n",
          "in" : "query",
          "name" : "entitySelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Specifies a set of comma-separated (`,`) fields for sorting in the problem list.\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n * `status`: problem status (`+` open problems first or `-` closed problems first)\n * `startTime`: problem start time (`+` old problems first or `-` new problems first) \n * `relevance`: problem relevance (`+` least relevant problems first or `-` most relevant problems first) - can be used only in combination with text search \n\nIf no prefix is set, `+` is used. \n\nYou can specify several levels of sorting. For example, `+status,-startTime` sorts problems by status, open problems first. Within the status, problems are sorted by start time, oldest first.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problems"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:problems:read" ]
        } ],
        "summary" : "Lists problems observed within the specified timeframe",
        "tags" : [ "Problems" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`problems.read` (Read problems)" ]
      }
    },
    "/problems/{problemId}" : {
      "get" : {
        "operationId" : "getProblem",
        "parameters" : [ {
          "description" : "The ID of the required problem.",
          "in" : "path",
          "name" : "problemId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of additional problem properties you can add to the response. \n\nThe following properties are available (all other properties are always included and you can't remove them from the response): \n\n* `evidenceDetails`: The details of the root cause.\n* `impactAnalysis`: The impact analysis of the problem on other entities/users.\n* `recentComments`: A list of the most recent comments to the problem.\n\nTo add properties, specify them as a comma-separated list (for example, `evidenceDetails,impactAnalysis`).",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:problems:read" ]
        } ],
        "summary" : "Gets the properties of the specified problem",
        "tags" : [ "Problems" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`problems.read` (Read problems)" ]
      }
    },
    "/problems/{problemId}/close" : {
      "post" : {
        "operationId" : "closeProblem",
        "parameters" : [ {
          "description" : "The ID of the required problem.",
          "in" : "path",
          "name" : "problemId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProblemCloseRequestDtoImpl"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the closing comment on the problem."
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemCloseResult"
                }
              }
            },
            "description" : "Success"
          },
          "204" : {
            "description" : "The problem is closed already the request hasn't been executed."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:problems:write" ]
        } ],
        "summary" : "Closes the specified problem and adds a closing comment on it",
        "tags" : [ "Problems" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`problems.write` (Write problems)" ]
      }
    },
    "/problems/{problemId}/comments" : {
      "get" : {
        "operationId" : "getComments",
        "parameters" : [ {
          "description" : "The ID of the required problem.",
          "in" : "path",
          "name" : "problemId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters except the optional **fields** parameter. \n",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of comments in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 10 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentsList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:problems:read" ]
        } ],
        "summary" : "Gets all comments on the specified problem",
        "tags" : [ "Problems" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`problems.read` (Read problems)" ]
      },
      "post" : {
        "operationId" : "createComment",
        "parameters" : [ {
          "description" : "The ID of the required problem.",
          "in" : "path",
          "name" : "problemId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommentRequestDtoImpl"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the comment to be added."
        },
        "responses" : {
          "201" : {
            "description" : "Success. The comment has been added."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:problems:write" ]
        } ],
        "summary" : "Adds a new comment on the specified problem",
        "tags" : [ "Problems" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`problems.write` (Write problems)" ]
      }
    },
    "/problems/{problemId}/comments/{commentId}" : {
      "delete" : {
        "operationId" : "deleteComment",
        "parameters" : [ {
          "description" : "The ID of the required problem.",
          "in" : "path",
          "name" : "problemId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the required comment.",
          "in" : "path",
          "name" : "commentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The comment has been deleted."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:problems:write" ]
        } ],
        "summary" : "Deletes the specified comment from a problem",
        "tags" : [ "Problems" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`problems.write` (Write problems)" ]
      },
      "get" : {
        "operationId" : "getComment",
        "parameters" : [ {
          "description" : "The ID of the required problem.",
          "in" : "path",
          "name" : "problemId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the required comment.",
          "in" : "path",
          "name" : "commentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:problems:read" ]
        } ],
        "summary" : "Gets the specified comment on a problem",
        "tags" : [ "Problems" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`problems.read` (Read problems)" ]
      },
      "put" : {
        "operationId" : "updateComment",
        "parameters" : [ {
          "description" : "The ID of the required problem.",
          "in" : "path",
          "name" : "problemId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the required comment.",
          "in" : "path",
          "name" : "commentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommentRequestDtoImpl"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the updated comment."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The comment has been updated."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:problems:write" ]
        } ],
        "summary" : "Updates the specified comment on a problem",
        "tags" : [ "Problems" ],
        "x-internal-owner" : "mostafa.abdelkhalek",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`problems.write` (Write problems)" ]
      }
    },
    "/releases" : {
      "get" : {
        "operationId" : "getReleases",
        "parameters" : [ {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of Releases in a single response payload. \n\nThe maximal allowed page size is 1000. \n\nIf not set, 100 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Get your Releases (`false`) or a set of demo Releases (`true`).",
          "in" : "query",
          "name" : "demo",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Defines the scope of the query. Only Releases matching the provided criteria are included in the response.\n\nYou can add one or several of the criteria listed below.\n* Management zone: type(PROCESS_GROUP_INSTANCE),mzName(\"ManagementZone-A\"). Filters for all releases in the given management zone. The filter is case-sensitive.\n* Monitoring state: monitoringState(\"Active\") or monitoringState(\"Inactive\"). You can specify only one monitoring state. \n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Security vulnerability: affectedBySecurityProblem(\"Detected\") or affectedBySecurityProblem(\"Not detected\"). You can specify only one security vulnerability state.\n* Name: entityName(\"name\"). Filters for all releases that contain the given value in their name. The filter is case-insensitive.\n* Entity ID: entityId(\"id\").\n* Product: releasesProduct(\"product\"). Filters for all releases that contain the given value in their product. The filter is case-insensitive.\n* Stage: releasesStage(\"stage\"). Filters for all releases that contain the given value in their stage. The filter is case-insensitive.\n* Version: releasesVersion(\"version\"). Filters for all releases that contain the given value in their version. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/releases?releasesSelector=name(\"Server\"),monitoringState(\"Active\"),healthState(\"HEALTHY\"),releasesVersion(\"1.0.7\").\n\nThe special characters ~ and \" need to be escaped using a ~ (e.g. double quote search entityName(\"~\"\").",
          "in" : "query",
          "name" : "releasesSelector",
          "schema" : {
            "default" : "",
            "type" : "string"
          }
        }, {
          "description" : "Specifies the field that is used for sorting the releases list.\nThe field has a sign prefix (+/-) which corresponds to the sorting order ('+' for ascending and '-' for descending). If no sign prefix is set, then the default ascending sorting order will be applied. You can sort by the following properties:\n* 'product': Product name\n* 'name': Release name\n* 'stage': Stage name\n* 'version': Version\n* 'instances': Instances\n* 'traffic': Traffic\n\nIf not set, the ascending order sorting for name is applied.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "default" : "name",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Releases"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:releases:read" ]
        } ],
        "summary" : "Returns all releases",
        "tags" : [ "Releases" ],
        "x-internal-owner" : "lama.sayed",
        "x-maturity" : "EARLY_ADOPTER",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`releases.read` (Read releases)" ]
      }
    },
    "/rum/cities/{countryCode}" : {
      "get" : {
        "operationId" : "getRegionsAndCities",
        "parameters" : [ {
          "description" : "Specify the country code to query.",
          "in" : "path",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionList"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the regions and their cities, for a given country code.",
        "tags" : [ "Geographic regions" ],
        "x-internal-owner" : "paul.johnson",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`geographicRegions.read` (Read Geographic regions)" ]
      }
    },
    "/rum/cities/{countryCode}/{regionCode}" : {
      "get" : {
        "operationId" : "getCities",
        "parameters" : [ {
          "description" : "Specify the country code to query.",
          "in" : "path",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Specify the region code to query.",
          "in" : "path",
          "name" : "regionCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionList"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the cities, for a given region of a country code.",
        "tags" : [ "Geographic regions" ],
        "x-internal-owner" : "paul.johnson",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`geographicRegions.read` (Read Geographic regions)" ]
      }
    },
    "/rum/countries" : {
      "get" : {
        "operationId" : "getCountries",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the countries",
        "tags" : [ "Geographic regions" ],
        "x-internal-owner" : "paul.johnson",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`geographicRegions.read` (Read Geographic regions)" ]
      }
    },
    "/rum/regions" : {
      "get" : {
        "operationId" : "getRegions",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryListWithRegions"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all the countries and their regions",
        "tags" : [ "Geographic regions" ],
        "x-internal-owner" : "paul.johnson",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`geographicRegions.read` (Read Geographic regions)" ]
      }
    },
    "/rum/regions/{countryCode}" : {
      "get" : {
        "operationId" : "getRegionsOfCountry",
        "parameters" : [ {
          "description" : "Specify the country code to query.",
          "in" : "path",
          "name" : "countryCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RegionListSingleCountry"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all regions for a given country code",
        "tags" : [ "Geographic regions" ],
        "x-internal-owner" : "paul.johnson",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`geographicRegions.read` (Read Geographic regions)" ]
      }
    },
    "/securityProblems" : {
      "get" : {
        "operationId" : "getSecurityProblems",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of security problems in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Defines the scope of the query. Only security problems matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Status: `status(\"value\")`. Find the possible values in the description of the **status** field of the response. If not set, all security problems are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Risk level: `riskLevel(\"value\")`. The Davis risk level. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum risk score: `minRiskScore(\"5.5\")`. The Davis minimum risk score. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum risk score: `maxRiskScore(\"5.5\")`. The Davis maximum risk score. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* Base risk level: `baseRiskLevel(\"value\")`. The Base risk level from the CVSS. Find the possible values in the description of the **riskLevel** field of the response.\n* Minimum base risk score: `minBaseRiskScore(\"5.5\")`. The minimum base risk score from the CVSS. The `GREATER THAN OR EQUAL TO` operator is used. Specify a number between `1.0` and `10.0`.\n* Maximum base risk score: `maxBaseRiskScore(\"5.5\")`. The maximum base risk score from the CVSS. The `LESS THAN` operator is used. Specify a number between `1.0` and `10.0`.\n* External vulnerability ID contains: `externalVulnerabilityIdContains(\"id-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* External vulnerability ID: `externalVulnerabilityId(\"id-1\",\"id-2\")`. \n* CVE ID: `cveId(\"id\")`.\n* Risk assessment `riskAssessment(\"value-1\",\"value-2\")` Possible values are `EXPOSED`, `SENSITIVE`, `EXPLOIT` and `VULNERABLE_FUNCTION_IN_USE`.\n* Related host ID: `relatedHostIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related host name: `relatedHostNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related host name contains: `relatedHostNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes cluster ID: `relatedKubernetesClusterIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes cluster name: `relatedKubernetesClusterNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes cluster name contains: `relatedKubernetesClusterNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Related Kubernetes workload ID: `relatedKubernetesWorkloadIds(\"value-1\", \"value-2\")`. Specify Dynatrace entity IDs here.\n* Related Kubernetes workload name: `relatedKubernetesWorkloadNames(\"value-1\", \"value-2\")`. Values are case-sensitive.\n* Related Kubernetes workload name contains: `relatedKubernetesWorkloadNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n* Management zone ID: `managementZoneIds(\"mzId-1\",\"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\",\"name-2\")`. Values are case-sensitive.\n* Affected process group ID: `affectedPgIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Affected process group name: `affectedPgNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Affected process group name contains: `affectedPgNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Vulnerable component ID: `vulnerableComponentIds(\"componentId-1\", \"componentId-2\")`. Specify component IDs here.\n* Vulnerable component name: `vulnerableComponentNames(\"name-1\", \"name-2\")`. Values are case-sensitive.\n* Vulnerable component name contains: `vulnerableComponentNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n* Host tags: `hostTags(\"hostTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Process group tags: `pgTags(\"pgTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Process group instance tags: `pgiTags(\"pgiTag-1\")`. The `CONTAINS` operator is used. Maximum value length is 48 characters.\n* Tags: `tags(\"tag-1\")`. The `CONTAINS` operator is used. This selector picks hosts, process groups, and process group instances at the same time. Maximum value length is 48 characters.\n* Display ID: `displayIds(\"S-1234\",\"S-5678\")`. The `EQUALS` operator is used.\n* Technology: `technology(\"technology-1\",\"technology-2\")`. Find the possible values in the description of the **technology** field of the response. The `EQUALS` operator is used.\n* Vulnerability type: `vulnerabilityType(\"type-1\",\"type-2\")`. Possible values are `THIRD_PARTY`, `CODE_LEVEL`, `RUNTIME`.\n\nRisk score and risk category are mutually exclusive (cannot be used at the same time).\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`",
          "in" : "query",
          "name" : "securityProblemSelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Specifies one or more fields for sorting the security problem list. Multiple fields can be concatenated using a comma (`,`) as a separator (e.g. `+status,-timestamp`).\n\nYou can sort by the following properties with a sign prefix for the sorting order. \n\n* `status`: The security problem status (`+` open first or `-` resolved first) \n* `muted`: The security problem mute state (`+` unmuted first or `-` muted first) \n* `technology`: The security problem technology \n* `firstSeenTimestamp`: The timestamp of the first occurrence of the security problem (`+` new problems first or `-` old problems first) \n* `lastUpdatedTimestamp`: The timestamp of the last update of the security problem (`+` recently updated problems first or `-`  earlier updated problems first)\n* `securityProblemId`: The auto-generated ID of the security problem (`+` lower number first or `-` higher number first) \n* `externalVulnerabilityId`: The ID of the external vulnerability (`+` lower number first or `-` higher number first) \n* `displayId`: The display ID (`+` lower number first or `-` higher number first) \n* `riskAssessment.riskScore`: The Davis security score (`+` lower score first or `-` higher score first) \n* `riskAssessment.riskLevel`: The Davis security level (`+` lower level first or `-` higher level first) \n* `riskAssessment.exposure`: Whether the problem is exposed to the internet \n* `riskAssessment.dataAssets`: Whether data assets are affected \n* `riskAssessment.vulnerableFunctionUsage`: Whether vulnerable functions are used \n\nIf no prefix is set, `+` is used.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityProblemList"
                }
              }
            },
            "description" : "Success. The response contains the list of security problems."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all security problems",
        "tags" : [ "Security problems" ],
        "x-feature-flag" : "CASP_SECURITY_PROBLEM_REST_API_V2",
        "x-internal-owner" : "_team-echelon",
        "x-maturity" : "EARLY_ADOPTER",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`securityProblems.read` (Read security problems)" ]
      }
    },
    "/securityProblems/{id}" : {
      "get" : {
        "operationId" : "getSecurityProblem",
        "parameters" : [ {
          "description" : "The ID of the required security problem.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of additional security problem properties you can add to the response.\n\nThe following properties are available (all other properties are always included and you can't remove them from the response):\n\n* `riskAssessment`: A risk assessment of the security problem.\n* `managementZones`: The management zone where the security problem occurred.\n* `description`: The description of the vulnerability.\n* `events`: The security problem's last 10 events within the last 365 days, sorted from newest to oldest.\n* `vulnerableComponents`: A list of vulnerable components of the security problem. \n* `affectedEntities`: A list of affected entities of the security problem. \n* `exposedEntities`: A list of exposed entities of the security problem. \n* `reachableDataAssets`: A list of data assets reachable by affected entities of the security problem. \n* `relatedEntities`: A list of related entities of the security problem. \n* `relatedContainerImages`: A list of related container images of the security problem. \n* `relatedAttacks`: A list of attacks detected on the exposed security problem. \n\nTo add properties, specify them in a comma-separated list and prefix each property with a plus (for example, `+riskAssessment,+managementZones`).\n",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityProblemDetails"
                }
              }
            },
            "description" : "Success. The response contains parameters of the security problem."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets parameters of a security problem",
        "tags" : [ "Security problems" ],
        "x-feature-flag" : "CASP_SECURITY_PROBLEM_REST_API_V2",
        "x-internal-owner" : "_team-echelon",
        "x-maturity" : "EARLY_ADOPTER",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`securityProblems.read` (Read security problems)" ]
      }
    },
    "/securityProblems/{id}/events" : {
      "get" : {
        "operationId" : "getEventsForSecurityProblem",
        "parameters" : [ {
          "description" : "The ID of the required security problem.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of thirty days is used (`now-30d`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityProblemEventsList"
                }
              }
            },
            "description" : "Success. The response contains the list of security problem events."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all events of a security problem",
        "tags" : [ "Security problems" ],
        "x-feature-flag" : "CASP_SECURITY_PROBLEM_REST_API_EVENTS",
        "x-internal-owner" : "_team-echelon",
        "x-maturity" : "PREVIEW",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`securityProblems.read` (Read security problems)" ]
      }
    },
    "/securityProblems/{id}/mute" : {
      "post" : {
        "operationId" : "muteSecurityProblem",
        "parameters" : [ {
          "description" : "The ID of the required security problem.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityProblemMute"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the muting information."
        },
        "responses" : {
          "200" : {
            "description" : "Success. The security problem has been muted."
          },
          "204" : {
            "description" : "Not executed. The security problem is already muted."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Mutes a security problem",
        "tags" : [ "Security problems" ],
        "x-feature-flag" : "CASP_SECURITY_PROBLEM_REST_API_V2",
        "x-internal-owner" : "_team-echelon",
        "x-maturity" : "EARLY_ADOPTER",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`securityProblems.write` (Write security problems)" ]
      }
    },
    "/securityProblems/{id}/remediationItems" : {
      "get" : {
        "operationId" : "getRemediationItems",
        "parameters" : [ {
          "description" : "The ID of the required third-party security problem.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Defines the scope of the query. Only remediable entities matching the specified criteria are included in the response.\n\nYou can add one or more of the following criteria. Values are *not* case-sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Vulnerability state: `vulnerabilityState(\"value\")`. Find the possible values in the description of the **vulnerabilityState** field of the response. If not set, all entities are returned.\n* Muted: `muted(\"value\")`. Possible values are `TRUE` or `FALSE`.\n* Sensitive data asset assessment: `assessment.dataAssets(\"value\")` Possible values are `REACHABLE`, and `NOT_DETECTED`.\n* Network exposure assessment: `assessment.exposure(\"value\")` Possible values are `PUBLIC_NETWORK`, and `NOT_DETECTED`.\n* Vulnerable function usage assessment: `assessment.vulnerableFunctionUsage(\"value\")` Possible values are `IN_USE`, and `NOT_IN_USE`.\n* Vulnerable function in use contains: `assessment.vulnerableFunctionInUseContains(\"value\")`. Possible values are `class::function`, `class::` and `function`. The `CONTAINS` operator is used. Only vulnerable functions in use are considered.\n* Entity name contains: `entityNameContains(\"value-1\")`. The `CONTAINS` operator is used.\n\nTo set several criteria, separate them with a comma (`,`). Only results matching **all** criteria are included in the response.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`",
          "in" : "query",
          "name" : "remediationItemSelector",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemediationItemList"
                }
              }
            },
            "description" : "Success. The response contains the list of remediation items of a problem."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists remediation items of a third-party security problem",
        "tags" : [ "Security problems" ],
        "x-feature-flag" : "CASP_SECURITY_PROBLEM_REST_API_REMEDIATION_TRACKING",
        "x-internal-owner" : "_team-echelon",
        "x-maturity" : "EARLY_ADOPTER",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`securityProblems.read` (Read security problems)" ]
      }
    },
    "/securityProblems/{id}/remediationItems/{itemId}/muteState" : {
      "put" : {
        "operationId" : "setRemediationItemMuteState",
        "parameters" : [ {
          "description" : "The ID of the required third-party security problem.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the remediation item.",
          "in" : "path",
          "name" : "itemId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemediationItemMuteStateChange"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the mute state information to be applied."
        },
        "responses" : {
          "200" : {
            "description" : "Success. The requested mute state has been applied to the remediation item."
          },
          "204" : {
            "description" : "Not executed. The remediation item was previously put into the requested mute state by the same user with the same reason and comment."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Sets the mute state of a remediation item",
        "tags" : [ "Security problems" ],
        "x-feature-flag" : "CASP_SECURITY_PROBLEM_REST_API_REMEDIATION_TRACKING",
        "x-internal-owner" : "_team-echelon",
        "x-maturity" : "EARLY_ADOPTER",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`securityProblems.write` (Write security problems)" ]
      }
    },
    "/securityProblems/{id}/unmute" : {
      "post" : {
        "operationId" : "unmuteSecurityProblem",
        "parameters" : [ {
          "description" : "The ID of the required security problem.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityProblemUnmute"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the un-muting information."
        },
        "responses" : {
          "200" : {
            "description" : "Success. The security problem has been un-muted."
          },
          "204" : {
            "description" : "Not executed. The security problem is already un-muted."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Un-mutes a security problem",
        "tags" : [ "Security problems" ],
        "x-feature-flag" : "CASP_SECURITY_PROBLEM_REST_API_V2",
        "x-internal-owner" : "_team-echelon",
        "x-maturity" : "EARLY_ADOPTER",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`securityProblems.write` (Write security problems)" ]
      }
    },
    "/securityProblems/{id}/vulnerableFunctions" : {
      "get" : {
        "operationId" : "getVulnerableFunctions",
        "parameters" : [ {
          "description" : "The ID of the required third-party security problem.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Defines the scope of the query. Only vulnerable functions matching the specified criteria are included in the response.\n\nYou can add the following criteria. Values are *not* case sensitive and the `EQUALS` operator is used unless otherwise specified.\n\n* Management zone ID: `managementZoneIds(\"mzId-1\",\"mzId-2\")`.\n* Management zone name: `managementZones(\"name-1\",\"name-2\")`. Values are case sensitive.\n* Process group ID: `processGroupIds(\"pgId-1\", \"pgId-2\")`. Specify Dynatrace entity IDs here.\n* Process group name: `processGroupNames(\"name-1\", \"name-2\")`. Values are case sensitive.\n* Process group name contains: `processGroupNameContains(\"name-1\")`. The `CONTAINS` operator is used.\n\nSpecify the value of a criterion as a quoted string. The following special characters must be escaped with a tilde (`~`) inside quotes:\n* Tilde `~` \n* Quote `\"`",
          "in" : "query",
          "name" : "vulnerableFunctionsSelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Defines additional grouping types in which vulnerable functions should be displayed.\n\nYou can add one of the following grouping types.\n\n* Process group: `PROCESS_GROUP`",
          "in" : "query",
          "name" : "groupBy",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VulnerableFunctionsContainer"
                }
              }
            },
            "description" : "Success. The response contains the list of vulnerable functions."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all vulnerable functions and their usage for a third-party security problem",
        "tags" : [ "Security problems" ],
        "x-feature-flag" : "CASP_SECURITY_PROBLEM_REST_API_VULNERABLE_FUNCTIONS",
        "x-internal-owner" : "_team-echelon",
        "x-maturity" : "EARLY_ADOPTER",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`securityProblems.read` (Read security problems)" ]
      }
    },
    "/settings/effectiveValues" : {
      "get" : {
        "description" : "Lists effective settings values for selected schemas at a selected scope (or entity). This operation evaluates the hierarchy of persisted objects (see [/settings/objects](#/Settings%20-%20Objects/getSettingsObjects))\n\nIt will always return a result for a schema/scope combination, even if the schema would not be relevant to the given scope/entity.\n\nIf no object along the hierarchy is persisted, the default value as defined in the schema will be returned.",
        "operationId" : "getEffectiveSettingsValues",
        "parameters" : [ {
          "description" : "A list of comma-separated schema IDs to which the requested objects belong. \n\nOnly considered on load of the first page, when the **nextPageKey** is not set.",
          "in" : "query",
          "name" : "schemaIds",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The scope that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scope. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, this parameter is required. ",
          "in" : "query",
          "name" : "scope",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `origin,value`).",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "default" : "origin,value",
            "type" : "string"
          }
        }, {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EffectiveSettingsValuesList"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The specified schema or scope is not found."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Lists effective settings values",
        "tags" : [ "Settings - Objects" ],
        "x-internal-owner" : "hanno.neuer",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.read` (Read settings)" ]
      }
    },
    "/settings/objects" : {
      "get" : {
        "description" : "Lists persisted settings objects for selected schemas at selected scopes (or entities).\n\nIf nothing is persisted, no items will be returned.\n\nTo query the effective values (including schema defaults) please see [/settings/effectiveValues](#/Settings%20-%20Objects/getEffectiveSettingsValues).",
        "operationId" : "getSettingsObjects",
        "parameters" : [ {
          "description" : "A list of comma-separated schema IDs to which the requested objects belong. \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **scopes** is required. ",
          "in" : "query",
          "name" : "schemaIds",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of comma-separated scopes, that the requested objects target. \n\nThe selection only matches objects directly targeting the specified scopes. For example, `environment` will not match objects that target a host within environment. \n\nTo load the first page, when the **nextPageKey** is not set, either this parameter or **schemaIds** is required. ",
          "in" : "query",
          "name" : "scopes",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of fields to be included to the response. The provided set of fields replaces the default set. \n\n Specify the required top-level fields, separated by commas (for example, `objectId,value`).",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "default" : "objectId,value",
            "type" : "string"
          }
        }, {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of settings objects in a single response payload. \n\nThe maximal allowed page size is 500. \n\nIf not set, 100 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ObjectsList"
                }
              }
            },
            "description" : "Success"
          },
          "403" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Forbidden."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The specified schema or scope is not found."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Lists persisted settings objects",
        "tags" : [ "Settings - Objects" ],
        "x-internal-owner" : "hanno.neuer",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.read` (Read settings)" ]
      },
      "post" : {
        "description" : "You can upload several objects at once. In that case each object returns its own response code. Check the response body for details.",
        "operationId" : "postSettingsObjects",
        "parameters" : [ {
          "description" : "If `true`, the request runs only validation of the submitted settings objects, without saving them.",
          "in" : "query",
          "name" : "validateOnly",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/SettingsObjectCreate"
                },
                "type" : "array"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the settings objects."
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/SettingsObjectResponse"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Success"
          },
          "207" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/SettingsObjectResponse"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Multi-status: different objects in the payload resulted in different statuses."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/SettingsObjectResponse"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Failed. Schema validation failed."
          },
          "403" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Forbidden."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/SettingsObjectResponse"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          },
          "409" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/SettingsObjectResponse"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Failed. Conflicting resource."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Creates a new settings object",
        "tags" : [ "Settings - Objects" ],
        "x-internal-owner" : "hanno.neuer",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.write` (Write settings)" ]
      }
    },
    "/settings/objects/{objectId}" : {
      "delete" : {
        "operationId" : "deleteSettingsObjectByObjectId",
        "parameters" : [ {
          "description" : "The ID of the required settings object.",
          "in" : "path",
          "name" : "objectId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The update token of the object. You can use it to detect simultaneous modifications by different users. \n\nIt is generated upon retrieval (GET requests). If set on update (PUT request) or deletion, the update/deletion will be allowed only if there wasn't any change between the retrieval and the update. \n\nIf omitted on update/deletion, the operation overrides the current value or deletes it without any checks.",
          "in" : "query",
          "name" : "updateToken",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. Response doesn't have a body."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            },
            "description" : "Failed. Schema validation failed."
          },
          "403" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Forbidden."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          },
          "409" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            },
            "description" : "Failed. Conflicting resource."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Deletes the specified settings object",
        "tags" : [ "Settings - Objects" ],
        "x-internal-owner" : "hanno.neuer",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.write` (Write settings)" ]
      },
      "get" : {
        "operationId" : "getSettingsObjectByObjectId",
        "parameters" : [ {
          "description" : "The ID of the required settings object.",
          "in" : "path",
          "name" : "objectId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObject"
                }
              }
            },
            "description" : "Success"
          },
          "403" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Forbidden."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "No object available for the given objectId"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets the specified settings object",
        "tags" : [ "Settings - Objects" ],
        "x-internal-owner" : "hanno.neuer",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.read` (Read settings)" ]
      },
      "put" : {
        "operationId" : "putSettingsObjectByObjectId",
        "parameters" : [ {
          "description" : "The ID of the required settings object.",
          "in" : "path",
          "name" : "objectId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SettingsObjectUpdate"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the settings object."
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            },
            "description" : "Failed. Schema validation failed."
          },
          "403" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Forbidden."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          },
          "409" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SettingsObjectResponse"
                }
              }
            },
            "description" : "Failed. Conflicting resource."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Updates an existing settings object",
        "tags" : [ "Settings - Objects" ],
        "x-internal-owner" : "hanno.neuer",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.write` (Write settings)" ]
      }
    },
    "/settings/schemas" : {
      "get" : {
        "operationId" : "getAvailableSchemaDefinitions",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemaList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Lists available settings schemas",
        "tags" : [ "Settings - Schemas" ],
        "x-internal-owner" : "hanno.neuer",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.read` (Read settings)" ]
      }
    },
    "/settings/schemas/{schemaId}" : {
      "get" : {
        "operationId" : "getSchemaDefinition",
        "parameters" : [ {
          "description" : "The ID of the required schema.",
          "in" : "path",
          "name" : "schemaId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The version of the required schema. \n\n If not set, the most recent version is returned.",
          "in" : "query",
          "name" : "schemaVersion",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SchemaDefinitionRestDto"
                }
              }
            },
            "description" : "Success"
          },
          "403" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Forbidden."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The specified schema doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets parameters of the specified settings schema",
        "tags" : [ "Settings - Schemas" ],
        "x-internal-owner" : "hanno.neuer",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`settings.read` (Read settings)" ]
      }
    },
    "/slo" : {
      "get" : {
        "description" : "By default the values are calculated for the SLO's own timeframe. You can use a custom timeframe: \n\n1. Set the **timeFrame** parameter to `GTF`. \n2. Provide the timeframe in **from** and **to** parameters.",
        "operationId" : "getSlo",
        "parameters" : [ {
          "description" : "The cursor for the next page of results. You can find it in the **nextPageKey** field of the previous response. \n\nThe first page is always returned if you don't specify the **nextPageKey** query parameter. \n\nWhen the **nextPageKey** is set to obtain subsequent pages, you must omit all other query parameters. ",
          "in" : "query",
          "name" : "nextPageKey",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The amount of SLOs in a single response payload. \n\nThe maximal allowed page size is 10000. \n\nIf not set, 10 is used.",
          "in" : "query",
          "name" : "pageSize",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The scope of the query. Only SLOs matching the provided criteria are included in the response. \n\nYou can add one or several of the criteria listed below.\n* ID: id(\"id\"). Filters for an SLO with the given ID.\n* Name: name(\"name\"). Filters for an SLO with the given name. The filter is case-sensitive.\n* Health state: healthState(\"HEALTHY\") or healthState(\"UNHEALTHY\"). You can specify only one health state.\n* Text: text(\"value\"). Filters for all SLOs that contain the given value in their name or description. The filter is case-insensitive.\n\nTo set several criteria, separate them with comma (,). Only results matching all criteria are included in the response.\ne.g., .../api/v2/slo?sloSelector=name(\"Service Availability\"), .../api/v2/slo?sloSelector=id(\"id\"), .../api/v2/slo?sloSelector=text(\"Description\"),healthState(\"HEALTHY\").\n\nThe special characters ~ and \" need to be escaped using a ~ (e.g. double quote search text(\"~\"\").",
          "in" : "query",
          "name" : "sloSelector",
          "schema" : {
            "default" : "",
            "type" : "string"
          }
        }, {
          "description" : "The sorting of SLO entries: \n* `name`: Names in ascending order. \n* `-name`: Names in descending order. \n\nIf not set, the ascending order is used.",
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "default" : "name",
            "type" : "string"
          }
        }, {
          "description" : "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used.",
          "in" : "query",
          "name" : "timeFrame",
          "schema" : {
            "default" : "CURRENT",
            "enum" : [ "CURRENT", "GTF" ],
            "type" : "string"
          }
        }, {
          "description" : "Only SLOs on the given page are included in the response. The first page has the index '1'.",
          "in" : "query",
          "name" : "pageIdx",
          "schema" : {
            "default" : 1,
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          }
        }, {
          "description" : "Get your SLOs (`false`) or a set of demo SLOs (`true`).",
          "in" : "query",
          "name" : "demo",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Get your SLOs without them being evaluated (`false`) or with evaluations (`true`) with maximum `pageSize` of 25.",
          "in" : "query",
          "name" : "evaluate",
          "schema" : {
            "default" : false,
            "type" : "boolean"
          }
        }, {
          "description" : "Get your enabled SLOs (`true`), disabled ones (`false`) or both enabled and disabled ones (`all`).",
          "in" : "query",
          "name" : "enabledSlos",
          "schema" : {
            "default" : "true",
            "enum" : [ "ALL", "FALSE", "TRUE" ],
            "type" : "string"
          }
        }, {
          "description" : "Get your global SLOs (`true`) regardless of the selected filter or filter them out (`false`).",
          "in" : "query",
          "name" : "showGlobalSlos",
          "schema" : {
            "default" : true,
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SLOs"
                }
              }
            },
            "description" : "Success. The response contains the parameters and calculated values of the requested SLO."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:slo:read" ]
        } ],
        "summary" : "Lists all available SLOs along with calculated values",
        "tags" : [ "Service-level objectives" ],
        "x-internal-owner" : "lama.sayed",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`slo.read` (Read SLO)" ]
      },
      "post" : {
        "operationId" : "createSlo",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SloConfigItemDtoImpl"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the parameters of the new SLO.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new SLO has been created. Response doesn't have a body. The **location** response header contains the ID of the new SLO.",
            "headers" : {
              "location" : {
                "description" : "The location of the new resource created by this request.",
                "style" : "simple"
              }
            }
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          },
          "409" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Conflicting resource."
          },
          "500" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Internal server error."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:slo:write" ]
        } ],
        "summary" : "Creates a new SLO",
        "tags" : [ "Service-level objectives" ],
        "x-internal-owner" : "lama.sayed",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`slo.write` (Write SLO)" ]
      }
    },
    "/slo/{id}" : {
      "delete" : {
        "operationId" : "deleteSlo",
        "parameters" : [ {
          "description" : "The ID of the required SLO.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The SLO has been deleted. Response doesn't have a body."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          },
          "409" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Conflicting resource."
          },
          "500" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Internal server error."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:slo:write" ]
        } ],
        "summary" : "Deletes an SLO",
        "tags" : [ "Service-level objectives" ],
        "x-internal-owner" : "lama.sayed",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`slo.write` (Write SLO)" ]
      },
      "get" : {
        "description" : "If **from** and **to** parameters are provided, the SLO is calculated for that timeframe; otherwise the SLO's own timeframe is used.",
        "operationId" : "getSloById",
        "parameters" : [ {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The ID of the required SLO.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        }, {
          "description" : "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used.",
          "in" : "query",
          "name" : "timeFrame",
          "schema" : {
            "default" : "CURRENT",
            "enum" : [ "CURRENT", "GTF" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SLO"
                }
              }
            },
            "description" : "Success. The response contains the parameters and calculated values of the requested SLO."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:slo:read" ]
        } ],
        "summary" : "Gets parameters and the calculated value of an SLO",
        "tags" : [ "Service-level objectives" ],
        "x-internal-owner" : "lama.sayed",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`slo.read` (Read SLO)" ]
      },
      "put" : {
        "operationId" : "updateSloById",
        "parameters" : [ {
          "description" : "The ID of the required SLO.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SloConfigItemDtoImpl"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the updated parameters of the SLO.",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "description" : "Failed. The requested resource doesn't exist."
          },
          "500" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Internal server error."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:slo:write" ]
        } ],
        "summary" : "Updates an existing SLO",
        "tags" : [ "Service-level objectives" ],
        "x-internal-owner" : "lama.sayed",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`slo.write` (Write SLO)" ]
      }
    },
    "/slo/{id}/alert" : {
      "post" : {
        "operationId" : "createAlert",
        "parameters" : [ {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of two weeks is used (`now-2w`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The timeframe to calculate the SLO values: \n\n* `CURRENT`: SLO's own timeframe. \n* `GTF`: timeframe specified by **from** and **to** parameters. \n\nIf not set, the `CURRENT` value is used.",
          "in" : "query",
          "name" : "timeFrame",
          "schema" : {
            "default" : "CURRENT",
            "enum" : [ "CURRENT", "GTF" ],
            "type" : "string"
          }
        }, {
          "description" : "The ID of the required SLO.",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "uuid",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AbstractSloAlertDto"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the parameters of the new SLO alert.",
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success. The new alert has been created. Response doesn't have a body. The **location** response header contains the ID of the new alert.",
            "headers" : {
              "location" : {
                "description" : "The location of the new resource created by this request.",
                "style" : "simple"
              }
            }
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The input is invalid."
          },
          "404" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. The requested resource doesn't exist."
          },
          "412" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Precondition for creating an SLO alert not fulfilled. The SLO func metric cannot be created or is not created by the SLO."
          },
          "500" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Internal server error."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api", "environment-api:slo:write" ]
        } ],
        "summary" : "Creates an alert of the provided alert type for an SLO.",
        "tags" : [ "Service-level objectives" ],
        "x-internal-owner" : "lama.sayed",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`slo.write` (Write SLO)" ]
      }
    },
    "/synthetic/config" : {
      "get" : {
        "operationId" : "getConfiguration",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticConfigDto"
                }
              }
            },
            "description" : "Success. The response contains synthetic related parameters defined for whole tenant."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations).",
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "x-feature-flag" : "SYNTHETIC_CONFIGURATION",
        "x-internal-owner" : "joanna.kozlowska",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`syntheticLocations.read` (Read synthetic locations)" ]
      },
      "put" : {
        "operationId" : "updateConfiguration",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticConfigDto"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticConfigDto"
                }
              }
            },
            "description" : "Success. The set of synthetic related parameters has been updated. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates set of synthetic related parameters defined for whole tenant (affects all monitors and all private locations).",
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "x-feature-flag" : "SYNTHETIC_CONFIGURATION",
        "x-internal-owner" : "joanna.kozlowska",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`syntheticLocations.write` (Write synthetic locations)" ]
      }
    },
    "/synthetic/execution/{monitorId}/{resultType}" : {
      "get" : {
        "operationId" : "getExecutionResult",
        "parameters" : [ {
          "description" : "Identifier of the HTTP monitor for which last execution result is returned.",
          "in" : "path",
          "name" : "monitorId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Defines the result type of the last HTTP monitor's execution.",
          "in" : "path",
          "name" : "resultType",
          "required" : true,
          "schema" : {
            "enum" : [ "SUCCESS", "FAILED" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the results to those executed by specified Synthetic location. Specify the ID of the location.",
          "in" : "query",
          "name" : "locationId",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MonitorExecutionResults"
                }
              }
            },
            "description" : "Success. The response contains detailed data."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets detailed information about the last execution of the specified HTTP monitor",
        "tags" : [ "Synthetic - HTTP monitor executions" ],
        "x-feature-flag" : "SYNTHETIC_TENANT_PROTO_VERSION_3",
        "x-internal-owner" : "piotr.mejer",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`DataExport` (Access problem and event feed, metrics, and topology)", "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/executions" : {
      "get" : {
        "operationId" : "getExecutions",
        "parameters" : [ {
          "description" : "Filters the resulting set of executions by their state.",
          "in" : "query",
          "name" : "executionState",
          "schema" : {
            "enum" : [ "SCHEDULED", "EXECUTED", "DATA_RETRIEVED" ],
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe for scheduling timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`).",
          "in" : "query",
          "name" : "schedulingFrom",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe for scheduling timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "schedulingTo",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe for execution timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`).",
          "in" : "query",
          "name" : "executionFrom",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe for execution timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "executionTo",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe for data delivering timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the maximum relative timeframe of six hours is used (`now-6h`).",
          "in" : "query",
          "name" : "dataDeliveryFrom",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe for data delivering timestamps. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "dataDeliveryTo",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of the executions by batch. Specify the ID of the batch.",
          "in" : "query",
          "name" : "batchId",
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Filters the resulting set of the executions by monitor synthetic monitor. Specify the ID of the monitor.",
          "in" : "query",
          "name" : "monitorId",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of the executions by Synthetic location. Specify the ID of the location.",
          "in" : "query",
          "name" : "locationId",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of executions by scheduled user.",
          "in" : "query",
          "name" : "userId",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticOnDemandExecution"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the list of all on-demand executions of synthetic monitors",
        "tags" : [ "Synthetic - On-demand monitor executions" ],
        "x-feature-flag" : "MONITOR_IMMEDIATE_EXECUTION",
        "x-internal-owner" : "piotr.mejer",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`syntheticExecutions.read` (Read synthetic monitor execution results)", "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/executions/batch" : {
      "post" : {
        "operationId" : "execute",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticOnDemandExecutionRequest"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the parameters of the triggered on-demand execution."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticOnDemandExecutionResult"
                }
              }
            },
            "description" : "Success. The monitor's execution response details"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Triggers on-demand executions for synthetic monitors",
        "tags" : [ "Synthetic - On-demand monitor executions" ],
        "x-feature-flag" : "MONITOR_IMMEDIATE_EXECUTION",
        "x-internal-owner" : "piotr.mejer",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`syntheticExecutions.write` (Write synthetic monitor executions)", "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/executions/batch/{batchId}" : {
      "get" : {
        "operationId" : "getBatch",
        "parameters" : [ {
          "description" : "The batch identifier of the executions",
          "in" : "path",
          "name" : "batchId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticOnDemandBatchStatus"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets summary information and the list of failed executions for the given batch ID",
        "tags" : [ "Synthetic - On-demand monitor executions" ],
        "x-feature-flag" : "MONITOR_IMMEDIATE_EXECUTION",
        "x-internal-owner" : "piotr.mejer",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`syntheticExecutions.read` (Read synthetic monitor execution results)", "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/executions/{executionId}" : {
      "get" : {
        "operationId" : "getExecution",
        "parameters" : [ {
          "description" : "The identifier of the on-demand execution",
          "in" : "path",
          "name" : "executionId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticOnDemandExecution"
                }
              }
            },
            "description" : "Success. The response contains basic information about the on-demand execution."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets basic results of the specified on-demand execution",
        "tags" : [ "Synthetic - On-demand monitor executions" ],
        "x-feature-flag" : "MONITOR_IMMEDIATE_EXECUTION",
        "x-internal-owner" : "piotr.mejer",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`syntheticExecutions.read` (Read synthetic monitor execution results)", "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/executions/{executionId}/fullReport" : {
      "get" : {
        "operationId" : "getExecutionFullReport",
        "parameters" : [ {
          "description" : "The identifier of the on-demand execution",
          "in" : "path",
          "name" : "executionId",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticOnDemandExecution"
                }
              }
            },
            "description" : "Success. The response contains detailed information about the on-demand execution."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets detailed results of the specified on-demand execution",
        "tags" : [ "Synthetic - On-demand monitor executions" ],
        "x-feature-flag" : "MONITOR_IMMEDIATE_EXECUTION",
        "x-internal-owner" : "piotr.mejer",
        "x-maturity" : "EARLY_ADOPTER",
        "x-token-scopes" : [ "`syntheticExecutions.read` (Read synthetic monitor execution results)", "`ExternalSyntheticIntegration` (Create and read synthetic monitors, locations, and nodes)", "`ReadSyntheticData` (Read synthetic monitors, locations, and nodes)" ]
      }
    },
    "/synthetic/locations" : {
      "get" : {
        "operationId" : "getLocations",
        "parameters" : [ {
          "description" : "Filters the resulting set of locations to those which are hosted on a specific cloud platform.",
          "in" : "query",
          "name" : "cloudPlatform",
          "schema" : {
            "enum" : [ "AWS", "AZURE", "ALIBABA", "GOOGLE_CLOUD", "OTHER" ],
            "type" : "string"
          }
        }, {
          "description" : "Filters the resulting set of locations to those of a specific type.",
          "in" : "query",
          "name" : "type",
          "schema" : {
            "enum" : [ "PUBLIC", "PRIVATE" ],
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticLocations"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all synthetic locations (both public and private) available for your environment",
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "x-internal-owner" : "piotr.mejer",
        "x-token-scopes" : [ "`syntheticLocations.read` (Read synthetic locations)" ]
      },
      "post" : {
        "operationId" : "addLocation",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateSyntheticLocation"
              }
            }
          },
          "description" : "The JSON body of the request. Contains parameters of the new private synthetic location."
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticLocationIdsDto"
                }
              }
            },
            "description" : "Success. The private location has been created. The response contains the ID of the new location."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Creates a new private synthetic location",
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "x-internal-owner" : "piotr.mejer",
        "x-token-scopes" : [ "`syntheticLocations.write` (Write synthetic locations)" ]
      }
    },
    "/synthetic/locations/status" : {
      "get" : {
        "operationId" : "getLocationsStatus",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticPublicLocationsStatus"
                }
              }
            },
            "description" : "Success. The response contains the public locations status."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Checks the status of public synthetic locations",
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "x-internal-owner" : "piotr.mejer",
        "x-token-scopes" : [ "`syntheticLocations.read` (Read synthetic locations)" ]
      },
      "put" : {
        "operationId" : "updateLocationsStatus",
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticPublicLocationsStatus"
              }
            }
          },
          "description" : "The new status of public synthetic locations."
        },
        "responses" : {
          "204" : {
            "description" : "Success. Locations status has been updated."
          },
          "409" : {
            "description" : "Conflict. Public locations couldn't be disabled because there are monitors assigned to them."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Changes the status of public synthetic locations",
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "x-internal-owner" : "piotr.mejer",
        "x-token-scopes" : [ "`syntheticLocations.write` (Write synthetic locations)" ]
      }
    },
    "/synthetic/locations/{locationId}" : {
      "delete" : {
        "operationId" : "removeLocation",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the private synthetic location to be deleted.",
          "in" : "path",
          "name" : "locationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success. The location has been deleted. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Deletes the specified private synthetic location",
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "x-internal-owner" : "piotr.mejer",
        "x-token-scopes" : [ "`syntheticLocations.write` (Write synthetic locations)" ]
      },
      "get" : {
        "operationId" : "getLocation",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the required location.",
          "in" : "path",
          "name" : "locationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SyntheticLocation"
                }
              }
            },
            "description" : "Success. The response contains parameters of the synthetic location."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets properties of the specified location",
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "x-internal-owner" : "piotr.mejer",
        "x-token-scopes" : [ "`syntheticLocations.read` (Read synthetic locations)" ]
      },
      "put" : {
        "description" : "For public locations you can only change the location status.",
        "operationId" : "updateLocation",
        "parameters" : [ {
          "description" : "The Dynatrace entity ID of the synthetic location to be updated.",
          "in" : "path",
          "name" : "locationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/SyntheticLocationUpdate"
              }
            }
          },
          "description" : "The JSON body of the request. Contains updated parameters of the location."
        },
        "responses" : {
          "204" : {
            "description" : "Success. The location has been updated. Response doesn't have a body."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Updates the specified synthetic location",
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "x-internal-owner" : "piotr.mejer",
        "x-token-scopes" : [ "`syntheticLocations.write` (Write synthetic locations)" ]
      }
    },
    "/synthetic/nodes" : {
      "get" : {
        "operationId" : "getNodes",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Nodes"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all synthetic nodes available in your environment",
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "x-internal-owner" : "piotr.mejer",
        "x-token-scopes" : [ "`syntheticLocations.read` (Read synthetic locations)" ]
      }
    },
    "/synthetic/nodes/{nodeId}" : {
      "get" : {
        "operationId" : "getNode",
        "parameters" : [ {
          "description" : "The ID of the required synthetic node.",
          "in" : "path",
          "name" : "nodeId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Node"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists properties of the specified synthetic node",
        "tags" : [ "Synthetic - Locations, nodes, and configuration" ],
        "x-internal-owner" : "piotr.mejer",
        "x-token-scopes" : [ "`syntheticLocations.read` (Read synthetic locations)" ]
      }
    },
    "/tags" : {
      "delete" : {
        "operationId" : "deleteTags",
        "parameters" : [ {
          "description" : "The key of the tag to be deleted. \n\nIf **deleteAllWithKey** is `true`, then all tags with this key are deleted. Otherwise, only tags with exact match of key **and** value are deleted. \n\nFor value-only tags, specify the value here.",
          "in" : "query",
          "name" : "key",
          "required" : true,
          "schema" : {
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "description" : "The value of the tag to be deleted. The value is ignored if **deleteAllWithKey** is `true`. \n\nFor value-only tags, specify the value in the **key** parameter.",
          "in" : "query",
          "name" : "value",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "* If `true`, all tags with the specified key are deleted, regardless of the value. \n* If `false`, only tags with exact match of key **and** value are deleted. \n\nIf not set, `false` is used.",
          "in" : "query",
          "name" : "deleteAllWithKey",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "description" : "Specifies the entities where you want to delete tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\n",
          "in" : "query",
          "name" : "entitySelector",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeletedEntityTags"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Deletes the specified tag from the specified entities",
        "tags" : [ "Monitored entities - Custom tags" ],
        "x-internal-owner" : "stefan.gradl",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`entities.write` (Write entities)" ]
      },
      "get" : {
        "description" : "Automatically applied tags and imported tags are not included.",
        "operationId" : "getTags",
        "parameters" : [ {
          "description" : "Specifies the entities where you want to read tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\n",
          "in" : "query",
          "name" : "entitySelector",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomEntityTags"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Gets a list of custom tags applied to the specified entities",
        "tags" : [ "Monitored entities - Custom tags" ],
        "x-internal-owner" : "stefan.gradl",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`entities.read` (Read entities)" ]
      },
      "post" : {
        "description" : "All existing tags remain unaffected.",
        "operationId" : "postTags",
        "parameters" : [ {
          "description" : "Specifies the entities where you want to update tags. \n\nYou must set one of these criteria: \n\n* Entity type: `type(\"TYPE\")` \n* Dynatrace entity ID: `entityId(\"id\")`. You can specify several IDs, separated by a comma (`entityId(\"id-1\",\"id-2\")`). All requested entities must be of the same type. \n\nYou can add one or several of the following criteria. Values are case-sensitive and the `EQUALS` operator is used unless otherwise specified. \n\n* Tag: `tag(\"value\")`. Tags in `[context]key:value`, `key:value`, and `value` formats are detected and parsed automatically. Any colons (`:`) that are part of the key or value must be escaped with a backslash(`\\`), otherwise, it will be interpreted as the separator between the key and the value. All tag values are case-sensitive. \n* Management zone ID: `mzId(123)` \n* Management zone name: `mzName(\"value\")`\n* Entity name: \n\t* `entityName.equals`: performs a non-casesensitive `EQUALS` query. \n\t* `entityName.startsWith`: changes the operator to `BEGINS WITH`. \n\t* `entityName.in`: enables you to provide multiple values. The `EQUALS` operator applies. \n\t* `caseSensitive(entityName.equals(\"value\"))`: takes any entity name criterion as an arguments and makes the value case-sensitive.\n* Health state (HEALTHY,UNHEALTHY): `healthState(\"HEALTHY\")`\n* First seen timestamp: `firstSeenTms.<operator>(now-3h)`. Use any timestamp format from the **from**/**to** parameters. \n\tThe following operators are available:\n\t* `lte`: earlier than or at the specified time\n\t* `lt`: earlier than the specified time\n\t* `gte`: later than or at the specified time\n\t* `gt`: later than the specified time\n* Entity attribute: `<attribute>(\"value1\",\"value2\")` and `<attribute>.exists()`. To fetch the list of available attributes, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **properties** field of the response. \n* Relationships: `fromRelationships.<relationshipName>()` and `toRelationships.<relationshipName>()`. The criterion takes an entity selector as an attribute. To fetch the list of available relationships, execute the [GET entity type](https://dt-url.net/2ka3ivt) request and check the **fromRelationships** and **toRelationships** fields.\n* Negation: `not(<criterion>)`. Inverts any criterion except for **type**. \n\nFor more information, see [Entity selector](https://dt-url.net/apientityselector) in Dynatrace Documentation. \n\nTo set several criteria, separate them with a comma (`,`). For example, `type(\"HOST\"),healthState(\"HEALTHY\")`. Only results matching **all** criteria are included in response. \n\nSupported string length is 2,000 characters. \n\n",
          "in" : "query",
          "name" : "entitySelector",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of 24 hours is used (`now-24h`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json; charset=utf-8" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddEntityTags"
              }
            }
          },
          "description" : "The JSON body of the request. Contains tags to be added to the matching entities."
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddedEntityTags"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Adds custom tags to the specified entities",
        "tags" : [ "Monitored entities - Custom tags" ],
        "x-internal-owner" : "stefan.gradl",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`entities.write` (Write entities)" ]
      }
    },
    "/tenantTokenRotation/cancel" : {
      "post" : {
        "description" : "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
        "operationId" : "cancelRotation",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TenantTokenConfig"
                }
              }
            },
            "description" : "Success. Rotation process has been cancelled. The current tenant token remains valid."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. There is no ongoing rotation process."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:tenant-token-rotation:write" ]
        } ],
        "summary" : "Cancels tenant token rotation",
        "tags" : [ "Access tokens - Tenant tokens" ],
        "x-internal-owner" : "florian.aistleithner",
        "x-token-scopes" : [ "`tenantTokenRotation.write` (Tenant token rotation)" ]
      }
    },
    "/tenantTokenRotation/finish" : {
      "post" : {
        "description" : "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
        "operationId" : "finishRotation",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TenantTokenConfig"
                }
              }
            },
            "description" : "Success. The rotation process is completed. The **active** field of the response contains the new tenant token."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "No ongoing rotation process."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:tenant-token-rotation:write" ]
        } ],
        "summary" : "Finishes tenant token rotation",
        "tags" : [ "Access tokens - Tenant tokens" ],
        "x-internal-owner" : "florian.aistleithner",
        "x-token-scopes" : [ "`tenantTokenRotation.write` (Tenant token rotation)" ]
      }
    },
    "/tenantTokenRotation/start" : {
      "post" : {
        "description" : "To learn how to rotate tokens, see [Token rotation](https://dt-url.net/1543sf6) in Dynatrace Documentation.",
        "operationId" : "startRotation",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TenantTokenConfig"
                }
              }
            },
            "description" : "Success. The new tenant token is created and will replace the old one. The **active** field of the response contains the new tenant token."
          },
          "400" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorEnvelope"
                }
              }
            },
            "description" : "Failed. Another rotation process is already in progress."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api:tenant-token-rotation:write" ]
        } ],
        "summary" : "Starts tenant token rotation",
        "tags" : [ "Access tokens - Tenant tokens" ],
        "x-internal-owner" : "florian.aistleithner",
        "x-token-scopes" : [ "`tenantTokenRotation.write` (Tenant token rotation)" ]
      }
    },
    "/ua/list/{entityType}" : {
      "get" : {
        "operationId" : "getListScreenDefinition",
        "parameters" : [ {
          "description" : "The entity type.",
          "in" : "path",
          "name" : "entityType",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A optional list screen state state id",
          "in" : "query",
          "name" : "stateId",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If true, screen config will be taken from settings, overriding default one. No effect for custom screens.",
          "in" : "query",
          "name" : "useLocalConfig",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of screen markers expressions",
          "in" : "query",
          "name" : "screenMarker",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Time zone offset for markers time formatting",
          "in" : "query",
          "name" : "timezone",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UAListScreenDefinition"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Provide a list screen definition for a given monitored entity type",
        "tags" : [ "Unified Analysis" ],
        "x-feature-flag" : "UA_REST_API_V2_PUBLIC_PREVIEW",
        "x-internal-owner" : "piotr.kuchta",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`unifiedAnalysis.read` (Read Unified Analysis page)" ]
      }
    },
    "/ua/list/{entityType}/state/{stateId}" : {
      "put" : {
        "operationId" : "storeListScreenState",
        "parameters" : [ {
          "description" : "The entity type.",
          "in" : "path",
          "name" : "entityType",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The screen state id that should be stored",
          "in" : "path",
          "name" : "stateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of screen markers expressions",
          "in" : "query",
          "name" : "screenMarker",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the screen state."
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Stored the provided list screen state and returns a screen state id that can be used to read the state date again",
        "tags" : [ "Unified Analysis" ],
        "x-feature-flag" : "UA_REST_API_V2_PUBLIC_PREVIEW",
        "x-internal-owner" : "piotr.kuchta",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`unifiedAnalysis.read` (Read Unified Analysis page)" ]
      }
    },
    "/ua/list/{entityType}/{screenType}" : {
      "get" : {
        "operationId" : "getListScreenDefinition_1",
        "parameters" : [ {
          "description" : "The entity type.",
          "in" : "path",
          "name" : "entityType",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The screen type. If not specified default is used",
          "in" : "path",
          "name" : "screenType",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A optional screen state state id",
          "in" : "query",
          "name" : "stateId",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A optional me sub type",
          "in" : "query",
          "name" : "meSubType",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If true, screen config will be taken from settings, overriding default one. No effect for custom screens.",
          "in" : "query",
          "name" : "useLocalConfig",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of screen markers expressions",
          "in" : "query",
          "name" : "screenMarker",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Time zone offset for markers time formatting",
          "in" : "query",
          "name" : "timezone",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UAListScreenDefinition"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Provide a list screen definition for a given monitored entity and a screen type",
        "tags" : [ "Unified Analysis" ],
        "x-feature-flag" : "UA_REST_API_V2_PUBLIC_PREVIEW",
        "x-internal-owner" : "piotr.kuchta",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`unifiedAnalysis.read` (Read Unified Analysis page)" ]
      }
    },
    "/ua/list/{entityType}/{screenType}/state/{stateId}" : {
      "put" : {
        "operationId" : "storeListScreenState_1",
        "parameters" : [ {
          "description" : "The entity type.",
          "in" : "path",
          "name" : "entityType",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The screen type. If not specified default is used",
          "in" : "path",
          "name" : "screenType",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The screen state id that should be stored",
          "in" : "path",
          "name" : "stateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of screen markers expressions",
          "in" : "query",
          "name" : "screenMarker",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the screen state."
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Stored the provided list screen state and returns a screen state id that can be used to read the state date again",
        "tags" : [ "Unified Analysis" ],
        "x-feature-flag" : "UA_REST_API_V2_PUBLIC_PREVIEW",
        "x-internal-owner" : "piotr.kuchta",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`unifiedAnalysis.read` (Read Unified Analysis page)" ]
      }
    },
    "/ua/navigation" : {
      "get" : {
        "operationId" : "getReleasedEntityTypes",
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UAReleasedEntityTypes"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Provide a list of entity types that are released and navigation should lead to UA page",
        "tags" : [ "Unified Analysis" ],
        "x-feature-flag" : "UA_REST_API_V2_PUBLIC_PREVIEW",
        "x-internal-owner" : "piotr.kuchta",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`unifiedAnalysis.read` (Read Unified Analysis page)" ]
      }
    },
    "/ua/navigation/{entityId}" : {
      "get" : {
        "operationId" : "isEntityReleased",
        "parameters" : [ {
          "description" : "The ID of the required entity.",
          "in" : "path",
          "name" : "entityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UAReleasedEntity"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Provide information if entity is released and entity navigation should lead to UA page",
        "tags" : [ "Unified Analysis" ],
        "x-feature-flag" : "UA_REST_API_V2_PUBLIC_PREVIEW",
        "x-internal-owner" : "piotr.kuchta",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`unifiedAnalysis.read` (Read Unified Analysis page)" ]
      }
    },
    "/ua/{entityId}" : {
      "get" : {
        "operationId" : "getScreenDefinition",
        "parameters" : [ {
          "description" : "The ID of the required entity.",
          "in" : "path",
          "name" : "entityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A optional screen state state id",
          "in" : "query",
          "name" : "stateId",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If true, screen config will be taken from settings, overriding default one. No effect for custom screens.",
          "in" : "query",
          "name" : "useLocalConfig",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of screen markers expressions",
          "in" : "query",
          "name" : "screenMarker",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Time zone offset for markers time formatting",
          "in" : "query",
          "name" : "timezone",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UAEntityScreenDefinition"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Provide a screen definition for a given monitored entity",
        "tags" : [ "Unified Analysis" ],
        "x-feature-flag" : "UA_REST_API_V2_PUBLIC_PREVIEW",
        "x-internal-owner" : "piotr.kuchta",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`unifiedAnalysis.read` (Read Unified Analysis page)" ]
      }
    },
    "/ua/{entityId}/state/{stateId}" : {
      "put" : {
        "operationId" : "storeScreenState",
        "parameters" : [ {
          "description" : "The ID of the required entity.",
          "in" : "path",
          "name" : "entityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The screen state id that should be stored",
          "in" : "path",
          "name" : "stateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of screen markers expressions",
          "in" : "query",
          "name" : "screenMarker",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the screen state."
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Stored the provided screen state and returns a screen state id that can be used to read the state date again",
        "tags" : [ "Unified Analysis" ],
        "x-feature-flag" : "UA_REST_API_V2_PUBLIC_PREVIEW",
        "x-internal-owner" : "piotr.kuchta",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`unifiedAnalysis.read` (Read Unified Analysis page)" ]
      }
    },
    "/ua/{entityId}/{screenType}" : {
      "get" : {
        "operationId" : "getScreenDefinition_1",
        "parameters" : [ {
          "description" : "The ID of the required entity.",
          "in" : "path",
          "name" : "entityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The screen type. If not specified default is used",
          "in" : "path",
          "name" : "screenType",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A optional screen state state id",
          "in" : "query",
          "name" : "stateId",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "If true, screen config will be taken from settings, overriding default one. No effect for custom screens.",
          "in" : "query",
          "name" : "useLocalConfig",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "description" : "The start of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the relative timeframe of three days is used (`now-3d`).",
          "in" : "query",
          "name" : "from",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The end of the requested timeframe. \n\nYou can use one of the following formats: \n* Timestamp in UTC milliseconds. \n* Human-readable format of `2021-01-25T05:57:01.123+01:00`. If no time zone is specified, UTC is used. You can use a space character instead of the `T`. Seconds and fractions of a second are optional. \n* Relative timeframe, back from now. The format is `now-NU/A`, where `N` is the amount of time, `U` is the unit of time, and `A` is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, `now-1y/w` is one year back, aligned by a week. \nYou can also specify relative timeframe without an alignment: `now-NU`. \nSupported time units for the relative timeframe are: \n   * `m`: minutes \n   * `h`: hours \n   * `d`: days \n   * `w`: weeks \n   * `M`: months \n   * `y`: years \n\nIf not set, the current timestamp is used.",
          "in" : "query",
          "name" : "to",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of screen markers expressions",
          "in" : "query",
          "name" : "screenMarker",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }, {
          "description" : "Time zone offset for markers time formatting",
          "in" : "query",
          "name" : "timezone",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UAEntityScreenDefinition"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Provide a screen definition for a given monitored entity and a screen type",
        "tags" : [ "Unified Analysis" ],
        "x-feature-flag" : "UA_REST_API_V2_PUBLIC_PREVIEW",
        "x-internal-owner" : "piotr.kuchta",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`unifiedAnalysis.read` (Read Unified Analysis page)" ]
      }
    },
    "/ua/{entityId}/{screenType}/state/{stateId}" : {
      "put" : {
        "operationId" : "storeScreenState_1",
        "parameters" : [ {
          "description" : "The ID of the required entity.",
          "in" : "path",
          "name" : "entityId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The screen type. If not specified default is used",
          "in" : "path",
          "name" : "screenType",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The screen state id that should be stored",
          "in" : "path",
          "name" : "stateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "A list of screen markers expressions",
          "in" : "query",
          "name" : "screenMarker",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "description" : "The JSON body of the request. Contains the screen state."
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        }, {
          "OAuth" : [ "environment-api" ]
        } ],
        "summary" : "Stored the provided screen state and returns a screen state id that can be used to read the state date again",
        "tags" : [ "Unified Analysis" ],
        "x-feature-flag" : "UA_REST_API_V2_PUBLIC_PREVIEW",
        "x-internal-owner" : "piotr.kuchta",
        "x-maturity" : "PREVIEW",
        "x-token-scopes" : [ "`unifiedAnalysis.read` (Read Unified Analysis page)" ]
      }
    },
    "/units" : {
      "get" : {
        "description" : "You can narrow down the output by providing filter criteria in the **unitSelector** field.\n\n",
        "operationId" : "allUnits",
        "parameters" : [ {
          "description" : "Selects units to be included to the response. Available criteria: \n* Compatibility: `compatibleTo(\"unit\",\"display-format\")`. Returns units that can be converted to the specified unit. The optional display format (`binary` or `decimal`) argument is supported by bit- and byte-based units and returns only units for the specified format.",
          "in" : "query",
          "name" : "unitSelector",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Defines the list of properties to be included in the response. The ID of the unit is **always** included. The following additional properties are available: \n\n* `displayName`: The display name of the unit. \n* `symbol`: The symbol of the unit. \n* `description`: A short description of the unit.\n\nBy default, the ID, the display name, and the symbol are included. \n\nTo add properties, list them with leading plus `+`. To exclude default properties, list them with leading minus `-`.\n\nTo specify several properties, join them with a comma (for example `fields=+description,-symbol`).\n\nIf you specify just one property, the response contains the unitId and the specified property. To return unit IDs only, specify `unitId` here.",
          "in" : "query",
          "name" : "fields",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnitList"
                }
              }
            },
            "description" : "Success"
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Lists all available units",
        "tags" : [ "Metrics - Units" ],
        "x-internal-owner" : "hannes.gerstmayr",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`metrics.read` (Read metrics)" ]
      }
    },
    "/units/{unitId}" : {
      "get" : {
        "operationId" : "unit",
        "parameters" : [ {
          "description" : "The ID of the required unit.",
          "in" : "path",
          "name" : "unitId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unit"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "description" : "Not found. The requested resource is not found or the query is incorrect."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Gets the properties of the specified unit",
        "tags" : [ "Metrics - Units" ],
        "x-internal-owner" : "hannes.gerstmayr",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`metrics.read` (Read metrics)" ]
      }
    },
    "/units/{unitId}/convert" : {
      "get" : {
        "operationId" : "convert",
        "parameters" : [ {
          "description" : "The ID of the source unit.",
          "in" : "path",
          "name" : "unitId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The value to be converted.",
          "in" : "query",
          "name" : "value",
          "required" : true,
          "schema" : {
            "format" : "double",
            "type" : "number"
          }
        }, {
          "description" : "The ID of the target unit.",
          "in" : "query",
          "name" : "targetUnit",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "The preferred number format. Only taken into account if no target unit is specified.",
          "in" : "query",
          "name" : "numberFormat",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UnitConversionResult"
                }
              }
            },
            "description" : "Success"
          },
          "404" : {
            "description" : "Not found. The requested resource is not found or the query is incorrect."
          }
        },
        "security" : [ {
          "Api-Token" : [ ]
        } ],
        "summary" : "Converts a value of the given source unit into a given target unit if specified, or finds an appropriate unit if no target is specified, respecting the preferred number format if specified.",
        "tags" : [ "Metrics - Units" ],
        "x-internal-owner" : "hannes.gerstmayr",
        "x-supports-personal-access-token" : true,
        "x-token-scopes" : [ "`metrics.read` (Read metrics)" ]
      }
    }
  },
  "servers" : [ {
    "url" : "/api/v2",
    "variables" : { }
  } ],
  "tags" : [ {
    "description" : "Query and ingest metrics",
    "name" : "Metrics"
  }, {
    "description" : "Manage problems and comments",
    "name" : "Problems"
  }, {
    "description" : "Manage events",
    "name" : "Events"
  }, {
    "description" : "Read audit logs",
    "name" : "Audit Logs"
  }, {
    "description" : "Manage network zones",
    "name" : "Network zones"
  }, {
    "description" : "Manage monitored entities",
    "name" : "Monitored entities"
  }, {
    "description" : "Read and ingest logs",
    "name" : "Logs"
  }, {
    "description" : "Manage Log Monitoring agents",
    "name" : "Log Monitoring - Agents"
  }, {
    "description" : "View information about your ActiveGates",
    "name" : "ActiveGates"
  }, {
    "description" : "Manage ActiveGate auto-update settings.",
    "name" : "ActiveGates - Auto-update configuration"
  }, {
    "description" : "Manage ActiveGate auto-update jobs.",
    "name" : "ActiveGates - Auto-update jobs"
  }, {
    "description" : "Read alerts from OneAgent diagnostics",
    "name" : "OneAgent diagnostics"
  }, {
    "description" : "Manage custom tags of monitored entities",
    "name" : "Monitored entities - Custom tags"
  }, {
    "description" : "Manage SLOs",
    "name" : "Service-level objectives"
  }, {
    "description" : "Analyze your deployed components",
    "name" : "Releases"
  }, {
    "description" : "Manage security problems",
    "name" : "Security problems"
  }, {
    "description" : "Read attacks",
    "name" : "Attacks"
  }, {
    "description" : "Manage Davis security advices",
    "name" : "Davis security advisor"
  }, {
    "description" : "Manage Extensions 2.0 life cycle",
    "name" : "Extensions 2.0"
  }, {
    "description" : "View synthetic HTTP monitors last execution details",
    "name" : "Synthetic - HTTP monitors execution"
  }, {
    "description" : "Query countries, regions and cities of worldmap.",
    "name" : "Geographic regions"
  }, {
    "description" : "Manage all capabilities of Hub",
    "name" : "Hub Capabilities"
  }, {
    "description" : "Read entity page definition",
    "name" : "Unified Analysis"
  }, {
    "description" : "Gets the status of ActiveGate tokens enforcement",
    "name" : "ActiveGates - ActiveGate tokens enforcement"
  }, {
    "description" : "Ingest OpenTelemetry traces into Dynatrace",
    "name" : "OpenTelemetry Protocol (OTLP) Trace Ingest"
  }, {
    "description" : "Manage Dynatrace ActiveGate tokens",
    "name" : "Access Tokens - ActiveGate tokens"
  }, {
    "description" : "Manage and execute analyzers",
    "name" : "Analyzers"
  }, {
    "description" : "Manage Dynatrace API tokens",
    "name" : "Access Tokens - API tokens"
  }, {
    "description" : "Manage settings objects",
    "name" : "Settings - Objects"
  }, {
    "description" : "View settings schemas",
    "name" : "Settings - Schemas"
  }, {
    "description" : "Trigger and view information about on-demand synthetic monitor executions",
    "name" : "Synthetic - On-demand monitor executions"
  }, {
    "description" : "Rotate tenant tokens",
    "name" : "Access tokens - Tenant tokens"
  }, {
    "description" : "View metric units",
    "name" : "Metrics - Units"
  } ]
}