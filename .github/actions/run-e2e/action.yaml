name: Run e2e tests
description: Runs the e2e test in the specified environment
inputs:
  flc-namespace:
    description: The namespace FLC uses
    required: true
  flc-environment:
    description: The environment FLC uses
    required: true
  target-branch:
    description: Target branch to run E2E tests over
    required: true
    default: main
  target-image:
    description: Target image to run E2E tests over
    required: false
  tenant1-name:
    description: The name of Tenant 1
    required: true
  tenant1-apitoken:
    description: The API token of Tenant 1
    required: true
  tenant1-apitoken-nosettings:
    description: The API token of Tenant 1 without settings scope
    required: false
  tenant1-dataingesttoken:
    description: The data ingest token of Tenant 1
    required: true
  tenant1-oauth-client-id:
    description: The OAuth client ID of Tenant 1
    required: true
  tenant1-oauth-secret:
    description: The OAuth secret of Tenant 1
    required: true
  tenant1-oauth-urn:
    description: The OAuth urn of Tenant 1
    required: true
  tenant2-name:
    description: The name of Tenant 2
    required: true
  tenant2-apitoken:
    description: The API token of Tenant 2
    required: true
  tenant2-dataingesttoken:
    description: The data ingest token of Tenant 2
    required: true
outputs:
  cluster_status:
    description: Status of the cluster creation ['skipped'|'success']
    value: ${{ steps.create_cluster.outputs.cluster_status }}
runs:
  using: composite
  steps:
    - name: Checkout workflow scripts from ref branch
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        path: ref
    - name: Checkout target branch
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        ref: ${{ inputs.target-branch || 'main' }}
        path: target
    - name: Set up kubectl
      uses: azure/setup-kubectl@776406bce94f63e41d621b960d78ee25c8b76ede # v4.0.1
    - name: Set up go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: "${{ github.workspace }}/target/go.mod"
    - name: Set up helm
      uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1
      with:
        # usually we use latest, but 3.18.0 has bug https://github.com/helm/helm/issues/30890
        version: v3.17.3
    - name: Install gotestsum
      shell: bash
      run: go install gotest.tools/gotestsum@latest
    - name: Create cluster
      id: create_cluster
      shell: bash
      run: ref/.github/scripts/create-cluster.sh
      env:
        FLC_NAMESPACE: ${{ inputs.flc-namespace }}
        FLC_ENVIRONMENT: ${{ inputs.flc-environment }}
    - name: Check cluster status
      id: check_cluster_status
      shell: bash
      run: |
        echo "Cluster status: ${{ steps.create_cluster.outputs.cluster_status }}"
        if [[ "${{ steps.create_cluster.outputs.cluster_status }}" == "skipped" ]]; then
          echo "Cluster creation failed or was skipped. Skipping tests."
          echo "skip_tests=true" >> $GITHUB_OUTPUT
        fi
    - name: Run tests
      shell: bash
      run: ref/.github/scripts/run-e2e-tests.sh
      env:
        FLC_NAMESPACE: ${{ inputs.flc-namespace }}
        FLC_ENVIRONMENT: ${{ inputs.flc-environment }}
        TARGET_BRANCH: ${{ inputs.target-branch || 'main' }}
        TARGET_IMAGE: ${{ inputs.target-image }}
        TENANT1_NAME: ${{ inputs.tenant1-name }}
        TENANT1_APITOKEN: ${{ inputs.tenant1-apitoken }}
        TENANT1_APITOKEN_NOSETTINGS: ${{ inputs.tenant1-apitoken-nosettings }}
        TENANT1_DATAINGESTTOKEN: ${{ inputs.tenant1-dataingesttoken }}
        TENANT1_OAUTH_CLIENT_ID: ${{ inputs.tenant1-oauth-client-id }}
        TENANT1_OAUTH_SECRET: ${{ inputs.tenant1-oauth-secret }}
        TENANT1_OAUTH_URN: ${{ inputs.tenant1-oauth-urn }}
        TENANT2_NAME: ${{ inputs.tenant2-name }}
        TENANT2_APITOKEN: ${{ inputs.tenant2-apitoken }}
        TENANT2_DATAINGESTTOKEN: ${{ inputs.tenant2-dataingesttoken }}
      if: steps.check_cluster_status.outputs.skip_tests != 'true'
    - name: Destroy cluster
      shell: bash
      run: ref/.github/scripts/destroy-cluster.sh
      env:
        FLC_NAMESPACE: ${{ inputs.flc-namespace }}
        FLC_ENVIRONMENT: ${{ inputs.flc-environment }}
      if: always()
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: target/results/*.xml
      if: always()
