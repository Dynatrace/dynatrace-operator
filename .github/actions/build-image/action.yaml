name: Build Docker Image
description: Builds the operator docker image
inputs:
  platform:
    description: The platform for which the image will be built
    required: true
  labels:
    description: The labels for the built image
    required: true
  image-tag:
    description: The tag of the built image
    required: true
runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@ecf95283f03858871ff00b787d79c419715afc34 # v2.7.0
    - name: Set up Golang
      uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
      with:
        go-version-file: "${{ github.workspace }}/go.mod"
    - name: Prepare build parameters
      id: prep
      shell: bash
      run: |
        hack/build/ci/prepare-build-variables.sh
    - name: Download third party licenses
      shell: bash
      run: |
        hack/build/ci/third-party-licenses.sh
    - name: Build target
      uses: docker/build-push-action@44ea916f6c540f9302d50c2b1e5a8dc071f15cdf # v4.1.0
      with:
        builder: ${{ steps.buildx.outputs.name }}
        build-args: |
          GO_LINKER_ARGS=${{ steps.prep.outputs.go_linker_args }}
          GO_BUILD_TAGS=${{ steps.prep.outputs.go_build_tags }}
        context: .
        file: ./Dockerfile
        platforms: linux/${{ inputs.platform }}
        push: false
        tags: operator-${{ inputs.platform }}:${{ inputs.image-tag }}
        labels: ${{ inputs.labels }}
        outputs: type=docker,dest=/tmp/operator-${{ inputs.platform }}.tar
    - name: Upload artifact
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: operator-${{ inputs.platform }}
        path: /tmp/operator-${{ inputs.platform }}.tar
        retention-days: 1

