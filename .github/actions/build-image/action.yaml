name: Build Docker Image
description: Builds the operator docker image
inputs:
  platform:
    description: The platform for which the image will be built
    required: true
  labels:
    description: The labels for the built image
    required: true
  image-tag:
    description: The tag of the built image
    required: true
runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c # v3.1.0
    - name: Set up Golang
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version-file: "${{ github.workspace }}/go.mod"
    - name: Prepare build parameters
      id: prep
      shell: bash
      run: |
        hack/build/ci/prepare-build-variables.sh
    - name: Download third party licenses
      shell: bash
      run: |
        hack/build/ci/third-party-licenses.sh
    - name: Build target
      uses: docker/build-push-action@af5a7ed5ba88268d5278f7203fb52cd833f66d6e # v5.2.0
      with:
        builder: ${{ steps.buildx.outputs.name }}
        build-args: |
          GO_LINKER_ARGS=${{ steps.prep.outputs.go_linker_args }}
          GO_BUILD_TAGS=${{ steps.prep.outputs.go_build_tags }}
        context: .
        file: ./Dockerfile
        platforms: linux/${{ inputs.platform }}
        push: false
        tags: operator-${{ inputs.platform }}:${{ inputs.image-tag }}
        labels: ${{ inputs.labels }}
        outputs: type=docker,dest=/tmp/operator-${{ inputs.platform }}.tar
    - name: Upload artifact
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
      with:
        name: operator-${{ inputs.platform }}
        path: /tmp/operator-${{ inputs.platform }}.tar
        retention-days: 1

