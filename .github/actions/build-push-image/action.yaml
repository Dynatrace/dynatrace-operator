name: Build and Push Docker Image
description: Builds and pushes the operator docker image
inputs:
  platforms:
    description: The platforms for which the image will be built
    default: linux/amd64,linux/arm64
    required: true
  annotation:
    description: The annotation added to the built image
    required: false
  dockerfile:
    description: The path to the Dockerfile to be used
    default: ./Dockerfile
  images:
    description: Base names of the image tags
    required: false
  suffix:
    description: Suffix appended to image tags
    required: false
outputs:
  digest:
    description: The digest of the built image
    value: ${{ steps.build-target.outputs.digest }}
runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
    - name: Set up Golang
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version-file: "${{ github.workspace }}/go.mod"
    - name: Prepare build parameters
      id: prep
      shell: bash
      run: |
        hack/build/ci/prepare-build-variables.sh
    - name: Download third party licenses
      shell: bash
      run: |
        hack/build/ci/third-party-licenses.sh
    - name: Set build date
      shell: bash
      id: set-build-date
      run: |
        echo "date=$(date --iso-8601)" >> $GITHUB_OUTPUT
    - name: Docker metadata
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
      id: meta
      env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: ${{ contains(inputs.platforms, ',') && 'manifest,index' || 'manifest' }}
      with:
        images: ${{ inputs.images }}
        flavor: |
          suffix=${{ inputs.suffix }}
        labels: |
          ${{ inputs.labels }}
          quay.expires-after=${{ (github.ref_type != 'tag' && !startsWith(github.ref_name, 'release-') && github.ref_name != 'main') && '10d' || '' }}
          vcs-ref=${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
          build-date=${{ steps.set-build-date.outputs.date }}
        tags: |
          # PRs
          type=raw,value=snapshot-${{ github.head_ref }},enable=${{ github.event_name == 'pull_request' }}
          # main branches
          type=raw,value=snapshot,enable=${{ github.ref_name == 'main' }}
          # tags
          type=raw,value=${{ github.ref_name }},enable=${{ github.ref_type == 'tag' }}
          # everything else
          type=raw,value=snapshot-${{ steps.prep.outputs.docker_image_tag_without_prefix }},enable=${{ !(github.event_name == 'pull_request' || github.ref_name == 'main' || github.ref_type == 'tag') }},priority=0
        annotations: |
          ${{ inputs.annotation }}
          version=${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
    - name: Build target
      id: build-target
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
      with:
        builder: ${{ steps.buildx.outputs.name }}
        build-args: |
          GO_LINKER_ARGS=${{ steps.prep.outputs.go_linker_args }}
          GO_BUILD_TAGS=${{ steps.prep.outputs.go_build_tags }}
        context: .
        file: ${{ inputs.dockerfile }}
        provenance: false
        platforms: ${{ inputs.platforms }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: |
          ${{ steps.meta.outputs.labels }}
        annotations: |
          ${{ steps.meta.outputs.annotations }}

