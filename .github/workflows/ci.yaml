name: CI

on:
  push:
    branches:
      - main
      - release-*
  pull_request:
    branches:
      - "*"

permissions:
  contents: read

env:
  DOCKER_REGISTRY: quay.io
  DOCKER_REPOSITORY: dynatrace/dynatrace-operator
  PLATFORMS: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
  PR_PLATFORMS: linux/amd64,linux/arm64

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      go_changed: ${{ steps.go-files.outputs.any_changed }}
      docker_changed: ${{ steps.dockerfile.outputs.any_changed }}
      helm_changed: ${{ steps.helm.outputs.any_changed }}
      prerequisites_changed: ${{ steps.prerequisites.outputs.any_changed }}
      ci_changed: ${{ steps.ci.outputs.any_changed }}
      is_protected_branch: ${{ steps.is-protected-branch.outputs.is_protected_branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Check if it is a protected branch
        id: is-protected-branch
        run: |
          if [[ "$GITHUB_REF" == "refs/heads/main" || "$GITHUB_REF" == refs/heads/release-* ]]; then
            echo "is_protected_branch=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_protected_branch=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Detect CI file changes
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        id: ci
        with:
          files: |
            .github/workflows/**
            .github/actions/**
          base_sha: ${{ github.event_name == 'pull_request' && 'HEAD^' || github.event.before }}
      - name: Detect Go file changes
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        id: go-files
        with:
          files: |
            **/*.go
            go.mod
          base_sha: ${{ github.event_name == 'pull_request' && 'HEAD^' || github.event.before }}
      - name: Detect Dockerfile changes
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        id: dockerfile
        with:
          files: |
            Dockerfile
          base_sha: ${{ github.event_name == 'pull_request' && 'HEAD^' || github.event.before }}
      - name: Detect Helm config changes
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        id: helm
        with:
          files: |
            config/**
          base_sha: ${{ github.event_name == 'pull_request' && 'HEAD^' || github.event.before }}
      - name: Detect prerequisites.mk changes
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        id: prerequisites
        with:
          files: |
            hack/make/prerequisites.mk
          base_sha: ${{ github.event_name == 'pull_request' && 'HEAD^' || github.event.before }}
      - name: List Changed Files
        run: |
          echo "CI changed: ${{ steps.ci.outputs.all_changed_files }}"
          echo "Go changed: ${{ steps.go-files.outputs.all_changed_files }}"
          echo "Dockerfile changed: ${{ steps.dockerfile.outputs.all_changed_files }}"
          echo "Helm changed: ${{ steps.helm.outputs.all_changed_files }}"
          echo "Prerequisites changed: ${{ steps.prerequisites.outputs.all_changed_files }}"

  helm-test:
    needs: detect-changes
    if: needs.detect-changes.outputs.is_protected_branch || needs.detect-changes.outputs.helm_changed || needs.detect-changes.outputs.prerequisites_changed || needs.detect-changes.outputs.ci_changed
    name: Run helm unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          # usually we use latest, but 3.18.0 has bug https://github.com/helm/helm/issues/30890
          version: v3.17.3
      - name: Run Unit tests
        id: helm-unittest
        run: |
          make test/helm/unit

  helm-lint:
    needs: detect-changes
    if: needs.detect-changes.outputs.is_protected_branch || needs.detect-changes.outputs.helm_changed || needs.detect-changes.outputs.prerequisites_changed || needs.detect-changes.outputs.ci_changed
    name: Run helm linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          # usually we use latest, but 3.18.0 has bug https://github.com/helm/helm/issues/30890
          version: v3.17.3
      - name: Run Linting
        id: helm-linting
        run: |
          make test/helm/lint

  tests:
    needs: detect-changes
    if: needs.detect-changes.outputs.is_protected_branch || needs.detect-changes.outputs.go_changed || needs.detect-changes.outputs.prerequisites_changed || needs.detect-changes.outputs.ci_changed
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Golang
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "${{ github.workspace }}/go.mod"
      - name: Run Unit tests and Integration tests
        id: unittest
        run: |
          make go/test
          make go/integration_test
      - name: Check test coverage
        id: check-code-coverage
        run: |
          make go/check-coverage

  linting:
    needs: detect-changes
    if: needs.detect-changes.outputs.is_protected_branch || needs.detect-changes.outputs.go_changed || needs.detect-changes.outputs.prerequisites_changed || needs.detect-changes.outputs.ci_changed
    name: Run linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "${{ github.workspace }}/go.mod"
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          # renovate depName=github.com/golangci/golangci-lint
          version: v2.2.1
          args: --build-tags e2e --timeout 300s
          skip-cache: true
      - name: Run deadcode
        id: deadcode
        run: |
          make go/deadcode

  generated-files:
    name: Check generated files
    needs: detect-changes
    if: needs.detect-changes.outputs.is_protected_branch || needs.detect-changes.outputs.go_changed || needs.detect-changes.outputs.prerequisites_changed || needs.detect-changes.outputs.ci_changed
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: "${{ github.workspace }}/go.mod"
      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          # usually we use latest, but 3.18.0 has bug https://github.com/helm/helm/issues/30890
          version: v3.17.3
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      - name: Check deepcopy files are up-to-date
        id: deepcopy
        run: |
          make manifests/deepcopy
          git diff --exit-code
      - name: Check automatic generated docs are up-to-date
        id: doc
        run: |
          make doc
          git diff --exit-code
      - name: Check mocks are up-to-date
        id: mockery
        run: |
          make prerequisites/mockery
          make go/gen_mocks
          git diff --exit-code

  security:
    needs: detect-changes
    if: needs.detect-changes.outputs.is_protected_branch || needs.detect-changes.outputs.go_changed || needs.detect-changes.outputs.docker_changed || needs.detect-changes.outputs.ci_changed
    name: Code security scanning alerts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@b98d498629f1c368650224d6d212bf7dfa89e4bf # v0.4.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_API_TOKEN }}
        with:
          args: --severity-threshold=high

  markdown-lint:
    name: Lint markdown files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Lint markdown files
        uses: articulate/actions-markdownlint@87f495d21507d6844dc917a01e742eaaa45049c0 # v1.1.0
        with:
          config: .markdownlint.json
          # renovate depName=github.com/igorshubovych/markdownlint-cli
          version: v0.45.0

  prepare:
    name: Prepare properties
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Prepare build parameters
        id: prep
        run: |
          hack/build/ci/prepare-build-variables.sh
    outputs:
      labels: ${{ steps.prep.outputs.docker_image_labels }}
      version: ${{ steps.prep.outputs.docker_image_tag }}

  build-push:
    needs: [detect-changes, prepare]
    if: needs.detect-changes.outputs.is_protected_branch || needs.detect-changes.outputs.go_changed || needs.detect-changes.outputs.docker_changed || needs.detect-changes.outputs.ci_changed
    name: Build images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Login to Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Build image
        uses: ./.github/actions/build-push-image
        with:
          platforms: ${{github.ref_protected && env.PLATFORMS || env.PR_PLATFORMS }}
          labels: ${{ needs.prepare.outputs.labels }}
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}:${{ needs.prepare.outputs.version }}
          annotation: "version=${{ needs.prepare.outputs.version }}"

  run-preflight:
    name: Run preflight on quay.io without submitting results when merging to main
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: Release
    needs: [build-push, prepare]
    runs-on: ubuntu-latest
    env:
      SCAN_REGISTRY: "quay.io"
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Run preflight
        uses: ./.github/actions/preflight
        with:
          version: ${{ needs.prepare.outputs.version }}
          registry: ${{ env.DOCKER_REGISTRY }}
          repository: ${{ env.DOCKER_REPOSITORY }}
          report-name: "preflight.json"
          should-submit: "false"
