name: Release FIPS images
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+ # include prerelease tags too

jobs:
  prepare:
    permissions:
      contents: read
      id-token: write
    name: Prepare properties
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Prepare build parameters
        id: prep
        run: |
          hack/build/ci/prepare-build-variables.sh
    outputs:
      labels: ${{ steps.prep.outputs.docker_image_labels }}
      version: ${{ steps.prep.outputs.docker_image_tag }}

  build-images:
    name: Build images
    needs: [prepare]
    environment: Release
    permissions:
      id-token: write
    strategy:
      matrix:
        platform: [linux/arm64, linux/amd64]
        include:
          - platform: linux/arm64
            image-postfix: fips-arm64
            runner: ubuntu-24.04-arm
          - platform: linux/amd64
            image-postfix: fips-amd64
            runner: ubuntu-latest
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Login to Docker
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: ${{ secrets.ECR_IMAGEPUSH_ROLE }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: public
      - name: Build ${{ matrix.platform }} image
        uses: ./.github/actions/build-push-image
        env:
            ECR_IMAGE: public.ecr.aws/${{ secrets.ECR_REPOSITORY }}
            DOCKER_IMAGE: docker.io/${{ secrets.DOCKERHUB_REPOSITORY }}
        with:
          platforms: ${{ matrix.platform }}
          images: ${{ env.DOCKER_IMAGE }},${{ env.ECR_IMAGE }}
          suffix: ${{ matrix.image-postfix }}
          dockerfile: ./fips.Dockerfile

  index:
    name: Create image-index
    needs: [prepare, build-images]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment: Release
    strategy:
      matrix:
        registry: [dockerhub, amazon-ecr]
        include:
          - registry: dockerhub
            url: docker.io
            repository: DOCKERHUB_REPOSITORY
          - registry: amazon-ecr
            url: public.ecr.aws
            repository: ECR_REPOSITORY
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Login to Docker
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: ${{ secrets.ECR_IMAGEPUSH_ROLE }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registry-type: public
      - name: Create image-index manifest for ${{matrix.registry}}
        id: image-index
        env:
          IMAGE: ${{ matrix.url }}/${{ secrets[matrix.repository] }}:${{ needs.prepare.outputs.version }}-fips
        shell: bash
        run: |
          hack/build/ci/create-image-index.sh "${IMAGE}"
      - name: Sign images for ${{matrix.registry}}
        uses: ./.github/actions/sign-image
        with:
          image: ${{ matrix.url }}/${{ secrets[matrix.repository] }}:${{ needs.prepare.outputs.version }}@${{ steps.image-index.outputs.digest }}
          signing-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
          signing-password: ${{ secrets.COSIGN_PASSWORD }}
      - name: Create sbom for ${{matrix.registry}}
        id: sbom
        uses: aquasecurity/trivy-action@f9424c10c36e288d5fa79bd3dfd1aeb2d6eae808 # 0.33.0
        with:
          image-ref: ${{ matrix.url }}/${{ secrets[matrix.repository] }}:${{ needs.prepare.outputs.version }}@${{ steps.image-index.outputs.digest }}
          format: 'cyclonedx'
          output: 'result.json'
          skip-dirs: '/usr/share/dynatrace-operator/third_party_licenses'
          skip-files: '/usr/local/bin/dynatrace-operator'
      - name: Upload sbom to ${{matrix.registry}}
        uses: ./.github/actions/upload-sbom
        with:
          image: ${{ matrix.url }}/${{ secrets[matrix.repository] }}:${{ needs.prepare.outputs.version }}@${{ steps.image-index.outputs.digest }}
          sbom: 'result.json'
          signing-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
          signing-password: ${{ secrets.COSIGN_PASSWORD }}
