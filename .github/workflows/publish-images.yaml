name: Publish images

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

permissions:
  contents: read
  id-token: write

jobs:
  prepare:
    name: Prepare properties
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - name: Prepare build parameters
        id: prep
        run: |
          hack/build/ci/prepare-build-variables.sh
      - name: Docker metadata
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea # v4.1.1
        id: meta
        with:
          images: dynatrace/dynatrace-operator
          tags: ${{ steps.prep.outputs.docker_image_tag }}
          labels: |
            ${{ steps.prep.outputs.docker_image_labels }}
            vcs-ref=${{ github.sha }}
    outputs:
      labels: ${{ steps.meta.outputs.labels }}
      version: ${{ steps.prep.outputs.docker_image_tag }}

  build:
    name: Build images
    runs-on: ubuntu-latest
    needs: [prepare]
    strategy:
      matrix:
        platform: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - name: Build image
        uses: ./.github/actions/build-image
        with:
          platform: ${{ matrix.platform }}
          labels: ${{ needs.prepare.outputs.labels }}
          image-tag: ${{ needs.prepare.outputs.version }}

  push:
    name: Push images
    environment: Release
    needs: [prepare, build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [amd64, arm64]
        registry: [gcr, dockerhub, rhcc]
        include:
        - registry: rhcc
          url: scan.connect.redhat.com
          repository: RHCC_REPOSITORY
          username: RHCC_USERNAME
          password: RHCC_PASSWORD
        - registry: gcr
          url: gcr.io
          repository: GCR_REPOSITORY
          username: GCR_USERNAME
          password: GCR_JSON_KEY
        - registry: dockerhub
          url: docker.io
          repository: DOCKERHUB_REPOSITORY
          username: DOCKERHUB_USERNAME
          password: DOCKERHUB_PASSWORD
    steps:
      - name: Checkout
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - name: Login to Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ${{ matrix.url }}
          username: ${{ secrets[matrix.username] }}
          password: ${{ secrets[matrix.password] }}
      - name: Push ${{matrix.platform}} to ${{matrix.registry}}
        uses: ./.github/actions/upload-image
        if: matrix.platform == 'amd64' || matrix.registry != 'rhcc'
        with:
          platform: ${{ matrix.platform }}
          labels: ${{ needs.prepare.outputs.labels }}
          version: ${{ needs.prepare.outputs.version }}
          registry: ${{ matrix.url }}
          repository: ${{ secrets[matrix.repository] }}
      - name: Run preflight
        if: matrix.registry == 'rhcc' && matrix.platform == 'amd64'
        uses: ./.github/actions/preflight
        with:
         version: ${{ needs.prepare.outputs.version }}
         registry: ${{ matrix.url }}
         repository: ${{ secrets[matrix.repository] }}
         report-name: "preflight.json"
         redhat-project-id: ${{ secrets.REDHAT_PROJECT_ID }}
         pyxis-api-token: ${{ secrets.PYXIS_API_TOKEN }}
      - name: Sign image for ${{matrix.registry}}
        if: matrix.registry != 'rhcc'
        uses: ./.github/actions/sign-image
        with:
          image: ${{ matrix.url }}/${{ secrets[matrix.repository] }}:${{ needs.prepare.outputs.version }}-${{ matrix.platform }}
          signing-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
          signing-password: ${{ secrets.COSIGN_PASSWORD }}

  manifest:
    name: Create manifests
    environment: Release
    needs: [prepare, push]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        registry: [gcr, dockerhub]
        include:
          - registry: gcr
            url: gcr.io
            repository: GCR_REPOSITORY
            username: GCR_USERNAME
            password: GCR_JSON_KEY
          - registry: dockerhub
            url: docker.io
            repository: DOCKERHUB_REPOSITORY
            username: DOCKERHUB_USERNAME
            password: DOCKERHUB_PASSWORD
    steps:
      - name: Checkout
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0
      - name: Login to Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ${{ matrix.url }}
          username: ${{ secrets[matrix.username] }}
          password: ${{ secrets[matrix.password] }}
      - name: Create manifests for ${{matrix.registry}}
        uses: ./.github/actions/create-manifests
        with:
          version: ${{ needs.prepare.outputs.version }}
          registry: ${{ matrix.url }}
          repository: ${{ secrets[matrix.repository] }}
          combined: true
      - name: Sign manifests for ${{matrix.registry}}
        uses: ./.github/actions/sign-image
        with:
          image: ${{ matrix.url }}/${{ secrets[matrix.repository] }}:${{ needs.prepare.outputs.version }}
          signing-key: ${{ secrets.COSIGN_PRIVATE_KEY }}
          signing-password: ${{ secrets.COSIGN_PASSWORD }}
