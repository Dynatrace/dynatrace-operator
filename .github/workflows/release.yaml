name: Release
on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+ # include prerelease tags too


jobs:
  pre-release:
    name: Create pre-release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        registry: [ dockerhub ]
        include:
          - registry: dockerhub
            url: docker.io
            repository: DOCKERHUB_REPOSITORY
    steps:
      - name: Checkout code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: Setup Golang
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version-file: "${{ github.workspace }}/go.mod"
      - name: Download dependencies
        id: depdownload
        run: |
          hack/build/ci/install-cgo-dependencies.sh
      - name: Set up Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
      - name: Generate release notes
        id: generate_notes
        run: |
          hack/build/ci/generate-release-notes.sh
      - name: Generate manifests
        run: |
          export "IMAGE=${{ matrix.url }}/${{ secrets[matrix.repository] }}"
          export "TAG=$(echo "${{ github.ref }}" | awk -F"/" '{print $3}')"
          export "CHART_VERSION_VAR=$(echo "${{ github.ref_name }}")"
          make manifests
      - name: Generate CRD
        run: make manifests/crd/release
      - name: Pre-release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ./CHANGELOG.md
          files: |
            config/deploy/kubernetes/kubernetes-all.yaml
            config/deploy/openshift/openshift-all.yaml
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          draft: true


