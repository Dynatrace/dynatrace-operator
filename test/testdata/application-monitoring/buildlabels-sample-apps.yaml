apiVersion: v1
kind: Namespace
metadata:
  name: disabled-build-labels-namespace
  labels:
    inject: dynakube
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  namespace: disabled-build-labels-namespace
spec:
  replicas: 3
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: myapp
          image: nginx:latest
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Namespace
metadata:
  name: default-build-labels-namespace
  labels:
    inject: dynakube-labels
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  namespace: default-build-labels-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
        app.kubernetes.io/version: "app-kubernetes-io-version"
        app.kubernetes.io/part-of: "app-kubernetes-io-part-of"
        my.domain/version: "my-domain-version"
        my.domain/product: "my-domain-product"
        my.domain/stage: "my-domain-stage"
        my.domain/build-version: "my-domain-build-version"
    spec:
      containers:
        - name: myapp
          image: nginx:latest
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Namespace
metadata:
  name: custom-build-labels-namespace
  annotations:
    mapping.release.dynatrace.com/version: "metadata.labels['my.domain/version']"
    mapping.release.dynatrace.com/product: "metadata.labels['my.domain/product']"
    mapping.release.dynatrace.com/stage: "metadata.labels['my.domain/stage']"
    mapping.release.dynatrace.com/build-version: "metadata.labels['my.domain/build-version']"
  labels:
    inject: dynakube-labels
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  namespace: custom-build-labels-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
        app.kubernetes.io/version: "app-kubernetes-io-version"
        app.kubernetes.io/part-of: "app-kubernetes-io-part-of"
        my.domain/version: "my-domain-version"
        my.domain/product: "my-domain-product"
        my.domain/stage: "my-domain-stage"
        my.domain/build-version: "my-domain-build-version"
    spec:
      containers:
        - name: myapp
          image: nginx:latest
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Namespace
metadata:
  name: preserved-build-labels-namespace
  annotations:
    mapping.release.dynatrace.com/version: "metadata.labels['my.domain/version']"
    mapping.release.dynatrace.com/product: "metadata.labels['my.domain/product']"
    mapping.release.dynatrace.com/stage: "metadata.labels['my.domain/stage']"
    mapping.release.dynatrace.com/build-version: "metadata.labels['my.domain/build-version']"
  labels:
    inject: dynakube-labels
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  namespace: preserved-build-labels-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
        app.kubernetes.io/version: "app-kubernetes-io-version"
        app.kubernetes.io/part-of: "app-kubernetes-io-part-of"
        my.domain/version: "my-domain-version"
        my.domain/product: "my-domain-product"
        my.domain/stage: "my-domain-stage"
        my.domain/build-version: "my-domain-build-version"
        my-version: "my-version"
        my-product: "my-product"
        my-stage: "my-stage"
        my-build-version: "my-build-version"
    spec:
      containers:
        - name: myapp
          image: nginx:latest
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
          env:
            - name: DT_RELEASE_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.labels['my-version']"
            - name: DT_RELEASE_STAGE
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.labels['my-stage']"
            - name: DT_RELEASE_PRODUCT
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.labels['my-product']"
            - name: DT_RELEASE_BUILD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.labels['my-build-version']"
---
apiVersion: v1
kind: Namespace
metadata:
  name: invalid-build-labels-namespace
  annotations:
    mapping.release.dynatrace.com/stage: "metadata.labels['my.domain/invalid-stage']"
    mapping.release.dynatrace.com/build-version: "metadata.labels['my.domain/invalid-build-version']"
  labels:
    inject: dynakube-labels
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  namespace: invalid-build-labels-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
        app.kubernetes.io/version: "app-kubernetes-io-version"
        app.kubernetes.io/part-of: "app-kubernetes-io-part-of"
        my.domain/version: "my-domain-version"
        my.domain/product: "my-domain-product"
        my.domain/stage: "my-domain-stage"
        my.domain/build-version: "my-domain-build-version"
    spec:
      containers:
        - name: myapp
          image: nginx:latest
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
