# With cloudNative enabled, namespaces matching namespaceSelector ==> namespaces get labeled
# With cloudNative enabled => oneagent daemonset is deployed with envvar ONEAGENT_DISABLE_CONTAINER_INJECTION
apiVersion: kuttl.dev/v1beta1
kind: TestAssert
timeout: 600
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    dk-mode: cloud-native
    dynakube.internal.dynatrace.com/instance: dynakube
  name: inject-into-cloud-native
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    dk-mode: cloud-native
    dynakube.internal.dynatrace.com/instance: dynakube
  name: already-present-cloud-native
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dynakube-oneagent
  namespace: dynatrace
  # labels: version field can change ==> can't test
  #   app.kubernetes.io/component: oneagent
  #   app.kubernetes.io/created-by: dynakube
  #   app.kubernetes.io/name: dynatrace-operator
  #   app.kubernetes.io/version: snapshot
  #   component.dynatrace.com/feature: cloud_native_fullstack
  ownerReferences:
  - apiVersion: dynatrace.com/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: DynaKube
    name: dynakube
spec:
  template:
    # metadata:
      # labels: version field can change ==> can't test
      #   app.kubernetes.io/component: oneagent
      #   app.kubernetes.io/created-by: dynakube
      #   app.kubernetes.io/name: dynatrace-operator
      #   app.kubernetes.io/version: snapshot
      #   component.dynatrace.com/feature: cloud_native_fullstack
    spec:
      containers:
      - name: dynatrace-oneagent
        env:
        - name: DT_K8S_CLUSTER_ID
        - name: DT_K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: ONEAGENT_DISABLE_CONTAINER_INJECTION
          value: "true"
        - name: ONEAGENT_READ_ONLY_MODE

