# (mandatory)
# Path to coverprofile file (output of `go test -coverprofile` command).
#
# For cases where there are many coverage profiles, such as when running
# unit tests and integration tests separately, you can combine all those
# profiles into one. In this case, the profile should have a comma-separated list
# of profile files, e.g., 'cover_unit.out,cover_integration.out'.
profile: coverage.txt

# (optional; but recommended to set)
# When specified reported file paths will not contain local prefix in the output
local-prefix: "github.com/dynatrace/dynatrace-operator"

# Holds coverage thresholds percentages, values should be in range [0-100]
threshold:
  # (optional; default 0)
  # The minimum coverage that each file should have
  # we can add it later
  # file: 70

  # (optional; default 0)
  # The minimum coverage that each package should have
  #  package: 80

  # (optional; default 0)
  # The minimum total coverage project should have
  total: 71

# Holds regexp rules which will override thresholds for matched files or packages
# using their paths.
#
# The First rule from this list that matches file or package is going to apply
# a new threshold to it. If a project has multiple rules that match the same path,
# override rules should be listed in order from specific to more general rules.
override:
  # Increase the coverage threshold to 100% for `foo` package
  # (default is 80, as configured above in this example)
  - threshold: 100
    path: ^pkg/lib/foo$

# Holds regexp rules which will exclude matched files or packages
# from coverage statistics
exclude:
  # Exclude files or packages matching their paths
  paths:
    - \.pb\.go$    # excludes all protobuf generated files
    - ^test/mocks
    - /test/*

# NOTES:
# - symbol `/` in all paths regexps will be replaced by current OS file path separator
#   to properly work on Windows
