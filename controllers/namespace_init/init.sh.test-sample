#!/usr/bin/env bash

set -eu

if [[ -f "/var/lib/dynatrace/oneagent/agent/config/ruxithost.id" ]]; then
  echo "WARNING: full-stack OneAgent has been injected to this container. App-only and full-stack injection can conflict with each other."
fi

api_url="https://test-url/api"
bin_dir="/mnt/bin"
config_dir="/mnt/config"
share_dir="/mnt/share"
paas_token="42"
proxy=""
skip_cert_checks="false"
custom_ca="false"
fail_code=0
cluster_id="42"

declare -A im_nodes
im_nodes=(
  ["node1"]="abc12345"
  ["node2"]="abc12345"
)

set +u
host_tenant="${im_nodes[${K8S_NODE_NAME}]}"
set -u

if [[ "${FAILURE_POLICY}" == "fail" ]]; then
  fail_code=1
fi

if [[ "${MODE}" == "installer" ]]; then
  archive="${bin_dir}/tmp.$RANDOM"

  curl_params=(
    "--silent"
    "--output" "${archive}"
  )

  if [[ "${INSTALLER_URL}" != "" ]]; then
    curl_params+=("${INSTALLER_URL}")
  else
    curl_params+=(
      "${api_url}/v1/deployment/installer/agent/unix/paas/latest?flavor=${FLAVOR}&include=${TECHNOLOGIES}&bitness=64"
      "--header" "Authorization: Api-Token ${paas_token}"
    )
  fi

  if [[ "${skip_cert_checks}" == "true" ]]; then
    curl_params+=("--insecure")
  fi

  if [[ "${custom_ca}" == "true" ]]; then
    curl_params+=("--cacert" "${config_dir}/ca.pem")
  fi

  if [[ "${proxy}" != "" ]]; then
    curl_params+=("--proxy" "${proxy}")
  fi

  echo "Downloading OneAgent package..."
  if ! curl "${curl_params[@]}"; then
    echo "Failed to download the OneAgent package."
    exit "${fail_code}"
  fi

  echo "Unpacking OneAgent package..."
  if ! unzip -o -d "${bin_dir}" "${archive}"; then
    echo "Failed to unpack the OneAgent package."
    mv "${archive}" "${bin_dir}/package.zip"
    exit "${fail_code}"
  fi
fi

echo "Configuring OneAgent..."
echo -n "${INSTALLPATH}/agent/lib64/liboneagentproc.so" >>"${share_dir}/ld.so.preload"

for i in $(seq 1 $CONTAINERS_COUNT); do
  container_name_var="CONTAINER_${i}_NAME"
  container_image_var="CONTAINER_${i}_IMAGE"

  container_name="${!container_name_var}"
  container_image="${!container_image_var}"

  container_conf_file="${share_dir}/container_${container_name}.conf"

  echo "Writing ${container_conf_file} file..."
  echo "[container]
containerName ${container_name}
imageName ${container_image}
k8s_fullpodname ${K8S_PODNAME}
k8s_poduid ${K8S_PODUID}
k8s_containername ${container_name}
k8s_basepodname ${K8S_BASEPODNAME}
k8s_namespace ${K8S_NAMESPACE}" >>${container_conf_file}

  if [[ ! -z "${host_tenant}" ]]; then
    if [[ "abc12345" == "${host_tenant}" ]]; then
      echo "k8s_node_name ${K8S_NODE_NAME}
k8s_cluster_id ${cluster_id}" >>${container_conf_file}
    fi

    echo "
[host]
tenant ${host_tenant}" >>${container_conf_file}
  fi
done
